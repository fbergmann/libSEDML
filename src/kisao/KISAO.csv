Class ID,Preferred Label,Synonyms,Definitions,Obsolete,CUI,Semantic Types,Parents,has characteristic,has parameter,has Runge-Kutta method order,has type,http://data.bioontology.org/metadata/prefixIRI,http://protege.stanford.edu/plugins/owl/protege#defaultLanguage,http://purl.org/dc/terms/created,http://purl.org/dc/terms/creator,http://purl.org/dc/terms/rights,http://www.biomodels.net/kisao/KISAO#isImplementedIn,http://www.biomodels.net/kisao/KISAO#isOrganizational,http://www.w3.org/2004/02/skos/core#altLabel,http://www.w3.org/2004/02/skos/core#definition,is characteristic of,is generalization of,is hybrid of,is parameter of,is similar to,is used by,uses
http://www.biomodels.net/kisao/KISAO#KISAO_0000654,amount rate,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000834,,,,,kisao:KISAO_0000654,,2021-06-04,JRK,,,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000386,scaled preconditioned generalized minimal residual method,SPGMR,"A scaled preconditioned version of 'generalized minimal residual algorithm' [http://identifiers.org/biomodels.kisao/KISAO_0000353]. For linear system Ax = b a preconditioner matrix P that approximates A is sought, for which linear system Px = b can be solved easily. Preconditioning is applied on the left only. Scaling is done using diagonal matrix D whose diagonal elements are weights w^i = rtol|y^i| +atol^i, where rtol is 'relative tolerance' [http://identifiers.org/biomodels.kisao/KISAO_0000209] and atol is 'absolute tolerance' [http://identifiers.org/biomodels.kisao/KISAO_0000211].",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000353,,,,,kisao:KISAO_0000386,,2011-07-18,AZ,,,,SPGMR,"A scaled preconditioned version of 'generalized minimal residual algorithm' [http://identifiers.org/biomodels.kisao/KISAO_0000353]. For linear system Ax = b a preconditioner matrix P that approximates A is sought, for which linear system Px = b can be solved easily. Preconditioning is applied on the left only. Scaling is done using diagonal matrix D whose diagonal elements are weights w^i = rtol|y^i| +atol^i, where rtol is 'relative tolerance' [http://identifiers.org/biomodels.kisao/KISAO_0000209] and atol is 'absolute tolerance' [http://identifiers.org/biomodels.kisao/KISAO_0000211].",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000621,stochastic simulation leaping method,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000333,,,,,kisao:KISAO_0000621,,2021-04-27,JRK,,,true,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000852,count ignoring NaN,,"The number of non-zero elements of a set of values, ignoring Nan entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000852,,2021-10-09,MK,,,,,"The number of non-zero elements of a set of values, ignoring Nan entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000404,symmetricity of matrix,,"In linear algebra, a symmetric matrix is a square matrix that is equal to its transpose.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000370,,,,,kisao:KISAO_0000404,,2011-07-19,AZ,,,,,"In linear algebra, a symmetric matrix is a square matrix that is equal to its transpose.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000539,minimum factor to change step size by,fac1|dfactor,Minimum factor to increase/decrease step size by in one step. The new step-size is chosen subject to the restriction fac1 <= current step-size / old step-size <= fac2.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000539,,2020-10-29,JRK,,Odespy|JModelica|http://identifiers.org/biosimulators/gillespy2|SciPy,,fac1|dfactor,Minimum factor to increase/decrease step size by in one step. The new step-size is chosen subject to the restriction fac1 <= current step-size / old step-size <= fac2.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000506,genetic algorithm,GA,"The genetic algorithm (GA) is a computational technique that mimics evolution and is based on reproduction and selection. A GA is composed of individuals that reproduce and compete, each one is a potential solution to the (optimization) problem and is represented by a ""genome"" where each gene corresponds to one adjustable parameter. At each generation of the GA, each individual is paired with one other at random for reproduction. Two offspring are produced by combining their genomes and allowing for ""cross-over"", i.e., the two new individuals have genomes that are formed from a combination of the genomes of their parents. Also each new gene might have mutated, i.e. the parameter value might have changed slightly. At the end of the generation, the algorithm has double the number of individuals. Then each of the individuals is confronted with a number of others to count how many does it outperform (the number of wins is the number of these competitors that represent worse solutions than itself). All the individuals are ranked by their number of wins, and the population is again reduced to the original number of individuals by eliminating those which have worse fitness (solutions).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000520,,,,,kisao:KISAO_0000506,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,GA,"The genetic algorithm (GA) is a computational technique that mimics evolution and is based on reproduction and selection. A GA is composed of individuals that reproduce and compete, each one is a potential solution to the (optimization) problem and is represented by a ""genome"" where each gene corresponds to one adjustable parameter. At each generation of the GA, each individual is paired with one other at random for reproduction. Two offspring are produced by combining their genomes and allowing for ""cross-over"", i.e., the two new individuals have genomes that are formed from a combination of the genomes of their parents. Also each new gene might have mutated, i.e. the parameter value might have changed slightly. At the end of the generation, the algorithm has double the number of individuals. Then each of the individuals is confronted with a number of others to count how many does it outperform (the number of wins is the number of these competitors that represent worse solutions than itself). All the individuals are ranked by their number of wins, and the population is again reduced to the original number of individuals by eliminating those which have worse fitness (solutions).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000219,maximum Adams order,Adams max order|maximum non-stiff order,This parameter is a positive integer value specifying the maximal order the non-stiff Adams integration method [http://identifiers.org/biomodels.kisao/KISAO_0000289] shall attempt before switching to the stiff BDF method [http://identifiers.org/biomodels.kisao/KISAO_0000288].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000484,,,,,kisao:KISAO_0000219,,,,,,,Adams max order|maximum non-stiff order,This parameter is a positive integer value specifying the maximal order the non-stiff Adams integration method [http://identifiers.org/biomodels.kisao/KISAO_0000289] shall attempt before switching to the stiff BDF method [http://identifiers.org/biomodels.kisao/KISAO_0000288].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000667,memory size,,"Maximum number of points to store in memory, such as in the second order backward implicit product Euler scheme.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000667,,2021-08-07,JRK,,http://identifiers.org/biosimulators/xpp,,,"Maximum number of points to store in memory, such as in the second order backward implicit product Euler scheme.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000099,type of system behaviour,,"A characteristic describing the rules the algorithm uses to simulate the temporal evolution of a system, specifically whether or not the final state is uniquely determined from a precise initial state.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000097,,,,,kisao:KISAO_0000099,,,AZ,,,true,,"A characteristic describing the rules the algorithm uses to simulate the temporal evolution of a system, specifically whether or not the final state is uniquely determined from a precise initial state.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000693,biochemical system,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000690,,,,,kisao:KISAO_0000693,,2022-03-29,EN|JRK|WL,,,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000543,stability limit detection flag,,Flag to activate stability limit detection.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243|http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000543,,2020-10-29,JRK,,SUNDIALS,,,Flag to activate stability limit detection.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000510,truncated Newton,,The Truncated Newton method is a sophisticated variant of the Newton optimization method. The Newton optimization method searches for the minimum of a nonlinear function by following descent directions determined from the function's first and second partial derivatives. The Truncated Newton method does an incomplete (truncated) solution of a system of linear equations to calculate the Newton direction. This means that the actual direction chosen for the descent is between the steepest descent direction and the true Newton direction.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000471,,,,,kisao:KISAO_0000510,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,,The Truncated Newton method is a sophisticated variant of the Newton optimization method. The Newton optimization method searches for the minimum of a nonlinear function by following descent directions determined from the function's first and second partial derivatives. The Truncated Newton method does an incomplete (truncated) solution of a system of linear equations to calculate the Newton direction. This means that the actual direction chosen for the descent is between the steepest descent direction and the true Newton direction.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000358,biconjugate gradient method,BiCG|BCG|Bi-CG,The biconjugate gradient method provides a generalization of conjugate gradient method [http://identifiers.org/biomodels.kisao/KISAO_0000357] to non-symmetric matrices.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000354,,,,,kisao:KISAO_0000358,,2011-06-10,AZ,,,,BiCG|BCG|Bi-CG,The biconjugate gradient method provides a generalization of conjugate gradient method [http://identifiers.org/biomodels.kisao/KISAO_0000357] to non-symmetric matrices.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000325,minimum fast/discrete reaction occurrences number,,"Parameter of 'equation-free probabilistic steady-state approximation' method  [http://identifiers.org/biomodels.kisao/KISAO_0000323], which describes the minimum number of fast/discrete reaction occurrences before their effects cause convergence to a quasi-steady-state distribution.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000325,,2011-06-02,AZ,,,,,"Parameter of 'equation-free probabilistic steady-state approximation' method  [http://identifiers.org/biomodels.kisao/KISAO_0000323], which describes the minimum number of fast/discrete reaction occurrences before their effects cause convergence to a quasi-steady-state distribution.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000421,type of validation,,Parameter of 'partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000416] describing how validation is performed. Possible values include cross-validation and test set validation.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000421,,2012-01-18,AZ,,,,,Parameter of 'partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000416] describing how validation is performed. Possible values include cross-validation and test set validation.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000824,aggregation function,,"A function that aggregates a set of results, reducing its dimension(s). Examples include functions that compute minima or maxima of sets of values.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000633,,,,,kisao:KISAO_0000824,,06-03-2021,LPS,,,true,,"A function that aggregates a set of results, reducing its dimension(s). Examples include functions that compute minima or maxima of sets of values.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000556,relative quadrature tolerance,,Relative error tolerance of the adjoint solution.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000209,,,,,kisao:KISAO_0000556,,2020-10-29,JRK,,http://identifiers.org/biosimulators/amici|SUNDIALS,,,Relative error tolerance of the adjoint solution.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000589,ACB flux sampling method,artificial centering boundary flux sampling method|Artificial centering boundary flux sampling method,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000588,,,,,kisao:KISAO_0000589,,2020-10-29,JRK,,http://identifiers.org/biosimulators/cobratoolbox,,artificial centering boundary flux sampling method|Artificial centering boundary flux sampling method,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000523,cooling factor,,"Rate by which the temperature is reduced from one cycle to the next, given by the formula: Tnew=Told*""Cooling Factor"". The simulated annealing algorithm works best if the temperature is reduced at a slow rate, so this value should be close to 1.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000521,,,,,kisao:KISAO_0000523,,2019-01-18,AZ,,,,,"Rate by which the temperature is reduced from one cycle to the next, given by the formula: Tnew=Told*""Cooling Factor"". The simulated annealing algorithm works best if the temperature is reduced at a slow rate, so this value should be close to 1.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000453,ordered updating policy,,An updating policy that chooses a transition in a definite way.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000451,,,,,kisao:KISAO_0000453,,2013-01-28,AZ,,,,,An updating policy that chooses a transition in a definite way.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000671,use stiff method,,Specifies whether the integrator attempts to solve stiff equations.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000671,,2021-08-07,JRK,,http://identifiers.org/biosimulators/tellurium,,,Specifies whether the integrator attempts to solve stiff equations.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000428,matrix for clusterization,,A matrix to do the clustering in 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000429,,,,,kisao:KISAO_0000428,,2012-01-18,AZ,,,,,A matrix to do the clustering in 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000497,KLU,"""Clark Kent"" LU factorization algorithm","KLU is a software package and an algorithm for solving sparse unsymmetric linear systems of equations that arise in circuit simulation applications. It relies on a permutation to Block Triangular Form (BTF), several methods for finding a fill-reducing ordering (variants of approximate minimum degree and nested dissection), and Gilbert/Peierls’ sparse left-looking LU factorization algorithm to factorize each block. The package is written in C and includes a MATLAB interface.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000497,,2017-01-09,AZ,,,,"""Clark Kent"" LU factorization algorithm","KLU is a software package and an algorithm for solving sparse unsymmetric linear systems of equations that arise in circuit simulation applications. It relies on a permutation to Block Triangular Form (BTF), several methods for finding a fill-reducing ordering (variants of approximate minimum degree and nested dissection), and Gilbert/Peierls’ sparse left-looking LU factorization algorithm to factorize each block. The package is written in C and includes a MATLAB interface.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000338,h-version of the finite element method,h-method|h-FEM,"Classical form of the 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337], in which polynomials of fixed degree p are used and the mesh is refined to increase accuracy. Can be considered as a special case of the h-p version [http://identifiers.org/biomodels.kisao/KISAO_0000340].",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000337,,,,,kisao:KISAO_0000338,,2011-06-07,AZ,,,,h-method|h-FEM,"Classical form of the 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337], in which polynomials of fixed degree p are used and the mesh is refined to increase accuracy. Can be considered as a special case of the h-p version [http://identifiers.org/biomodels.kisao/KISAO_0000340].",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000639,flux,,A rate through an volume such as of a reaction of a constraint-based models.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000639,,2021-06-04,JRK,,,,,A rate through an volume such as of a reaction of a constraint-based models.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000108,progression with fixed time step,,"Algorithm, possessing this characteristic, uses time steps of constant length to update the state of a system during the whole simulation.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000100,,,,,kisao:KISAO_0000108,,2008-07-08,NLN,,,,,"Algorithm, possessing this characteristic, uses time steps of constant length to update the state of a system during the whole simulation.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000606,hierarchical stochastic simulation algorithm,hSSA,"Fast, memory-efficient method for stochastic simulation of hierarchically organized models, such as a model of a cellular population where each cell in the population is represented by the same species and reactions.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000241,,,,,kisao:KISAO_0000606,,2021-01-25,JRK,,http://identifiers.org/biosimulators/ibiosim,,hSSA,"Fast, memory-efficient method for stochastic simulation of hierarchically organized models, such as a model of a cellular population where each cell in the population is represented by the same species and reactions.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000560,LSODA/LSODAR hybrid method,,Automatically use LSODA or LSODAR as apropriate for the given problem. Use LSODA if the problem has no roots. Use LSODAR if the problem has roots.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000094,,,,,kisao:KISAO_0000560,,2020-10-29,JRK,,http://identifiers.org/biosimulators/copasi,,,Automatically use LSODA or LSODAR as apropriate for the given problem. Use LSODA if the problem has no roots. Use LSODAR if the problem has roots.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000837,particle number,,"The extensive quantity particle number, or, the molar amount of the entity multiplied by Avogadro's number.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000837,,06-03-2021,LPS,,,,,"The extensive quantity particle number, or, the molar amount of the entity multiplied by Avogadro's number.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000039,tau-leaping method,tauL,"Approximate acceleration procedure of the stochastic simulation algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000029] that divides the time into subintervals and ''leaps'' from one to another, firing all the reaction events in each subinterval.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000621,,,,,kisao:KISAO_0000039,,2008-07-08,NLN,,ByoDyn|Cain|SmartCell,,tauL,"Approximate acceleration procedure of the stochastic simulation algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000029] that divides the time into subintervals and ''leaps'' from one to another, firing all the reaction events in each subinterval.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000236,exact solution,,"Algorithm, possessing this characteristic, provides an exact solution to the initial problem.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000235,,,,,kisao:KISAO_0000236,,,,,,,,"Algorithm, possessing this characteristic, provides an exact solution to the initial problem.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000592,dynamic rFBA,regulatory flux balance analysis|dynamic regulatory flux balance analysis|rFBA,Method for predicting the dynamics of metabolic fluxes under patterns of the regulation of gene expression,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000595,,,,,kisao:KISAO_0000592,,2020-10-29,JRK,,http://identifiers.org/biosimulators/cobratoolbox,,regulatory flux balance analysis|dynamic regulatory flux balance analysis|rFBA,Method for predicting the dynamics of metabolic fluxes under patterns of the regulation of gene expression,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000432,IDA-like method,,"Solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0,  y(t0)=y0,  y'(t0)=y'0. At each step, a Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408] leads to linear systems Jx=b, which are solved by one of five methods - two direct (dense or band; serial version only) and three Krylov [http://identifiers.org/biomodels.kisao/KISAO_0000354] (GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000353], BiCGStab [http://identifiers.org/biomodels.kisao/KISAO_0000392], or TFQMR [http://identifiers.org/biomodels.kisao/KISAO_0000396]).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000408,,,,,kisao:KISAO_0000432,,2012-05-24,AZ,,,true,,"Solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0,  y(t0)=y0,  y'(t0)=y'0. At each step, a Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408] leads to linear systems Jx=b, which are solved by one of five methods - two direct (dense or band; serial version only) and three Krylov [http://identifiers.org/biomodels.kisao/KISAO_0000354] (GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000353], BiCGStab [http://identifiers.org/biomodels.kisao/KISAO_0000392], or TFQMR [http://identifiers.org/biomodels.kisao/KISAO_0000396]).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000203,particle number lower limit,,This parameter of 'Pahle hybrid method' [http://identifiers.org/biomodels.kisao/KISAO_0000231] is a double value specifying the lower limit for particle numbers. Species with a particle number below this value are considered as having a low particle number. The 'particle number lower limit' cannot be higher than the 'particle number upper limit' [http://identifiers.org/biomodels.kisao/KISAO_0000204].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000252,,,,,kisao:KISAO_0000203,,,,,,,,This parameter of 'Pahle hybrid method' [http://identifiers.org/biomodels.kisao/KISAO_0000231] is a double value specifying the lower limit for particle numbers. Species with a particle number below this value are considered as having a low particle number. The 'particle number lower limit' cannot be higher than the 'particle number upper limit' [http://identifiers.org/biomodels.kisao/KISAO_0000204].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000517,number of generations,,The parameter is a positive integer value to determine the number of generations the evolutionary algorithm shall evolve the population.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000518,,,,,kisao:KISAO_0000517,,2019-01-18,AZ,,,,,The parameter is a positive integer value to determine the number of generations the evolutionary algorithm shall evolve the population.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000665,maximum number of iterations for root finding,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000665,,2021-08-07,JRK,,http://identifiers.org/biosimulators/xpp,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000319,Monte Carlo method,MC,Monte Carlo methods (or Monte Carlo experiments) are a class of computational algorithms that rely on repeated random sampling to compute their results.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000319,,2011-05-26,AZ,,,true,MC,Monte Carlo methods (or Monte Carlo experiments) are a class of computational algorithms that rely on repeated random sampling to compute their results.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000632,functional iteration root-finding method,,"Iterative method for finding the root of a function f(x) given by

y^{n(m+1)} = h_{n} β_{n,0} f(t_{n}, y^{n(m)}) + a_n

This method only involves evaluations of f. This method is suitable for non-stiff functions.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000631,,,,,kisao:KISAO_0000632,,2021-06-01,JRK,,CVODE,,,"Iterative method for finding the root of a function f(x) given by

y^{n(m+1)} = h_{n} β_{n,0} f(t_{n}, y^{n(m)}) + a_n

This method only involves evaluations of f. This method is suitable for non-stiff functions.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000064,Runge-Kutta based method,modified Euler method,"A method of numerically integrating ordinary differential equations, which uses a sampling of slopes through an interval and takes a weighted average to determine the right end point. This averaging gives a very accurate approximation.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000377,,,,,kisao:KISAO_0000064,,2007-11-12,dk,,ByoDyn,true,modified Euler method,"A method of numerically integrating ordinary differential equations, which uses a sampling of slopes through an interval and takes a weighted average to determine the right end point. This averaging gives a very accurate approximation.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000097,modelling and simulation algorithm characteristic,modeling and simulation algorithm characteristic,"Simulation algorithm property, which can, for example, describe the model, such as the type of variables (discrete or continuous), and information on the treatment of spatial descriptions, or can be a numerical characteristic, such as the system's behaviour (deterministic or stochastic) as well as the progression mechanism (fixed or adaptive time steps).",false,,,http://www.w3.org/2002/07/owl#Thing,,,,,kisao:KISAO_0000097,,,AZ,,,true,modeling and simulation algorithm characteristic,"Simulation algorithm property, which can, for example, describe the model, such as the type of variables (discrete or continuous), and information on the treatment of spatial descriptions, or can be a numerical characteristic, such as the system's behaviour (deterministic or stochastic) as well as the progression mechanism (fixed or adaptive time steps).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000415,maximum number of steps,maximum steps,The limit on number of internal steps before an output point.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000244,,,,,kisao:KISAO_0000415,,2012-01-18,AZ,,,,maximum steps,The limit on number of internal steps before an output point.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000448,logical model simulation method,,Qualitative (logical) models specify the evolution rules of their components. In each state a number of transitions are enabled. A 'logical model simulation method' guides the choice of the transitions processed at each step.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000448,,2013-01-28,AZ,,,true,,Qualitative (logical) models specify the evolution rules of their components. In each state a number of transitions are enabled. A 'logical model simulation method' guides the choice of the transitions processed at each step.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000521,simulated annealing parameter,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000521,,2019-01-18,AZ,,,true,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000554,parsimonius flux balance analysis (minimum number of active fluxes),parsimonious FBA|parsimonious flux balance analysis|pFBA,A technique for selecting a parsimonious flux distribution which has a minimal number of active fluxes.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000620,,,,,kisao:KISAO_0000554,,2020-10-29,JRK,,http://identifiers.org/biosimulators/cbmpy,,parsimonious FBA|parsimonious flux balance analysis|pFBA,A technique for selecting a parsimonious flux distribution which has a minimal number of active fluxes.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000528,parsimonious enzyme usage flux balance analysis (minimum sum of absolute fluxes),parsimonious FBA|parsimonious flux balance analysis|pFBA,Method for determining the smallest flux distribution among all flux distributions that satisfy the constraints of the flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000620,,,,,kisao:KISAO_0000528,,2020-08-11,AZ,,http://identifiers.org/biosimulators/cbmpy|http://identifiers.org/biosimulators/cobrapy,,parsimonious FBA|parsimonious flux balance analysis|pFBA,Method for determining the smallest flux distribution among all flux distributions that satisfy the constraints of the flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000587,IMEX,Implicit-Explicit Runge-Kutta method|implicit-explicit Runge-Kutta method,Method for solving stiff and imaginary ODE problems,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000587,,2020-10-29,JRK,,http://identifiers.org/biosimulators/biouml,,Implicit-Explicit Runge-Kutta method|implicit-explicit Runge-Kutta method,Method for solving stiff and imaginary ODE problems,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000802,control coefficient (scaled),,A scaled control coefficient of any dependent element (such as a reaction or a floating species) with respect to an independent element (such as a global parameter or boundary species).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000802,,06-03-2021,LPS,,,,,A scaled control coefficient of any dependent element (such as a reaction or a floating species) with respect to an independent element (such as a global parameter or boundary species).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000599,hybrid Gibson - Euler-Maruyama method,,"A hybrid stochastic method partitions the system into subsets of fast and slow reactions and approximates the fast reactions as a continuous Markov process, using a chemical Langevin equation, and accurately describes the slow dynamics using the Gibson algorithm. Fixed time step Milstein is used for approximate numerical solution of CLE.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000599,,2021-01-13,MLB|JRK,,http://identifiers.org/biosimulators/vcell,,,"A hybrid stochastic method partitions the system into subsets of fast and slow reactions and approximates the fast reactions as a continuous Markov process, using a chemical Langevin equation, and accurately describes the slow dynamics using the Gibson algorithm. Fixed time step Milstein is used for approximate numerical solution of CLE.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000201,modelling and simulation algorithm parameter,modeling and simulation algorithm parameter,Parameter that can be used in the simulation experiment settings.,false,,,http://www.w3.org/2002/07/owl#Thing,,,,,kisao:KISAO_0000201,,,AZ,,,true,modeling and simulation algorithm parameter,Parameter that can be used in the simulation experiment settings.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000234,LSODKR,"Livermore solver for ordinary differential equations, with preconditioned Krylov iteration methods for the Newton correction linear systems, and with root finding.","LSODKR is an initial value ODE solver for stiff and nonstiff systems. It is a variant of the LSODPK [http://identifiers.org/biomodels.kisao/KISAO_0000093] and LSODE [http://identifiers.org/biomodels.kisao/KISAO_0000071] solvers, intended mainly for large stiff systems. The main differences between LSODKR and LSODE [http://identifiers.org/biomodels.kisao/KISAO_0000071] are the following: a) for stiff systems, LSODKR uses a corrector iteration composed of Newton iteration and one of four preconditioned Krylov subspace iteration methods. The user must supply routines for the preconditioning operations, b) within the corrector iteration, LSODKR does automatic switching between functional (fixpoint) iteration and modified Newton iteration, c) LSODKR includes the ability to find roots of given functions of the solution during the integration.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000094,,,,,kisao:KISAO_0000234,,,,,,,"Livermore solver for ordinary differential equations, with preconditioned Krylov iteration methods for the Newton correction linear systems, and with root finding.","LSODKR is an initial value ODE solver for stiff and nonstiff systems. It is a variant of the LSODPK [http://identifiers.org/biomodels.kisao/KISAO_0000093] and LSODE [http://identifiers.org/biomodels.kisao/KISAO_0000071] solvers, intended mainly for large stiff systems. The main differences between LSODKR and LSODE [http://identifiers.org/biomodels.kisao/KISAO_0000071] are the following: a) for stiff systems, LSODKR uses a corrector iteration composed of Newton iteration and one of four preconditioned Krylov subspace iteration methods. The user must supply routines for the preconditioning operations, b) within the corrector iteration, LSODKR does automatic switching between functional (fixpoint) iteration and modified Newton iteration, c) LSODKR includes the ability to find roots of given functions of the solution during the integration.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000369,partial differential equation discretization method,,"A method which solves partial differential equations by discretizing them, i.e. approximating them by equations that involve a finite number of unknowns.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000369,,2011-06-27,AZ,,,true,,"A method which solves partial differential equations by discretizing them, i.e. approximating them by equations that involve a finite number of unknowns.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000106,continuous variable,,"Algorithm, possessing this characteristic, allows the values of a system's variables to change by continuous (non-integral) amounts.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000098,,,,,kisao:KISAO_0000106,,2008-07-08,NLN,,,,,"Algorithm, possessing this characteristic, allows the values of a system's variables to change by continuous (non-integral) amounts.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000604,MSR tolerance,multiple slow reactions tolerance|Multiple slow reactions tolerance,Maximum allowed effect of executing multiple slow reactions per numerical integration of the SDEs.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000209,,,,,kisao:KISAO_0000604,,2021-01-13,MLB|JRK,,,,multiple slow reactions tolerance|Multiple slow reactions tolerance,Maximum allowed effect of executing multiple slow reactions per numerical integration of the SDEs.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000336,D-leaping method,,"We propose a novel, accelerated algorithm for the approximate stochastic simulation of biochemical systems with delays. The present work extends existing accelerated algorithms by distributing, in a time adaptive fashion, the delayed reactions so as to minimize the computational effort while preserving their accuracy.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000335,,,,,kisao:KISAO_0000336,,2011-06-03,AZ,,,,,"We propose a novel, accelerated algorithm for the approximate stochastic simulation of biochemical systems with delays. The present work extends existing accelerated algorithms by distributing, in a time adaptive fashion, the delayed reactions so as to minimize the computational effort while preserving their accuracy.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000835,concentration control coefficient matrix (scaled),,The scaled concentration control coefficient matrix. The dimensions are species by reactions.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000835,,06-03-2021,LPS,,,,,The scaled concentration control coefficient matrix. The dimensions are species by reactions.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000567,force physical correctness,,Indicates whether to force physical correctness.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000567,,2020-10-29,JRK,,http://identifiers.org/biosimulators/copasi,,,Indicates whether to force physical correctness.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000340,h-p version of the finite element method,hp-FEM|hp-method,In h-p version of 'finite difference method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] the two approaches of mesh refinement and degree enchacement are combined.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000337,,,,,kisao:KISAO_0000340,,2011-06-07,AZ,,,,hp-FEM|hp-method,In h-p version of 'finite difference method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] the two approaches of mesh refinement and degree enchacement are combined.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000017,multi-state agent-based simulation method,Morton-Firth,"The agent-based simulation method instantiates each molecule as an individual software object. The interactions between those objects are determined by interaction probabilities according to experimental data. The probability is depended on the state the molecule is in at that specific time (molecules have multiple-state). Additionally, ''pseudo-molecules'' are introduced to the system in order to simulate unimolecular reactions. For simulation, continuous time is broken down into discrete, independent ''slices''. During each time slice one molecule is selected randomly, a second molecule or pseudo-molecule is selected afterwards (leading to either a unimolecular or a bimolecular reaction). The reaction will only take place if a produced random number exceeds the reaction probability calculated beforehand. In that case, the system is updated after that reaction.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000363,,,,,kisao:KISAO_0000017,,,,,StochSim,,Morton-Firth,"The agent-based simulation method instantiates each molecule as an individual software object. The interactions between those objects are determined by interaction probabilities according to experimental data. The probability is depended on the state the molecule is in at that specific time (molecules have multiple-state). Additionally, ''pseudo-molecules'' are introduced to the system in order to simulate unimolecular reactions. For simulation, continuous time is broken down into discrete, independent ''slices''. During each time slice one molecule is selected randomly, a second molecule or pseudo-molecule is selected afterwards (leading to either a unimolecular or a bimolecular reaction). The reaction will only take place if a produced random number exceeds the reaction probability calculated beforehand. In that case, the system is updated after that reaction.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000373,differential-algebraic equation problem,DAE,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000405,,,,,kisao:KISAO_0000373,,,AZ,,,,DAE,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000617,IDA-CVODE hybrid method,,"Meta algorithm which chooses between IDA and CVODE depending on the problem to be solved.

CVODE is used for ordinary differential equation (ODE) systems. IDA is used for differential-algebraic equation (DAE) systems.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000617,,2021-01-30,JRK,,http://identifiers.org/biosimulators/vcell,,,"Meta algorithm which chooses between IDA and CVODE depending on the problem to be solved.

CVODE is used for ordinary differential equation (ODE) systems. IDA is used for differential-algebraic equation (DAE) systems.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000475,integration method,,the integration method used by the solver,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000475,,2015-09-10,AZ,,http://identifiers.org/biosimulators/opencor,,,the integration method used by the solver,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000643,upper bound,,An upper bound on an estimate of a quantity.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000641,,,,,kisao:KISAO_0000643,,2021-06-04,JRK,,,,,An upper bound on an estimate of a quantity.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000571,absolute tolerance adjustment factor,,How much to adjust the absolute tolerance.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000597,,,,,kisao:KISAO_0000571,,2020-10-29,JRK,,http://identifiers.org/biosimulators/pysces,,,How much to adjust the absolute tolerance.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000075,Gillespie multi-particle method,particle-based spatial stochastic method|Gillespie's multi-particle method|GMP,Combination of the multiparticle method for diffusion [http://identifiers.org/biomodels.kisao/KISAO_0000334] and the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000335,,,,,kisao:KISAO_0000075,,,,,,,particle-based spatial stochastic method|Gillespie's multi-particle method|GMP,Combination of the multiparticle method for diffusion [http://identifiers.org/biomodels.kisao/KISAO_0000334] and the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000829,minimum ignoring NaN,,"The minimum value of a set of values, ignoring NaN entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000829,,2021-06-03,"LPS, MK",,,,,"The minimum value of a set of values, ignoring NaN entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000021,StochSim nearest-neighbour algorithm,,"The nearest-neighbour algorithm allows for the representation of spatial information, by adding a two-dimensional lattice in the form of a probabilistic cellular automata. That way, nearest neighbour interactions do additionally influence reactions taking place in the systems. Reactions between entities are calculated using the agent-based simulation algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000017].",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000363,,,,,kisao:KISAO_0000021,,,,,Stochsim 1.2 and more recent versions,,,"The nearest-neighbour algorithm allows for the representation of spatial information, by adding a two-dimensional lattice in the form of a probabilistic cellular automata. That way, nearest neighbour interactions do additionally influence reactions taking place in the systems. Reactions between entities are calculated using the agent-based simulation algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000017].",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000424,mean-centring of variables,,A boolean parameter of the 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417] specifying whether the variables were mean-centred prior to the regression analysis.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000430,,,,,kisao:KISAO_0000424,,2012-01-18,AZ,,,,,A boolean parameter of the 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417] specifying whether the variables were mean-centred prior to the regression analysis.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000676,degree of linearity,,The degree of linearity of a system.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000676,,2021-08-23,JRK,,http://identifiers.org/biosimulators/tellurium,,,The degree of linearity of a system.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000469,maximal timestep,,"Key parameter of the 'maximal timestep method' [http://www.biomodels.net/kisao/KISAO#KISAO_0000468]. If Gillespie [http://www.biomodels.net/kisao/KISAO#KISAO_0000027] waiting time is longer than maximal timestep, slow reaction is not fired and tau-leap [http://www.biomodels.net/kisao/KISAO#KISAO_0000039] step is executed for fast reactions. Otherwise, slow reaction is fired and tau-leap [http://www.biomodels.net/kisao/KISAO#KISAO_0000039] is executed with shorter time step.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000469,,2014-04-25,AZ,,,,,"Key parameter of the 'maximal timestep method' [http://www.biomodels.net/kisao/KISAO#KISAO_0000468]. If Gillespie [http://www.biomodels.net/kisao/KISAO#KISAO_0000027] waiting time is longer than maximal timestep, slow reaction is not fired and tau-leap [http://www.biomodels.net/kisao/KISAO#KISAO_0000039] step is executed for fast reactions. Otherwise, slow reaction is fired and tau-leap [http://www.biomodels.net/kisao/KISAO#KISAO_0000039] is executed with shorter time step.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000301,Heun method,Heun's method,The method is named after Karl L. W. M. Heun and is a numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It can be seen as extension of the Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261] into two-stage second-order Runge-Kutta method.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000301,,2011-05-10,AZ,,,,Heun's method,The method is named after Karl L. W. M. Heun and is a numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It can be seen as extension of the Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261] into two-stage second-order Runge-Kutta method.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000430,variables preprocessing parameter,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000430,,,AZ,,,true,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000565,absolute tolerance for root finding,,Absolute error tolerance for root finding.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000211,,,,,kisao:KISAO_0000565,,2020-10-29,JRK,,http://identifiers.org/biosimulators/copasi,,,Absolute error tolerance for root finding.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000800,systems property,,A systems-level property of an entire model or simulation.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000800,,06-03-2021,LPS,,,true,,A systems-level property of an entire model or simulation.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000532,loopless,,Whether to return only loopless flux solutions.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000532,,,,,,,,Whether to return only loopless flux solutions.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000031,Euler backward method,implicit Euler method|implicit Gaussian first order Runge-Kutta,"The Euler backward method is an implicit one-step method for the numerical integration of ODES with a given initial value. The next state of a system is calculated by solving an equation that considers both, the current state of the system and the later one.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000261,,,,,kisao:KISAO_0000031,,2007-11-02,dk,,GSL,,implicit Euler method|implicit Gaussian first order Runge-Kutta,"The Euler backward method is an implicit one-step method for the numerical integration of ODES with a given initial value. The next state of a system is calculated by solving an equation that considers both, the current state of the system and the later one.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000302,embedded Runge-Kutta method,embedded RK,An embedded Runge-Kutta method is a method in which two Runge-Kutta estimates are obtained using the same auxiliary functions ki but with a different linear combination of these functions so that one estimate has an order one greater than the other.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000302,,2011-05-10,AZ,,,true,embedded RK,An embedded Runge-Kutta method is a method in which two Runge-Kutta estimates are obtained using the same auxiliary functions ki but with a different linear combination of these functions so that one estimate has an order one greater than the other.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000809,reduced Jacobian matrix,,The reduced Jacobian matrix. The dimensions are species by species.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000809,,06-03-2021,LPS,,,,,The reduced Jacobian matrix. The dimensions are species by species.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000680,duration,,Length of time to simulate.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000680,,2021-08-23,JRK,,http://identifiers.org/biosimulators/tellurium,,,Length of time to simulate.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000437,flux balance analysis,FBA,Flux balance analysis is a mathematical approach for analyzing the flow of metabolites through a metabolic network.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000407|http://www.biomodels.net/kisao/KISAO#KISAO_0000622,,,,,kisao:KISAO_0000437,,2012-11-29,AZ,,,,FBA,Flux balance analysis is a mathematical approach for analyzing the flow of metabolites through a metabolic network.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000597,tolerance,,Numeric value specifying the desired tolerance the user wants to achieve. A smaller value means that the prediction is calculated more accurately.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000597,,2020-10-29,JRK,,,,,Numeric value specifying the desired tolerance the user wants to achieve. A smaller value means that the prediction is calculated more accurately.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000104,stochastic system behaviour,,"Algorithm, possessing this characteristic, simulates the temporal evolution of a system using probabilistic rules, so that between two simulations, the same precise initial state may result in a different final state.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000099,,,,,kisao:KISAO_0000104,,2008-07-08,NLN,,,,,"Algorithm, possessing this characteristic, simulates the temporal evolution of a system using probabilistic rules, so that between two simulations, the same precise initial state may result in a different final state.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000334,multiparticle lattice gas automata,multiparticle lattice gas cellular automata,"An algorithm which allows  for an arbitrary number of particles, while keeping the benefits of the cellular automata approach [http://identifiers.org/biomodels.kisao/KISAO_0000315].",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000068,,,,,kisao:KISAO_0000334,,2011-06-03,AZ,,,,multiparticle lattice gas cellular automata,"An algorithm which allows  for an arbitrary number of particles, while keeping the benefits of the cellular automata approach [http://identifiers.org/biomodels.kisao/KISAO_0000315].",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000846,product ignoring NaN,,"The product of a set of values, ignoring Nan entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000846,,2021-10-09,MK,,,,,"The product of a set of values, ignoring Nan entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000278,Metropolis Monte Carlo algorithm,Metropolis-Hastings algorithm|Metropolis algorithm,"A general method, suitable for fast computing machines, for investigating such properties as equations of state for substances consisting of interacting individual molecules is described. The method consists of a modified Monte Carlo integration [http://identifiers.org/biomodels.kisao/KISAO_0000051] over configuration space.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000319,,,,,kisao:KISAO_0000278,,2011-05-09,AZ,,CompuCell3D,,Metropolis-Hastings algorithm|Metropolis algorithm,"A general method, suitable for fast computing machines, for investigating such properties as equations of state for substances consisting of interacting individual molecules is described. The method consists of a modified Monte Carlo integration [http://identifiers.org/biomodels.kisao/KISAO_0000051] over configuration space.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000813,Eigenvalue matrix,full eigenvalue matrix,"The (full) eigenvalue matrix of a model. The dimensions are species by two, where the first column is the real part of the eigenvalues, and the second column is the imaginary part of the eigenvalues.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000813,,06-03-2021,LPS,,,,full eigenvalue matrix,"The (full) eigenvalue matrix of a model. The dimensions are species by two, where the first column is the real part of the eigenvalues, and the second column is the imaginary part of the eigenvalues.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000015,Gillespie first reaction algorithm,Gillespie's first reaction method,"Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm calculates a tentative reaction time for each reaction and then select the smallest.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000241,,,,,kisao:KISAO_0000015,,2007-11-09,NLN,,Cain,,Gillespie's first reaction method,"Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm calculates a tentative reaction time for each reaction and then select the smallest.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000615,fully-implicit regular grid finite volume method with a variable time step,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000285,,,,,kisao:KISAO_0000615,,2021-01-30,JRK,,http://identifiers.org/biosimulators/vcell,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000347,meshless geometry handling,,"Most meshless methods require a scattered set of nodal points in the domain of interest. In these methods, there may be no fixed connectivities between the nodes, unlike the finite element or finite difference methods. This feature has significant implications in modeling some physical phenomena that are characterized by a continuous change in the geometry of the domain under analysis. ",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000311,,,,,kisao:KISAO_0000347,,,AZ,,,,,"Most meshless methods require a scattered set of nodal points in the domain of interest. In these methods, there may be no fixed connectivities between the nodes, unlike the finite element or finite difference methods. This feature has significant implications in modeling some physical phenomena that are characterized by a continuous change in the geometry of the domain under analysis. ",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000648,step,,Iteration such as along a pseudo timecourse of a logical simulation.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000648,,2021-06-04,JRK,,,,,Iteration such as along a pseudo timecourse of a logical simulation.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000473,Bayesian inference algorithm,,A bayesian inference algorithm calculates a posterior probability distribution from a prior probability distribution and some additional evidence in the form of a likelyhood function.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000473,,2015-04-23,AZ,,,,,A bayesian inference algorithm calculates a posterior probability distribution from a prior probability distribution and some additional evidence in the form of a likelyhood function.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000081,estimated midpoint tau-leaping method,explicit tau-leaping method with estimated-mid point technique,"Estimated-Midpoint tau-Leap Method: For the selected leaping time tau which satisfies the Leap Condition, compute the expected state change lambda' = tau sumj( aj(x)vj ) during [t, t + tau). Then, with x' =x + [lambda'/2], generate for each j = 1,...,M a sample value kj of the Poisson random variable P(aj(x'), tau). Compute the actual state change, lambda = sumj( kjvj ), and effect the leap by replacing t by t + tau and x by x + lambda.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000039,,,,,kisao:KISAO_0000081,,,,,,,explicit tau-leaping method with estimated-mid point technique,"Estimated-Midpoint tau-Leap Method: For the selected leaping time tau which satisfies the Leap Condition, compute the expected state change lambda' = tau sumj( aj(x)vj ) during [t, t + tau). Then, with x' =x + [lambda'/2], generate for each j = 1,...,M a sample value kj of the Poisson random variable P(aj(x'), tau). Compute the actual state change, lambda = sumj( kjvj ), and effect the leap by replacing t by t + tau and x by x + lambda.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000850,cumulative product ignoring NaN,,"The cumulative product of a set of values, ignoring Nan entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000850,,2021-10-09,MK,,,,,"The cumulative product of a set of values, ignoring Nan entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000687,Max-min Driving Force method,MDF,"For a given metabolic network model, the MDF method determines plausible metabolite concentrations and thermodynamic forces. Flux directions, equilibrium constants (or equivalently, standard Gibbs free energies of reactions) and admissible metabolite concentration ranges are given as input data. The method applies the principle that low thermodynamic forces must be avoided, and maximizes the minimum thermodynamic force across the entire network.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000685,,,,,kisao:KISAO_0000687,,2022-03-27,EN|JRK|WL,,https://gitlab.com/equilibrator/metabolic-pathway-analysis,,MDF,"For a given metabolic network model, the MDF method determines plausible metabolite concentrations and thermodynamic forces. Flux directions, equilibrium constants (or equivalently, standard Gibbs free energies of reactions) and admissible metabolite concentration ranges are given as input data. The method applies the principle that low thermodynamic forces must be avoided, and maximizes the minimum thermodynamic force across the entire network.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000223,number of history bins,,"The 'number of history bins' is only enabled for models that contain delayed or multistep reactions for specifying the granularity with which the delayed reaction solver should retain the history of species values, for species that participate in delayed reactions.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000244,,,,,kisao:KISAO_0000223,,,,,,,,"The 'number of history bins' is only enabled for models that contain delayed or multistep reactions for specifying the granularity with which the delayed reaction solver should retain the history of species values, for species that participate in delayed reactions.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000282,KINSOL,Newton-Krylov solver for nonlinear algebraic systems|FKINSOL|NKSOL,"KINSOL solves algebraic systems in real N-space, written as F(u)=0,  F:RN->RN, given an initial guess u0. The basic method is either a modified or an inexact Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408]. The linear systems that arise are solved with either a direct (dense or banded) solver (serial version only), or one of the Krylov iterative solvers [http://identifiers.org/biomodels.kisao/KISAO_0000354]. In the Krylov case, the user can (optionally) supply a right preconditioner.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000408,,,,,kisao:KISAO_0000282,,2011-05-09,AZ,,SUNDIALS,,Newton-Krylov solver for nonlinear algebraic systems|FKINSOL|NKSOL,"KINSOL solves algebraic systems in real N-space, written as F(u)=0,  F:RN->RN, given an initial guess u0. The basic method is either a modified or an inexact Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408]. The linear systems that arise are solved with either a direct (dense or banded) solver (serial version only), or one of the Krylov iterative solvers [http://identifiers.org/biomodels.kisao/KISAO_0000354]. In the Krylov case, the user can (optionally) supply a right preconditioner.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000504,random search,,"Random search is an optimization method that attempts to find the optimum by testing the objective function's value on a series of combinations of random values of the adjustable parameters. The random values are generated complying with any boundaries selected by the user, furthermore, any combinations of parameter values that do not fulfill constraints on the variables are excluded. This means that the method is capable of handling bounds on the adjustable parameters and fulfilling constraints.

For infinite number of iterations this method is guaranteed to find the global optimum of the objective function. In general one is interested in processing a very large number of iterations.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000472,,,,,kisao:KISAO_0000504,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,,"Random search is an optimization method that attempts to find the optimum by testing the objective function's value on a series of combinations of random values of the adjustable parameters. The random values are generated complying with any boundaries selected by the user, furthermore, any combinations of parameter values that do not fulfill constraints on the variables are excluded. This means that the method is capable of handling bounds on the adjustable parameters and fulfilling constraints.

For infinite number of iterations this method is guaranteed to find the global optimum of the objective function. In general one is interested in processing a very large number of iterations.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000028,slow-scale stochastic simulation algorithm,slow-scale stochastic SSA|ssSSA,Attempt to overcome the problem of stiff systems by developing an ''approximate theory that allows one to stochastically advance the system in time by simulating the firings of only the slow reaction events''.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000333,,,,,kisao:KISAO_0000028,,,,,,,slow-scale stochastic SSA|ssSSA,Attempt to overcome the problem of stiff systems by developing an ''approximate theory that allows one to stochastically advance the system in time by simulating the firings of only the slow reaction events''.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000384,semi-implicit midpoint rule,,A semi-implicit version of the midpoint method that has an even error series [http://identifiers.org/biomodels.kisao/KISAO_0000381].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000384,,2011-07-01,AZ,,,,,A semi-implicit version of the midpoint method that has an even error series [http://identifiers.org/biomodels.kisao/KISAO_0000381].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000351,multinomial tau-leaping method,MtauL,"The multinomial tau-leaping method  is an extension of the binomial tau-leaping method [http://identifiers.org/biomodels.kisao/KISAO_0000074] to networks with arbitrary multiple-channel reactant dependencies. Improvements were achieved by a combination of three factors: First, tau-leaping steps are determined simply and efficiently using a-priori information and Poisson distribution based estimates of expectation values for reaction numbers. Second, networks are partitioned into closed groups of reactions and corresponding reactants in which no group reactant set is found in any other group. Third, product formation is factored into upper bound estimation of the number of times a particular reaction occurs.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000039,,,,,kisao:KISAO_0000351,,2011-06-09,AZ,,,,MtauL,"The multinomial tau-leaping method  is an extension of the binomial tau-leaping method [http://identifiers.org/biomodels.kisao/KISAO_0000074] to networks with arbitrary multiple-channel reactant dependencies. Improvements were achieved by a combination of three factors: First, tau-leaping steps are determined simply and efficiently using a-priori information and Poisson distribution based estimates of expectation values for reaction numbers. Second, networks are partitioned into closed groups of reactions and corresponding reactants in which no group reactant set is found in any other group. Third, product formation is factored into upper bound estimation of the number of times a particular reaction occurs.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000486,maximum iterations,iteration limit,"For algorithms that iterate to a solution (steady state finders in particular), a limit on the number of iterations that should be performed.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000244,,,,,kisao:KISAO_0000486,,,AZ,,,,iteration limit,"For algorithms that iterate to a solution (steady state finders in particular), a limit on the number of iterations that should be performed.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000628,modelling and simulation algorithm parameter value,,A value of a parameter of an algorithm,false,,,http://www.w3.org/2002/07/owl#Thing,,,,,kisao:KISAO_0000628,,,2012-06-01|JRK,,,true,,A value of a parameter of an algorithm,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000256,virtual box side length,,The 'virtual box side length' is a parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. It requests the length of one side of a box.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000260,,,,,kisao:KISAO_0000256,,,,,Smoldyn,,,The 'virtual box side length' is a parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. It requests the length of one side of a box.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000435,embedded Runge-Kutta 5(4) method,RK5(4),An embedded Runge-Kutta integrator of order 5(4).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000302,,,,,kisao:KISAO_0000435,,2012-09-26,AZ,,,true,RK5(4),An embedded Runge-Kutta integrator of order 5(4).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000309,Crank-Nicolson method,,"In numerical analysis, the Crank-Nicolson method is a finite difference method [http://identifiers.org/biomodels.kisao/KISAO_0000307] used for numerically solving the heat equation and similar partial differential equations. It is a second-order method in time, implicit in time, and is numerically stable. The method was developed by John Crank and Phyllis Nicolson in the mid 20th century.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000307,,,,,kisao:KISAO_0000309,,2011-05-11,AZ,,,,,"In numerical analysis, the Crank-Nicolson method is a finite difference method [http://identifiers.org/biomodels.kisao/KISAO_0000307] used for numerically solving the heat equation and similar partial differential equations. It is a second-order method in time, implicit in time, and is numerically stable. The method was developed by John Crank and Phyllis Nicolson in the mid 20th century.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000239,explicit method type,,"Explicit methods calculate the state of a system at a later time from the state of the system at the current time. Mathematically, if Y(t) is the current system state and Y((t+delta t) is the state at the later time (delta t is a small time step), then, for an explicit method Y(t+delta t) = F(Y(t)), to find Y(t+delta t).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000238,,,,,kisao:KISAO_0000239,,,AZ,,,,,"Explicit methods calculate the state of a system at a later time from the state of the system at the current time. Mathematically, if Y(t) is the current system state and Y((t+delta t) is the state at the later time (delta t is a small time step), then, for an explicit method Y(t+delta t) = F(Y(t)), to find Y(t+delta t).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000537,explicit Runge-Kutta method of order 3(2),RK23,"RK23 uses the Bogacki-Shampine pair of formulas [1]. The error is controlled assuming accuracy of the second-order method, but steps are taken using the third-order accurate formula (local extrapolation is done). A cubic Hermite polynomial is used for the dense output.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000537,,2020-10-29,JRK,,Odespy|MATLAB|http://identifiers.org/biosimulators/gillespy2|deSolve|Octave|SciPy,,RK23,"RK23 uses the Bogacki-Shampine pair of formulas [1]. The error is controlled assuming accuracy of the second-order method, but steps are taken using the third-order accurate formula (local extrapolation is done). A cubic Hermite polynomial is used for the dense output.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000086,Fehlberg method,RKF45|Runge-Kutta-Fehlberg method,"The method was developed by the German mathematician Erwin Fehlberg and is based on the class of Runge-Kutta methods. The Runge-Kutta-Fehlberg method uses an O(h4) method together with an O(h5) method that uses all of the points of the O(h4) method, and hence is often referred to as an RKF45 method. Similar schemes with different orders have since been developed. By performing one extra calculation that would be required for an RK5 method, the error in the solution can be estimated and controlled and an appropriate step size can be determined automatically, making this method efficient for ordinary problems of automated numerical integration of ordinary differential equations.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000435,,,,,kisao:KISAO_0000086,,,,,GSL|http://identifiers.org/biosimulators/ibiosim|http://identifiers.org/biosimulators/jsim|http://identifiers.org/biosimulators/ecell4|http://identifiers.org/biosimulators/vcell,,RKF45|Runge-Kutta-Fehlberg method,"The method was developed by the German mathematician Erwin Fehlberg and is based on the class of Runge-Kutta methods. The Runge-Kutta-Fehlberg method uses an O(h4) method together with an O(h5) method that uses all of the points of the O(h4) method, and hence is often referred to as an RKF45 method. Similar schemes with different orders have since been developed. By performing one extra calculation that would be required for an RK5 method, the error in the solution can be estimated and controlled and an appropriate step size can be determined automatically, making this method efficient for ordinary problems of automated numerical integration of ordinary differential equations.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000563,Pahle hybrid Gibson-Bruck Next Reaction method/RK-45 method,,Combines a deterministic numerical integration of ODEs with a stochastic simulation algorithm. The whole biochemical network is partitioned into a deterministic and a stochastic subnet internally. The deterministic subnet contains all reactions in which only species with high particle numbers take part. All reactions with at least one low-numbered species are in the stochastic subnet. The partitioning of the biochemical network can change dynamically during the simulation. The reaction probabilities of the stochastic subnet are approximated as constant during one stochastic step. The deterministic subnet is integrated with RK-45. The stochastic subnet is simulated by the Gibson-Bruck Next Reaction Method.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000231,,,,,kisao:KISAO_0000563,,2020-10-29,JRK,,http://identifiers.org/biosimulators/copasi,,,Combines a deterministic numerical integration of ODEs with a stochastic simulation algorithm. The whole biochemical network is partitioned into a deterministic and a stochastic subnet internally. The deterministic subnet contains all reactions in which only species with high particle numbers take part. All reactions with at least one low-numbered species are in the stochastic subnet. The partitioning of the biochemical network can change dynamically during the simulation. The reaction probabilities of the stochastic subnet are approximated as constant during one stochastic step. The deterministic subnet is integrated with RK-45. The stochastic subnet is simulated by the Gibson-Bruck Next Reaction Method.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000807,elasticity coefficient (scaled),,A scaled elasticity coefficient of any reaction with respect to an independent element (such as a global parameter or boundary species).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000807,,06-03-2021,LPS,,,,,A scaled elasticity coefficient of any reaction with respect to an independent element (such as a global parameter or boundary species).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000691,metabolic system,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000690,,,,,kisao:KISAO_0000691,,2022-03-29,EN|JRK|WL,,,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000378,implicit midpoint rule,implicit Gaussian second order Runge-Kutta method,The implicit midpoint rule is a second-order case of the more general implicit s-stage Runge-Kutta methods [http://identifiers.org/biomodels.kisao/KISAO_0000064 and (http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000240)].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000378,,2011-06-30,AZ,,GSL,,implicit Gaussian second order Runge-Kutta method,The implicit midpoint rule is a second-order case of the more general implicit s-stage Runge-Kutta methods [http://identifiers.org/biomodels.kisao/KISAO_0000064 and (http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000240)].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000345,h-p cloud method,h-p clouds|method of clouds,"A meshless method, which uses a partition of unity to construct the family of h-p cloud functions. ",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000369,,,,,kisao:KISAO_0000345,,2011-06-09,AZ,,,,h-p clouds|method of clouds,"A meshless method, which uses a partition of unity to construct the family of h-p cloud functions. ",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000844,sum ignoring NaN,,"The sum of a set of values, ignoring Nan entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000844,,2021-10-09,MK,,,,,"The sum of a set of values, ignoring Nan entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000576,quadratic MOMA,MOMA|Quadratic Minimization of Metabolic Adjustment|quadratic minimization of metabolic adjustment|minimization of metabolic adjustment,"Minimization of metabolic adjustment (MOMA) is an extension of FBA for the prediction of flux distributions in gene knockouts. MOMA employs quadratic programming to identify the closest point (in terms of its Euclidean distance) in the permissible flux space of the knockout to the wild-type flux vector by solving the optimization problem

Min sum((fluxAi - fluxBi)^2) + sum(fluxAi)^(fluxMinimizationWeight) + sum(fluxBi)^(fluxMinimizationWeight)",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000593,,,,,kisao:KISAO_0000576,,2020-10-29,JRK,,http://identifiers.org/biosimulators/cobratoolbox|http://identifiers.org/biosimulators/raven|http://identifiers.org/biosimulators/optflux,,MOMA|Quadratic Minimization of Metabolic Adjustment|quadratic minimization of metabolic adjustment|minimization of metabolic adjustment,"Minimization of metabolic adjustment (MOMA) is an extension of FBA for the prediction of flux distributions in gene knockouts. MOMA employs quadratic programming to identify the closest point (in terms of its Euclidean distance) in the permissible flux space of the knockout to the wild-type flux vector by solving the optimization problem

Min sum((fluxAi - fluxBi)^2) + sum(fluxAi)^(fluxMinimizationWeight) + sum(fluxBi)^(fluxMinimizationWeight)",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000811,stoichiometry matrix,full stochiometry matrix,The (full) stoichiometry matrix. The dimensions are species by reactions.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000811,,06-03-2021,LPS,,,,full stochiometry matrix,The (full) stoichiometry matrix. The dimensions are species by reactions.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000243,method switching control parameter,,Parameters describing threshold conditions for algorithms that switch between different methods.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000243,,,AZ,,,true,,Parameters describing threshold conditions for algorithms that switch between different methods.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000659,Naldi MDD logical model stable state search method,Naldi Multi-valued Decision Diagram stable state search method,Efficient method for determining the stable states of a regulatory graph using a Multi-valued Decision Diagram (MDD) representation of the logical functions.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000660,,,,,kisao:KISAO_0000659,,2021-07-08,JRK,,,,Naldi Multi-valued Decision Diagram stable state search method,Efficient method for determining the stable states of a regulatory graph using a Multi-valued Decision Diagram (MDD) representation of the logical functions.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000626,band direct solver,banded,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000624,,,,,kisao:KISAO_0000626,,2021-06-01,JRK,,CVODE,,banded,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000451,type of updating policy,,A rule to guide the choice of a unique transition at each step used by an 'asynchronous logical model simulation method' [http://identifiers.org/biomodels.kisao/KISAO_0000450].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000097,,,,,kisao:KISAO_0000451,,2013-01-28,AZ,,,true,,A rule to guide the choice of a unique transition at each step used by an 'asynchronous logical model simulation method' [http://identifiers.org/biomodels.kisao/KISAO_0000450].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000484,maximum order,,"Maximum order of method. For example, in Roadrunner it can be used for two parameters that one can set for deterministic runs: 'maximum_bdf_order' and 'maximum_adams_order'.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000594,,,,,kisao:KISAO_0000484,,,AZ,,Roadrunner,,,"Maximum order of method. For example, in Roadrunner it can be used for two parameters that one can set for deterministic runs: 'maximum_bdf_order' and 'maximum_adams_order'.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000058,Greens function reaction dynamics,GFRD|Green's function reaction dynamics,Method that simulates biochemical networks on particle level. It considers both changes in time and space by ''exploiting both the exact solution of the Smoluchowski Equation to set up an event-driven algorithm'' which allows for large jumps in time when the considered particles are far away from each other [in space] and thus cannot react. GFRD combines the propagation of particles in space with the reactions taking place between them in one simulation step.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000056,,,,,kisao:KISAO_0000058,,,,,,,GFRD|Green's function reaction dynamics,Method that simulates biochemical networks on particle level. It considers both changes in time and space by ''exploiting both the exact solution of the Smoluchowski Equation to set up an event-driven algorithm'' which allows for large jumps in time when the considered particles are far away from each other [in space] and thus cannot react. GFRD combines the propagation of particles in space with the reactions taking place between them in one simulation step.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000857,median,,The median of a set of values. If the values contain NaN the median is NaN.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000857,,2021-10-09,MK,,,,,The median of a set of values. If the values contain NaN the median is NaN.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000289,Adams method,,"Adams' methods are multi-step methods used for the numerical integration of initial value problems in Ordinary Differential Equations (ODE's). Adams' algorithm consists of two parts: firstly, a starting procedure which provides y1, ... , yk-1 ( approximations to the exact solution at the points x0 + h, ... , x0 + (k - 1)h ) and, secondly, a multistep formula to obtain an approximation to the exact solution y(x0 + kh). This is then applied recursively, based on the numerical approximation of k successive steps, to compute y(x0 + (k + 1)h).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000281,,,,,kisao:KISAO_0000289,,2011-05-10,AZ,,ByoDyn,,,"Adams' methods are multi-step methods used for the numerical integration of initial value problems in Ordinary Differential Equations (ODE's). Adams' algorithm consists of two parts: firstly, a starting procedure which provides y1, ... , yk-1 ( approximations to the exact solution at the points x0 + h, ... , x0 + (k - 1)h ) and, secondly, a multistep formula to obtain an approximation to the exact solution y(x0 + kh). This is then applied recursively, based on the numerical approximation of k successive steps, to compute y(x0 + (k + 1)h).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000382,modified midpoint method,Gragg's method|Gragg's modified midpoint method,"The modified midpoint method is globally a second order method for approximating the solution of the initial value problem y' = f(x, y), y(x0) = y0, which advances a vector of dependent variables y(x) from a point x to a point x + H by a sequence of n substeps each of size h, h = H/n.
",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000382,,2011-07-01,AZ,,,,Gragg's method|Gragg's modified midpoint method,"The modified midpoint method is globally a second order method for approximating the solution of the initial value problem y' = f(x, y), y(x0) = y0, which advances a vector of dependent variables y(x) from a point x to a point x + H by a sequence of n substeps each of size h, h = H/n.
",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000630,root-finding method,,Method for finding the root of a function (f(x) = 0).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000630,,2021-06-01,JRK,,,true,,Method for finding the root of a function (f(x) = 0).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000362,implicit-state Doob-Gillespie algorithm,,"The algorithm uses a representation of the system together with a super-approximation of its ‘event horizon’ (all events that may happen next), and a specific correction scheme to obtain exact timings. Being completely local and not based on any kind of enumeration, this algorithm has a per event time cost which is independent of (i) the size of the set of generable species (which can even be infinite), and (ii) independent of the size of the system (ie, the number of agent instances). The algorithm can be refined, using concepts derived from the classical notion of causality, so that in addition to the above one also has that the even cost is depending (iii) only logarithmically on the size of the model (ie, the number of rules).
",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000017,,,,,kisao:KISAO_0000362,,2011-06-13,AZ,,,,,"The algorithm uses a representation of the system together with a super-approximation of its ‘event horizon’ (all events that may happen next), and a specific correction scheme to obtain exact timings. Being completely local and not based on any kind of enumeration, this algorithm has a per event time cost which is independent of (i) the size of the set of generable species (which can even be infinite), and (ii) independent of the size of the system (ie, the number of agent instances). The algorithm can be refined, using concepts derived from the classical notion of causality, so that in addition to the above one also has that the even cost is depending (iii) only logarithmically on the size of the model (ie, the number of rules).
",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000590,ACHR flux sampling method,artificial centering hit-and-run flux sampling method,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000588,,,,,kisao:KISAO_0000590,,2020-10-29,JRK,,http://identifiers.org/biosimulators/cobratoolbox|http://identifiers.org/biosimulators/cobrapy,,artificial centering hit-and-run flux sampling method,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000548,quadratic programming,QP,Process of solving a quadratic optimization problem.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000549,,,,,kisao:KISAO_0000548,,2020-10-29,JRK,,CPLEX|CVXOPT|Mosek|MATLAB|OptLang|XPRESS|Gurobi|ConvOpt,,QP,Process of solving a quadratic optimization problem.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000515,Levenberg-Marquardt,,"Levenberg-Marquardt is a gradient descent method. It is a hybrid between the steepest descent and the Newton methods.
Levenberg first suggested an improvement to the Newton method in order to make it more robust, i.e. to overcome the problem of non-convergence. His suggestion was to add a factor to the diagonal elements of the Hessian matrix of second derivatives when not close to the minimum (this can be judged by how positive definite the matrix is). The effect when this factor is large compared to the elements of Hessian is that the method then becomes the steepest descent method. Later Marquardt suggested that the factor should be multiplicative rather than additive and also defined a heuristic to make this factor increase or decrease. The method known as Levenberg-Marquardt is thus an adaptive method that effectively changes between the steepest descent to the Newton method.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000471,,,,,kisao:KISAO_0000515,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,,"Levenberg-Marquardt is a gradient descent method. It is a hybrid between the steepest descent and the Newton methods.
Levenberg first suggested an improvement to the Newton method in order to make it more robust, i.e. to overcome the problem of non-convergence. His suggestion was to add a factor to the diagonal elements of the Hessian matrix of second derivatives when not close to the minimum (this can be judged by how positive definite the matrix is). The effect when this factor is large compared to the elements of Hessian is that the method then becomes the steepest descent method. Later Marquardt suggested that the factor should be multiplicative rather than additive and also defined a heuristic to make this factor increase or decrease. The method known as Levenberg-Marquardt is thus an adaptive method that effectively changes between the steepest descent to the Newton method.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000260,virtual box size,,Target size of virtual boxes for 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000252,,,,,kisao:KISAO_0000260,,,,,,,,Target size of virtual boxes for 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000663,BDD logical model trap space identification method,Binary Decision Diagram logical model trap space identification method,Method for determining the trap spaces of a regulatory graph using a Binary Decision Diagram (BDD).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000661,,,,,kisao:KISAO_0000663,,2021-07-08,JRK,,,,Binary Decision Diagram logical model trap space identification method,Method for determining the trap spaces of a regulatory graph using a Binary Decision Diagram (BDD).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000395,improved biconjugate gradient method,,"An 'improved biconjugate gradient method' branch contains algorithms which can be viewed as improvements over some of drawbacks of BCG [http://identifiers.org/biomodels.kisao/KISAO_0000358], such as (1) the need for matrix-vector multiplications with A^T (which can be inconvenient as well as doubling the number of matrix-vector multiplications compared to CG [http://identifiers.org/biomodels.kisao/KISAO_0000357] for each increase in the degree of the underlying Krylov subspace), (2) the possibility of breakdowns and (3) erratic convergence behavior.
",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000354,,,,,kisao:KISAO_0000395,,2011-07-19,AZ,,,true,,"An 'improved biconjugate gradient method' branch contains algorithms which can be viewed as improvements over some of drawbacks of BCG [http://identifiers.org/biomodels.kisao/KISAO_0000358], such as (1) the need for matrix-vector multiplications with A^T (which can be inconvenient as well as doubling the number of matrix-vector multiplications compared to CG [http://identifiers.org/biomodels.kisao/KISAO_0000357] for each increase in the degree of the underlying Krylov subspace), (2) the possibility of breakdowns and (3) erratic convergence behavior.
",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000574,species transition probabilities,,Probability of each species to be chosen for the next state transition.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000574,,2020-10-29,JRK,,http://identifiers.org/biosimulators/boolnet,,,Probability of each species to be chosen for the next state transition.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000040,Poisson tau-leaping method,explicit tau-leaping|explicit tau-leaping method with basic pre-leap check|poisson tau-leaping|explicit tau-leaping method with basic preleap check,Explicit tau-leaping method with basic pre leap check.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000039,,,,,kisao:KISAO_0000040,,,,,ByoDyn,,explicit tau-leaping|explicit tau-leaping method with basic pre-leap check|poisson tau-leaping|explicit tau-leaping method with basic preleap check,Explicit tau-leaping method with basic pre leap check.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000541,beta parameter for stabilized step size control,beta,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243|http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000541,,2020-10-29,JRK,,Odespy|JModelica|http://identifiers.org/biosimulators/gillespy2|SciPy,,beta,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000095,sub-volume stochastic reaction-diffusion algorithm,,Stochastic method using a combination of discretisation of compartment volumes into voxels and Gillespie-like algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000241] to simulate the evolution of the system.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000335,,,,,kisao:KISAO_0000095,,2008-07-08,NLN,,,true,,Stochastic method using a combination of discretisation of compartment volumes into voxels and Gillespie-like algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000241] to simulate the evolution of the system.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000317,E-Cell multi-algorithm simulation method,,A modular meta-algorithm with a discrete event scheduler that can incorporate any type of time-driven simulation algorithm. It was shown that this meta-algorithm can efficiently drive simulation models with different simulation algorithms with little intrusive modification to the algorithms themselves. Only a few additional methods to handle communications between computational modules are required.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000317,,2011-05-23,AZ,,http://identifiers.org/biosimulators/ecell4,,,A modular meta-algorithm with a discrete event scheduler that can incorporate any type of time-driven simulation algorithm. It was shown that this meta-algorithm can efficiently drive simulation models with different simulation algorithms with little intrusive modification to the algorithms themselves. Only a few additional methods to handle communications between computational modules are required.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000818,L0 matrix,,The L0 matrix of a model.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000818,,06-03-2021,LPS,,,,,The L0 matrix of a model.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000413,exact Newton method,direct Newton method,"Any of the finite dimensional Newton-type methods [http://identifiers.org/biomodels.kisao/KISAO_0000408] requires the numerical solution of the linear equations F'(x[k])deltax[k]=-F(x[k]). Whenever direct elimination methods are applicable, we speak of exact Newton methods.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000408,,,,,kisao:KISAO_0000413,,2012-01-18,AZ,,,,direct Newton method,"Any of the finite dimensional Newton-type methods [http://identifiers.org/biomodels.kisao/KISAO_0000408] requires the numerical solution of the linear equations F'(x[k])deltax[k]=-F(x[k]). Whenever direct elimination methods are applicable, we speak of exact Newton methods.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000343,generalized finite element method,partition of unity method|PUM|GFEM,"The GFEM is a generalization of the classical 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] — in its h [http://identifiers.org/biomodels.kisao/KISAO_0000338], p [http://identifiers.org/biomodels.kisao/KISAO_0000339], and h-p versions [http://identifiers.org/biomodels.kisao/KISAO_0000340]— as well as of the various forms of meshless methods used in engineering.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000369,,,,,kisao:KISAO_0000343,,2011-06-07,AZ,,,,partition of unity method|PUM|GFEM,"The GFEM is a generalization of the classical 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] — in its h [http://identifiers.org/biomodels.kisao/KISAO_0000338], p [http://identifiers.org/biomodels.kisao/KISAO_0000339], and h-p versions [http://identifiers.org/biomodels.kisao/KISAO_0000340]— as well as of the various forms of meshless methods used in engineering.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000478,preconditioner,,"the preconditioner, if any, used by the solver when using a GMRES, BiCGStab or TFQMR linear solver during a Newton iteration.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000478,,2015-09-10,AZ,,http://identifiers.org/biosimulators/opencor,,,"the preconditioner, if any, used by the solver when using a GMRES, BiCGStab or TFQMR linear solver during a Newton iteration.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000310,method of lines,NUMOL|NMOL|MOL,The method of lines is a general technique for solving partial differential equations (PDEs) by typically using finite difference relationships for the spatial derivatives and ordinary differential equations for the time derivative.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000369,,,,,kisao:KISAO_0000310,,2011-05-11,AZ,,,,NUMOL|NMOL|MOL,The method of lines is a general technique for solving partial differential equations (PDEs) by typically using finite difference relationships for the spatial derivatives and ordinary differential equations for the time derivative.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000822,extensive property,,"An extensive variable such as an amount, particle number, or mass.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000820,,,,,kisao:KISAO_0000822,,06-03-2021,LPS,,,,,"An extensive variable such as an amount, particle number, or mass.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000855,length,,The number of elements of a set of values.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000855,,2021-10-09,MK,,,,,The number of elements of a set of values.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000287,Milstein method,,The Milstein method is a technique for the approximate numerical solution of a stochastic differential equation.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000281,,,,,kisao:KISAO_0000287,,2011-05-10,AZ,,,,,The Milstein method is a technique for the approximate numerical solution of a stochastic differential equation.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000254,Brownian diffusion accuracy,,"Accuracy code of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057], which sets which neighbouring boxes are checked for potential bi-molecular reactions. Consider the reaction A + B -> C and suppose that A and B are within a binding radius of each other. This reaction will always be performed if A and B are in the same virtual box. If accuracy is set to at least 3, then it will also occur if A and B are in nearest-neighbour virtual boxes. If it is at least 7, then the reaction will happen if they are in nearest-neighbour boxes that are separated by periodic boundary conditions. And if it is 9 or 10, then all edge and corner boxes are checked for reactions, which means that no potential reactions are overlooked.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000254,,,,,Smoldyn,,,"Accuracy code of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057], which sets which neighbouring boxes are checked for potential bi-molecular reactions. Consider the reaction A + B -> C and suppose that A and B are within a binding radius of each other. This reaction will always be performed if A and B are in the same virtual box. If accuracy is set to at least 3, then it will also occur if A and B are in nearest-neighbour virtual boxes. If it is at least 7, then the reaction will happen if they are in nearest-neighbour boxes that are separated by periodic boundary conditions. And if it is 9 or 10, then all edge and corner boxes are checked for reactions, which means that no potential reactions are overlooked.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000389,quasi-minimal residual method,QMR,"The QMR algorithm is a robust iterative solver for general nonsingular non-Hermitian linear systems. The method uses a robust implementation of the look-ahead Lanczos algorithm to generate basis vectors for the Krylov subspaces Kn(r0, A). The QMR iterates are characterized by a quasi-minimal residual property over Kn(r0, A).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000393,,,,,kisao:KISAO_0000389,,2011-07-18,AZ,,,,QMR,"The QMR algorithm is a robust iterative solver for general nonsingular non-Hermitian linear systems. The method uses a robust implementation of the look-ahead Lanczos algorithm to generate basis vectors for the Krylov subspaces Kn(r0, A). The QMR iterates are characterized by a quasi-minimal residual property over Kn(r0, A).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000356,DASSL,SDASSL|DDASSL|differential algebraic system solver,"DASSL is designed for the numerical solution of implicit systems of differential/algebraic equations written in the form F(t,y,y')=0, where F, y, and y' are vectors, and initial values for y and y' are given.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000432,,,,,kisao:KISAO_0000356,,2011-06-10,AZ,,,,SDASSL|DDASSL|differential algebraic system solver,"DASSL is designed for the numerical solution of implicit systems of differential/algebraic equations written in the form F(t,y,y')=0, where F, y, and y' are vectors, and initial values for y and y' are given.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000624,method for solving a system of linear equations,,"method for solving a system of linear equations

Example system of equations:

3x + 2y - z = 0
2x - 2y + 4z = 0
-x + 1/2y - z = 0",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000624,,2021-06-01,JRK,,,true,,"method for solving a system of linear equations

Example system of equations:

3x + 2y - z = 0
2x - 2y + 4z = 0
-x + 1/2y - z = 0",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000552,optimization method,,Optimization method such as the revised simplex method [http://identifiers.org/biomodels.kisao/KISAO_0000550] or primal-dual interior point method [http://identifiers.org/biomodels.kisao/KISAO_0000551].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000552,,2020-10-29,JRK,,CPLEX|GLPK|Gurobi,,,Optimization method such as the revised simplex method [http://identifiers.org/biomodels.kisao/KISAO_0000550] or primal-dual interior point method [http://identifiers.org/biomodels.kisao/KISAO_0000551].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000323,equation-free probabilistic steady-state approximation,,"We present a probabilistic steady-state approximation that separates the time scales of an arbitrary reaction network, detects the convergence of a marginal distribution to a quasi-steady-state, directly samples the underlying distribution, and uses those samples to accurately predict the state of the system, including the effects of the slow dynamics, at future times. The numerical method produces an accurate solution of both the fast and slow reaction dynamics while, for stiff systems, reducing the computational time by orders of magnitude. The developed theory makes no approximations on the shape or form of the underlying steady-state distribution and only assumes that it is ergodic. <...> The developed theory may be applied to any type of kinetic Monte Carlo simulation to more efficiently simulate dynamically stiff systems, including existing exact, approximate, or hybrid stochastic simulation techniques.
",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000333,,,,,kisao:KISAO_0000323,,2011-06-02,AZ,,,,,"We present a probabilistic steady-state approximation that separates the time scales of an arbitrary reaction network, detects the convergence of a marginal distribution to a quasi-steady-state, directly samples the underlying distribution, and uses those samples to accurately predict the state of the system, including the effects of the slow dynamics, at future times. The numerical method produces an accurate solution of both the fast and slow reaction dynamics while, for stiff systems, reducing the computational time by orders of magnitude. The developed theory makes no approximations on the shape or form of the underlying steady-state distribution and only assumes that it is ergodic. <...> The developed theory may be applied to any type of kinetic Monte Carlo simulation to more efficiently simulate dynamically stiff systems, including existing exact, approximate, or hybrid stochastic simulation techniques.
",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000482,half-bandwith parameter,,the parameter related to the half-bandwidth value used by the Banded linear solver or preconditioner.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000482,,,,,,,,the parameter related to the half-bandwidth value used by the Banded linear solver or preconditioner.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000228,tau-leaping epsilon,epsilon|tolerance,The leap condition is chosen such that the expected change in the propensity function aj(x) is bounded by Epsilon * a0 where Epsilon is an error control parameter between 0 and 1. This parameter is the basic error control mechanism for the Tau-Leaping algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000039]. As Epsilon decreases the leaps become shorter and the simulation is more accurate.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000228,,,,,,,epsilon|tolerance,The leap condition is chosen such that the expected change in the propensity function aj(x) is bounded by Epsilon * a0 where Epsilon is an error control parameter between 0 and 1. This parameter is the basic error control mechanism for the Tau-Leaping algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000039]. As Epsilon decreases the leaps become shorter and the simulation is more accurate.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000393,ingenious conjugate gradients-squared method,CGS,"A Lanczos-type method for nonsymmetric sparse linear systems. The method is based on a polynomial variant of the conjugate gradients algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000357]. Although related to the so-called bi-conjugate gradients (Bi-CG) algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000358], it does not involve adjoint matrix-vector multiplications, and the expected convergence rate is about twice that of the Bi-CG algorithm.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000395,,,,,kisao:KISAO_0000393,,2011-07-18,AZ,,,,CGS,"A Lanczos-type method for nonsymmetric sparse linear systems. The method is based on a polynomial variant of the conjugate gradients algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000357]. Although related to the so-called bi-conjugate gradients (Bi-CG) algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000358], it does not involve adjoint matrix-vector multiplications, and the expected convergence rate is about twice that of the Bi-CG algorithm.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000495,random asynchronous updating policy,,An updating policy where a single transition is picked randomly from the set of transitions enabled in this state. Thus a state will have at most one successor.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000452|http://www.biomodels.net/kisao/KISAO#KISAO_0000492,,,,,kisao:KISAO_0000495,,,,,,,,An updating policy where a single transition is picked randomly from the set of transitions enabled in this state. Thus a state will have at most one successor.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000637,derived property,,An output of a simulation which can be derived from its primary outputs.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000820,,,,,kisao:KISAO_0000637,,2021-06-04,JRK,,,,,An output of a simulation which can be derived from its primary outputs.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000090,LSODI,"Livermore solver for ordinary differential equations, implicit version","LSODI solves systems given in linearly implicit form, including differential-algebraic systems.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000094,,,,,kisao:KISAO_0000090,,,,,,,"Livermore solver for ordinary differential equations, implicit version","LSODI solves systems given in linearly implicit form, including differential-algebraic systems.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000232,LSOIBT,"Livermore solver for ordinary differential equations given in implicit form, with block-tridiagonal Jacobian treatment",LSOIBT solves linearly implicit systems in which the matrices involved are all assumed to be block-tridiagonal. Linear systems are solved by the LU method.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000094,,,,,kisao:KISAO_0000232,,,,,,,"Livermore solver for ordinary differential equations given in implicit form, with block-tridiagonal Jacobian treatment",LSOIBT solves linearly implicit systems in which the matrices involved are all assumed to be block-tridiagonal. Linear systems are solved by the LU method.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000367,partitioned Runge-Kutta method,symplectic partitioned Runge-Kutta method|PRK|SPRK,"If a Hamiltonian system possesses a natural partitioning, it is possible to integrate its certain components using one Runge-Kutta method and other components using a different Runge-Kutta method. The overall s-stage scheme is called a partitioned Runge-Kutta method.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000367,,2011-06-16,AZ,,,,symplectic partitioned Runge-Kutta method|PRK|SPRK,"If a Hamiltonian system possesses a natural partitioning, it is possible to integrate its certain components using one Runge-Kutta method and other components using a different Runge-Kutta method. The overall s-stage scheme is called a partitioned Runge-Kutta method.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000674,presimulate,,Whether a model should be presimulated prior to analysis.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000674,,2021-08-23,JRK,,http://identifiers.org/biosimulators/tellurium,,,Whether a model should be presimulated prior to analysis.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000641,bound,,An upper or lower bound on an estimate of a quantity.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000820,,,,,kisao:KISAO_0000641,,2021-06-04,JRK,,,true,,An upper or lower bound on an estimate of a quantity.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000526,flux variability analysis,FVA,Method for determining the minimum and maximum flux of each reaction that satisfies the flux constraints of the flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000407|http://www.biomodels.net/kisao/KISAO#KISAO_0000622,,,,,kisao:KISAO_0000526,,2020-08-11,AZ,,http://identifiers.org/biosimulators/cobrapy,,FVA,Method for determining the minimum and maximum flux of each reaction that satisfies the flux constraints of the flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000559,initial step size,,Initial time step size.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000559,,2020-10-29,JRK,,http://identifiers.org/biosimulators/tellurium|libRoadRunner|http://identifiers.org/biosimulators/gillespy2|SUNDIALS|http://identifiers.org/biosimulators/copasi|SciPy,,,Initial time step size.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000321,Cash-Karp method,,"An family of explicit Runge-Kutta formulas, which are very efficient for problems with smooth solution as well as problems having rapidly varying solutions. Each member of this family consists of a fifty-order formula that contains embedded formulas of all orders 1 through 4. By computing solutions at several different orders, it is possible to detect sharp fronts or discontinuities before all the function evaluations defining the full Runge-Kutta step have been computed.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000435,,,,,kisao:KISAO_0000321,,2011-05-26,AZ,,Cain|GSL,,,"An family of explicit Runge-Kutta formulas, which are very efficient for problems with smooth solution as well as problems having rapidly varying solutions. Each member of this family consists of a fifty-order formula that contains embedded formulas of all orders 1 through 4. By computing solutions at several different orders, it is possible to detect sharp fronts or discontinuities before all the function evaluations defining the full Runge-Kutta step have been computed.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000051,Bortz-Kalos-Lebowitz algorithm,KMC|kinetic Monte Carlo method|BKL|DMC|dynamic Monte Carlo|kinetic Monte Carlo|dynamic Monte Carlo method|n-fold way,The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000335,,,,,kisao:KISAO_0000051,,,,,,,KMC|kinetic Monte Carlo method|BKL|DMC|dynamic Monte Carlo|kinetic Monte Carlo|dynamic Monte Carlo method|n-fold way,The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000853,count,,The number of non-zero elements of a set of values. If the values contain NaN the count is NaN.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000853,,2021-10-09,MK,,,,,The number of non-zero elements of a set of values. If the values contain NaN the count is NaN.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000585,TOMS731,,Moving-grid interface for systems of one-dimensional time-dependent partial differential equations.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000369,,,,,kisao:KISAO_0000585,,2020-10-29,JRK,,http://identifiers.org/biosimulators/jsim,,,Moving-grid interface for systems of one-dimensional time-dependent partial differential equations.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000328,minimum fast rate,,"Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which controls the minimum rate of the reaction in order for it to be considered fast.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000252,,,,,kisao:KISAO_0000328,,2011-06-02,AZ,,,,,"Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which controls the minimum rate of the reaction in order for it to be considered fast.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000820,model and simulation property characteristic,,A property of a variable of a model or simulation.,false,,,http://www.w3.org/2002/07/owl#Thing,,,,,kisao:KISAO_0000820,,06-03-2021,LPS,,,true,,A property of a variable of a model or simulation.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000354,Krylov subspace projection method,Krylov subspace method,"Krylov subspace method is an iterative linear equation method, which builds up Krylov subspaces and look for good approximations to eigenvectors and invariant subspaces within the Krylov spaces.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000398,,,,,kisao:KISAO_0000354,,2011-06-10,AZ,,,,Krylov subspace method,"Krylov subspace method is an iterative linear equation method, which builds up Krylov subspaces and look for good approximations to eigenvectors and invariant subspaces within the Krylov spaces.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000602,minimum species threshold for continuous approximation,epsilon|Epsilon,Minimum number of molecules of both reactant and product species required for approximation as a continuous Markov process.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000244,,,,,kisao:KISAO_0000602,,2021-01-13,MLB|JRK,,,,epsilon|Epsilon,Minimum number of molecules of both reactant and product species required for approximation as a continuous Markov process.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000230,minimum reactions per leap,threshold,"'minimum reactions per leap' parameter is used in hybrid methods, which adaptively switch between the tau-leaping algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000039] to the SSA Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] when the number of reactions in a single tau-leaping leap step is less than the threshold.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000230,,,,,,,threshold,"'minimum reactions per leap' parameter is used in hybrid methods, which adaptively switch between the tau-leaping algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000039] to the SSA Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] when the number of reactions in a single tau-leaping leap step is less than the threshold.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000595,rFBA,regulatory flux balance analysis,Method for predicting metabolic fluxes under patterns of the regulation of gene expression,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000622|http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000595,,2020-10-29,JRK,,,true,regulatory flux balance analysis,Method for predicting metabolic fluxes under patterns of the regulation of gene expression,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000332,ER-leap initial leap,L,"L (initial step) is a parameter of 'exact R-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000331]. ''We will assume that the reaction event to be bounded occurs within a run of L events in the SSA algorithm[http://identifiers.org/biomodels.kisao/KISAO_0000029], in order to execute L reactions at once in the manner of the R-leap algorithm[http://identifiers.org/biomodels.kisao/KISAO_0000230]''.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000244,,,,,kisao:KISAO_0000332,,2011-06-03,AZ,,,,L,"L (initial step) is a parameter of 'exact R-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000331]. ''We will assume that the reaction event to be bounded occurs within a run of L events in the SSA algorithm[http://identifiers.org/biomodels.kisao/KISAO_0000029], in order to execute L reactions at once in the manner of the R-leap algorithm[http://identifiers.org/biomodels.kisao/KISAO_0000230]''.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000668,"Numerical Recipes in C ""stiff\"" Rosenbrock method",stiff,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000033,,,,,kisao:KISAO_0000668,,2021-08-08,JRK,,http://identifiers.org/biosimulators/xpp,,stiff,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000635,unscaled property,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000820,,,,,kisao:KISAO_0000635,,2021-06-04,JRK,,,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000493,synchronous updating policy,,An updating policy where all enabled transitions occur simultaneously. Thus a state will have at most one successor.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000451,,,,,kisao:KISAO_0000493,,,,,,,,An updating policy where all enabled transitions occur simultaneously. Thus a state will have at most one successor.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000276,Gill method,Runge-Kutta-Gill method|Gill's method,"Gill's fourth order method is a Runge-Kutta method for approximating the solution of the initial value problem y'(x) = f(x,y);  y(x0) = y0 which evaluates the integrand,f(x,y), four times per step. This method is a fourth order procedure for which Richardson extrapolation can be used.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000276,,2011-05-09,AZ,,,,Runge-Kutta-Gill method|Gill's method,"Gill's fourth order method is a Runge-Kutta method for approximating the solution of the initial value problem y'(x) = f(x,y);  y(x0) = y0 which evaluates the integrand,f(x,y), four times per step. This method is a fourth order procedure for which Richardson extrapolation can be used.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000524,partitioned leaping method,,"Multiscale simulation approach for modeling stochasticity in chemical reaction networks. The approach seamlessly integrates exact-stochastic and ""leaping"" methodologies into a single partitioned leaping algorithmic framework. The technique correctly accounts for stochastic noise at significantly reduced computational cost, requires the definition of only three modelindependent parameters and is particularly well-suited for simulating systems containing widely disparate species populations.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000039,,,,,kisao:KISAO_0000524,,2020-05-29,AZ,,http://identifiers.org/biosimulators/bionetgen,,,"Multiscale simulation approach for modeling stochasticity in chemical reaction networks. The approach seamlessly integrates exact-stochastic and ""leaping"" methodologies into a single partitioned leaping algorithmic framework. The technique correctly accounts for stochastic noise at significantly reduced computational cost, requires the definition of only three modelindependent parameters and is particularly well-suited for simulating systems containing widely disparate species populations.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000045,implicit tau-leaping method,,"Contrary to the explicit tau-leaping [http://identifiers.org/biomodels.kisao/KISAO_0000039 and http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000239] , the implicit tau-leaping allows for much larger time-steps when simulating stiff systems.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000039,,,,,kisao:KISAO_0000045,,2007-10-12,dk,,,,,"Contrary to the explicit tau-leaping [http://identifiers.org/biomodels.kisao/KISAO_0000039 and http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000239] , the implicit tau-leaping allows for much larger time-steps when simulating stiff systems.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000429,clusterization parameter,,Parameter used by algorithms performing clusterization.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000429,,,AZ,,,true,,Parameter used by algorithms performing clusterization.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000672,"Numerical Recipes in C ""quality-controlled Runge-Kutta\"" method",rkqs,Cash-Karp method with step size adjustment.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000321,,,,,kisao:KISAO_0000672,,2021-08-18,JRK,,http://identifiers.org/biosimulators/xpp,,rkqs,Cash-Karp method with step size adjustment.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000371,stochastic differential equation problem,SDE problem,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000405,,,,,kisao:KISAO_0000371,,,AZ,,,,SDE problem,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000805,elasticity coefficient (unscaled),,An unscaled elasticity coefficient of any reaction with respect to an independent element (such as a global parameter or boundary species).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000805,,06-03-2021,LPS,,,,,An unscaled elasticity coefficient of any reaction with respect to an independent element (such as a global parameter or boundary species).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000307,finite difference method,FDM,"The finite difference method is based on local approximations of the partial derivatives in a Partial Differential Equation, which are derived by low order Taylor series expansions.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000369,,,,,kisao:KISAO_0000307,,2011-05-11,AZ,,,,FDM,"The finite difference method is based on local approximations of the partial derivatives in a Partial Differential Equation, which are derived by low order Taylor series expansions.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000685,biological state optimization method,,A method for computing the optimal state of a biological system accordion to a particular objective.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000685,,2022-03-27,EN|JRK|WL,,,true,,A method for computing the optimal state of a biological system accordion to a particular objective.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000652,concentration rate,,"Rate of a process relative to a volume, such as the rate of a reaction in molar^-1 s^-1.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000834,,,,,kisao:KISAO_0000652,,2021-06-04,JRK,,,,,"Rate of a process relative to a volume, such as the rate of a reaction in molar^-1 s^-1.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000204,particle number upper limit,,This parameter of 'Pahle hybrid method' [http://identifiers.org/biomodels.kisao/KISAO_0000231] is a double value specifying the upper limit for particle numbers. Species with a particle number above this value are considered as having a high particle number. The 'particle number upper limit' cannot be lower than the 'particle number lower limit' [http://identifiers.org/biomodels.kisao/KISAO_0000203].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000252,,,,,kisao:KISAO_0000204,,,,,,,,This parameter of 'Pahle hybrid method' [http://identifiers.org/biomodels.kisao/KISAO_0000231] is a double value specifying the upper limit for particle numbers. Species with a particle number above this value are considered as having a high particle number. The 'particle number upper limit' cannot be lower than the 'particle number lower limit' [http://identifiers.org/biomodels.kisao/KISAO_0000203].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000409,ordinary Newton method,,"A 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] which solves the general nonlinear problem F(x)=0 by applying successive linearization F'(x[k])deltax[k]=-F(x[k]), x[k+1]=x[k]+deltax[k], k=0,1,...",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000408,,,,,kisao:KISAO_0000409,,2012-01-18,AZ,,,,,"A 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] which solves the general nonlinear problem F(x)=0 by applying successive linearization F'(x[k])deltax[k]=-F(x[k]), x[k+1]=x[k]+deltax[k], k=0,1,...",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000280,Adams-Moulton method,implicit Adams method,"The (k-1)-step Adams-Moulton method is an implicit linear multistep method that iteratively approximates the solution, y(x) at x = x0+kh, of the initial value problem by yk = yk - 1 + h * ( b0 f(xk,yk) + b1 f(xk - 1,yk - 1) + . . . + bk - 1 f(x1,y1) ), where b1, . . . , bk - 1 are constants.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000289,,,,,kisao:KISAO_0000280,,2011-05-09,AZ,,http://identifiers.org/biosimulators/vcell,,implicit Adams method,"The (k-1)-step Adams-Moulton method is an implicit linear multistep method that iteratively approximates the solution, y(x) at x = x0+kh, of the initial value problem by yk = yk - 1 + h * ( b0 f(xk,yk) + b1 f(xk - 1,yk - 1) + . . . + bk - 1 f(x1,y1) ), where b1, . . . , bk - 1 are constants.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000502,DA-DFBA,direct approach dynamics flux balance analysis|DA,Dynamic Flux Balance Analysis (DFBA) [http://identifiers.org/biomodels.kisao/KISAO_0000499] couples flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model approaches with dynamic model approaches. The direct approach (DA) includes the LP solver in the right-hand side evaluator for the ordinary differential equations (ODEs) and takes advantage of reliable implicit ODE integrators with adaptive step size for error control.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000499,,,,,kisao:KISAO_0000502,,2017-09-12,AZ,,DFBAlab,,direct approach dynamics flux balance analysis|DA,Dynamic Flux Balance Analysis (DFBA) [http://identifiers.org/biomodels.kisao/KISAO_0000499] couples flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model approaches with dynamic model approaches. The direct approach (DA) includes the LP solver in the right-hand side evaluator for the ordinary differential equations (ODEs) and takes advantage of reliable implicit ODE integrators with adaptive step size for error control.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000339,p-version of the finite element method,p-method|p-FEM,The p version of 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] uses a fixed mesh but increases the polynomial degree p to increase accuracy. Can be considered as a special case of the h-p version [http://identifiers.org/biomodels.kisao/KISAO_0000340].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000337,,,,,kisao:KISAO_0000339,,2011-06-07,AZ,,,,p-method|p-FEM,The p version of 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] uses a fixed mesh but increases the polynomial degree p to increase accuracy. Can be considered as a special case of the h-p version [http://identifiers.org/biomodels.kisao/KISAO_0000340].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000084,nonnegative Poisson tau-leaping method,modified poisson tau-leaping,"The explicit tau-leaping procedure attempts to speed up the stochastic simulation of a chemically reacting system by approximating the number of firings of each reaction channel during a chosen time increment Tau as a Poisson random variable. Since the Poisson random variable can have arbitrarily large sample values, there is always the possibility that this procedure will cause one or more reaction channels to fire so many times during Tau that the population of some reactant species will be driven negative. Two recent papers have shown how that unacceptable occurrence can be avoided by replacing the Poisson random variables with binomial random variables, whose values are naturally bounded. This paper describes a modified Poisson tau-leaping procedure that also avoids negative populations, but is easier to implement than the binomial procedure. The new Poisson procedure also introduces a second control parameter, whose value essentially dials the procedure from the original Poisson tau-leaping at one extreme to the exact stochastic simulation algorithm at the other; therefore, the modified Poisson procedure will generally be more accurate than the original Poisson procedure [http://identifiers.org/biomodels.kisao/KISAO_0000040].",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000039,,,,,kisao:KISAO_0000084,,,,,,,modified poisson tau-leaping,"The explicit tau-leaping procedure attempts to speed up the stochastic simulation of a chemically reacting system by approximating the number of firings of each reaction channel during a chosen time increment Tau as a Poisson random variable. Since the Poisson random variable can have arbitrarily large sample values, there is always the possibility that this procedure will cause one or more reaction channels to fire so many times during Tau that the population of some reactant species will be driven negative. Two recent papers have shown how that unacceptable occurrence can be avoided by replacing the Poisson random variables with binomial random variables, whose values are naturally bounded. This paper describes a modified Poisson tau-leaping procedure that also avoids negative populations, but is easier to implement than the binomial procedure. The new Poisson procedure also introduces a second control parameter, whose value essentially dials the procedure from the original Poisson tau-leaping at one extreme to the exact stochastic simulation algorithm at the other; therefore, the modified Poisson procedure will generally be more accurate than the original Poisson procedure [http://identifiers.org/biomodels.kisao/KISAO_0000040].",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000263,NFSim agent-based simulation method,,"A generalization a rule-based version of 'Gillespie's direct method' (SSA) [http://identifiers.org/biomodels.kisao/KISAO_0000029]. The method is guaranteed to produce the same results as the exact SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by cycling over three primary steps. First, NFsim calculates the probability or propensity for each rule to take effect given the current molecular states. Second, it samples the time to the next reaction event and selects the corresponding reaction rule. Finally, NFsim executes the selected reaction by applying the rule and updating the molecular agents accordingly.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000017,,,,,kisao:KISAO_0000263,,2011-04-07,AZ,,http://identifiers.org/biosimulators/bionetgen,,,"A generalization a rule-based version of 'Gillespie's direct method' (SSA) [http://identifiers.org/biomodels.kisao/KISAO_0000029]. The method is guaranteed to produce the same results as the exact SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by cycling over three primary steps. First, NFsim calculates the probability or propensity for each rule to take effect given the current molecular states. Second, it samples the time to the next reaction event and selects the corresponding reaction rule. Finally, NFsim executes the selected reaction by applying the rule and updating the molecular agents accordingly.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000561,Pahle hybrid Gibson-Bruck Next Reaction method/Runge-Kutta method,,Combines a deterministic numerical integration of ODEs with a stochastic simulation algorithm. The whole biochemical network is partitioned into a deterministic and a stochastic subnet internally. The deterministic subnet contains all reactions in which only species with high particle numbers take part. All reactions with at least one low-numbered species are in the stochastic subnet. The partitioning of the biochemical network can change dynamically during the simulation. The reaction probabilities of the stochastic subnet are approximated as constant during one stochastic step. A 4th-order Runge-Kutta method is used to numerically integrate the deterministic part of the system. The stochastic subnet is simulated by the Gibson-Bruck Next Reaction Method.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000231,,,,,kisao:KISAO_0000561,,2020-10-29,JRK,,http://identifiers.org/biosimulators/copasi,,,Combines a deterministic numerical integration of ODEs with a stochastic simulation algorithm. The whole biochemical network is partitioned into a deterministic and a stochastic subnet internally. The deterministic subnet contains all reactions in which only species with high particle numbers take part. All reactions with at least one low-numbered species are in the stochastic subnet. The partitioning of the biochemical network can change dynamically during the simulation. The reaction probabilities of the stochastic subnet are approximated as constant during one stochastic step. A 4th-order Runge-Kutta method is used to numerically integrate the deterministic part of the system. The stochastic subnet is simulated by the Gibson-Bruck Next Reaction Method.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000398,iterative method for solving a system of linear equations,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000624,,,,,kisao:KISAO_0000398,,2011-07-19,AZ,,,true,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000365,NDSolve method,,"The Mathematica computation system function NDSolve is a general numerical differential equation solver. It can handle a wide range of ordinary differential equations as well as some partial differential equations. NDSolve can also solve some differential-algebraic equations, which are typically a mix of differential and algebraic equations.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000365,,2011-06-16,AZ,,Mathematica,,,"The Mathematica computation system function NDSolve is a general numerical differential equation solver. It can handle a wide range of ordinary differential equations as well as some partial differential equations. NDSolve can also solve some differential-algebraic equations, which are typically a mix of differential and algebraic equations.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000838,concentration,,"The intensive quantity concentration, or, the amount of the entity with respect to the entity in which it resides.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000838,,06-03-2021,LPS,,,,,"The intensive quantity concentration, or, the amount of the entity with respect to the entity in which it resides.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000102,spatial description,,"Algorithm, possessing this characteristic, takes into account the location of the reacting components.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000097,,,,,kisao:KISAO_0000102,,2008-07-08,NLN,,,,,"Algorithm, possessing this characteristic, takes into account the location of the reacting components.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000600,hybrid adaptive Gibson - Milstein method,,"A hybrid stochastic method partitions the system into subsets of fast and slow reactions and approximates the fast reactions as a continuous Markov process, using a chemical Langevin equation, and accurately describes the slow dynamics using the Gibson algorithm. Fixed time step Milstein is used for approximate numerical solution of CLE.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000600,,2021-01-13,MLB|JRK,,http://identifiers.org/biosimulators/vcell,,,"A hybrid stochastic method partitions the system into subsets of fast and slow reactions and approximates the fast reactions as a continuous Markov process, using a chemical Langevin equation, and accurately describes the slow dynamics using the Gibson algorithm. Fixed time step Milstein is used for approximate numerical solution of CLE.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000467,maximum step size,,"An upper limit, in the units of the bound variable over which a numerical integration is being performed, that an adaptive step size numerical integration algorithm should take.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000467,,2013-07-05,AZ,,,,,"An upper limit, in the units of the bound variable over which a numerical integration is being performed, that an adaptive step size numerical integration algorithm should take.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000609,"embedded Runge-Kutta Prince-Dormand (8,9) method",RK8PD,An embedded Runge-Kutta integrator of order 8(9).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000302,,,,,kisao:KISAO_0000609,,2021-01-25,JRK,,http://identifiers.org/biosimulators/ibiosim,,RK8PD,An embedded Runge-Kutta integrator of order 8(9).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000593,MOMA,Minimization of Metabolic Adjustment|minimization of metabolic adjustment,minimization of metabolic adjustment (MOMA) is an extension of FBA for the prediction of flux distributions in gene knockouts. MOMA identifies the closest point in the permissible flux space of the knockout to the wild-type flux vector by solving an optimization problem.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000407|http://www.biomodels.net/kisao/KISAO#KISAO_0000622,,,,,kisao:KISAO_0000593,,2020-10-29,JRK,,,true,Minimization of Metabolic Adjustment|minimization of metabolic adjustment,minimization of metabolic adjustment (MOMA) is an extension of FBA for the prediction of flux distributions in gene knockouts. MOMA identifies the closest point in the permissible flux space of the knockout to the wild-type flux vector by solving an optimization problem.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000237,approximate solution,,"Approximation algorithms are algorithms used to find approximate solutions to optimization problems. Approximation algorithms are often associated with NP-hard problems; since it is unlikely that there can ever be efficient polynomial time exact algorithms solving NP-hard problems, one settles for polynomial time sub-optimal solutions. Unlike heuristics, which usually only find reasonably good solutions reasonably fast, one wants provable solution quality and provable run time bounds. Ideally, the approximation is optimal up to a small constant factor (for instance within 5% of the optimal solution). Approximation algorithms are increasingly being used for problems where exact polynomial-time algorithms are known but are too expensive due to the input size.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000235,,,,,kisao:KISAO_0000237,,,,,,,,"Approximation algorithms are algorithms used to find approximate solutions to optimization problems. Approximation algorithms are often associated with NP-hard problems; since it is unlikely that there can ever be efficient polynomial time exact algorithms solving NP-hard problems, one settles for polynomial time sub-optimal solutions. Unlike heuristics, which usually only find reasonably good solutions reasonably fast, one wants provable solution quality and provable run time bounds. Ideally, the approximation is optimal up to a small constant factor (for instance within 5% of the optimal solution). Approximation algorithms are increasingly being used for problems where exact polynomial-time algorithms are known but are too expensive due to the input size.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000831,model and simulation property,,A variable of a model or simulation.,false,,,http://www.w3.org/2002/07/owl#Thing,,,,,kisao:KISAO_0000831,,06-03-2021,LPS,,,true,,A variable of a model or simulation.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000679,maximum time for approximation,,Maximum amount of time to spend approximating an analysis.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000681,,,,,kisao:KISAO_0000679,,2021-08-23,JRK,,http://identifiers.org/biosimulators/tellurium,,,Maximum amount of time to spend approximating an analysis.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000613,stochastic simulation algorithm with normally-distributed next reaction times,NMC,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000335,,,,,kisao:KISAO_0000613,,2021-01-25,JRK,,http://identifiers.org/biosimulators/ibiosim,,NMC,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000646,propensity,,"Tendency of an event such as of the firing of a reaction in the stochastic simulation algorithm (SSA, KISAO_0000029).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000646,,2021-06-04,JRK,,,,,"Tendency of an event such as of the firing of a reaction in the stochastic simulation algorithm (SSA, KISAO_0000029).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000529,parallelism,,Number of parallel processes to use.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000529,,,,,,,,Number of parallel processes to use.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000241,Gillespie-like method,,Stochastic simulation algorithm using an approach alike the one described in Gillespie's papers of 1976 and 1977.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000319,,,,,kisao:KISAO_0000241,,,,,,true,,Stochastic simulation algorithm using an approach alike the one described in Gillespie's papers of 1976 and 1977.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000274,first-passage Monte Carlo algorithm,asynchronous event-driven diffusion Monte Carlo|AED diffusion kinetic Monte Carlo method|AED DKMC,"We present a novel Monte Carlo algorithm for N diffusing finite particles that react on collisions. Using the theory of first-passage processes and time dependent Green's functions, we break the difficult N-body problem into independent single- and two-body propagations circumventing numerous diffusion hops used in standard Monte Carlo simulations. The new algorithm is exact, extremely efficient, and applicable to many important physical situations in arbitrary integer dimensions.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000319,,,,,kisao:KISAO_0000274,,2011-05-05,AZ,,,,asynchronous event-driven diffusion Monte Carlo|AED diffusion kinetic Monte Carlo method|AED DKMC,"We present a novel Monte Carlo algorithm for N diffusing finite particles that react on collisions. Using the theory of first-passage processes and time dependent Green's functions, we break the difficult N-body problem into independent single- and two-body propagations circumventing numerous diffusion hops used in standard Monte Carlo simulations. The new algorithm is exact, extremely efficient, and applicable to many important physical situations in arbitrary integer dimensions.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000471,local optimization algorithm,local optimiation method,"A local optimization algorithm is an optimisation algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000470] that only finds a local optimum of a function. If several optima exist for the function, it usually depends on the starting values for the variables which optimum is found.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000470,,,,,kisao:KISAO_0000471,,2015-04-23,AZ,,,,local optimiation method,"A local optimization algorithm is an optimisation algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000470] that only finds a local optimum of a function. If several optima exist for the function, it usually depends on the starting values for the variables which optimum is found.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000376,linearity of equation,,"Linear differential equations are of the form Ly = f, where the differential operator L is a linear operator, y is the unknown function, and the right hand side f is a given function of the same nature as y.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000370,,,,,kisao:KISAO_0000376,,2011-07-19,AZ,,,,,"Linear differential equations are of the form Ly = f, where the differential operator L is a linear operator, y is the unknown function, and the right hand side f is a given function of the same nature as y.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000407,steady state method,,A method looking for a steady state of a dynamic system.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000407,,2012-01-17,AZ,,,true,,A method looking for a steady state of a dynamic system.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000650,sensitivity,,"The sensitivity of a variable to another variable, such as the derivative a variable with respect to another.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000650,,2021-06-04,JRK,,,true,,"The sensitivity of a variable to another variable, such as the derivative a variable with respect to another.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000683,relative tolerance for approximation,,Relatative tolerance for an alternative approximate solution to an exact solution which could not be found.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000209,,,,,kisao:KISAO_0000683,,2021-08-23,JRK,,http://identifiers.org/biosimulators/tellurium,,,Relatative tolerance for an alternative approximate solution to an exact solution which could not be found.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000509,evolutionary strategy,SRES|evolutionary strategies with stochastic ranking,"Evolutionary Strategies with Stochastic Ranking (SRES) is similar to Evolutionary Programming. However, a parent has multiple offsprings during each generation. Each offspring will contain a recombination of genes with another parent and additional mutations. The algorithm assures that each parameter value will be within its boundaries. But constraints to the solutions may be violated.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000508,,,,,kisao:KISAO_0000509,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,SRES|evolutionary strategies with stochastic ranking,"Evolutionary Strategies with Stochastic Ranking (SRES) is similar to Evolutionary Programming. However, a parent has multiple offsprings during each generation. Each offspring will contain a recombination of genes with another parent and additional mutations. The algorithm assures that each parameter value will be within its boundaries. But constraints to the solutions may be violated.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000535,VODE,"Real-valued Variable-coefficient Ordinary Differential Equation solver, with fixed-leading-coefficient implementation|real-valued variable-coefficient ordinary differential equation solver, with fixed-leading-coefficient implementation|DVODE",VODE provides implicit Adams method (for non-stiff problems) and a method based on backward differentiation formulas (BDF) (for stiff problems).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000433,,,,,kisao:KISAO_0000535,,2020-10-29,JRK,,Odespy|http://identifiers.org/biosimulators/gillespy2|deSolve|SciPy,,"Real-valued Variable-coefficient Ordinary Differential Equation solver, with fixed-leading-coefficient implementation|real-valued variable-coefficient ordinary differential equation solver, with fixed-leading-coefficient implementation|DVODE",VODE provides implicit Adams method (for non-stiff problems) and a method based on backward differentiation formulas (BDF) (for stiff problems).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000568,NLEQ1,Newton-type method for solveing non-linear (NL) equations (EQ)|numerical solution of nonlinear (NL) equations (EQ) especially designed for numerically sensitive problems,"Damped Newton-algorithm with rank strategy for systems of highly nonlinear equations.

Global Newton method with error oriented convergence criterion; arbitrary selection of direct linear equation solver.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000408,,,,,kisao:KISAO_0000568,,2020-10-29,JRK,,http://identifiers.org/biosimulators/tellurium,,Newton-type method for solveing non-linear (NL) equations (EQ)|numerical solution of nonlinear (NL) equations (EQ) especially designed for numerically sensitive problems,"Damped Newton-algorithm with rank strategy for systems of highly nonlinear equations.

Global Newton method with error oriented convergence criterion; arbitrary selection of direct linear equation solver.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000089,LSODAR,ordinary differential equation solver for stiff or non-stiff systems with root finding|Livermore solver for ordinary differential equations with automatic method switching and root finding,"LSODAR is a variant of LSODA [http://identifiers.org/biomodels.kisao/KISAO_0000088] with a root finding capability added. Thus it solves problems dy/dt = f with dense or banded Jacobian and automatic method selection, and at the same time, it finds the roots of any of a set of given functions of the form g(t,y). This is often useful for finding stop conditions, or for finding points at which a switch is to be made in the function f.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000094,,,,,kisao:KISAO_0000089,,2007-10-27,dk,,,,ordinary differential equation solver for stiff or non-stiff systems with root finding|Livermore solver for ordinary differential equations with automatic method switching and root finding,"LSODAR is a variant of LSODA [http://identifiers.org/biomodels.kisao/KISAO_0000088] with a root finding capability added. Thus it solves problems dy/dt = f with dense or banded Jacobian and automatic method selection, and at the same time, it finds the roots of any of a set of given functions of the form g(t,y). This is often useful for finding stop conditions, or for finding points at which a switch is to be made in the function f.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000305,Verner method,Verner's method,The first high order (6(5)) embedded Runge-Kutta formulas that avoid the drawback of giving identically zero error estimates for quadrature problems y' = f(x) were constructed by Verner in 1978.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000302,,,,,kisao:KISAO_0000305,,2011-05-10,AZ,,,,Verner's method,The first high order (6(5)) embedded Runge-Kutta formulas that avoid the drawback of giving identically zero error estimates for quadrature problems y' = f(x) were constructed by Verner in 1978.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000056,Smoluchowski equation based method,,Method based on the Smoluchowski equation.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000056,,2007-10-29,dk,,,true,,Method based on the Smoluchowski equation.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000546,convex optimization algorithm,,Optimization of a convex function over a convex set. Convex optimization is subclass of global optimization because conveness gaurantees that each local optimum is a global optimum.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000472,,,,,kisao:KISAO_0000546,,2020-10-29,JRK,,,,,Optimization of a convex function over a convex set. Convex optimization is subclass of global optimization because conveness gaurantees that each local optimum is a global optimum.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000513,NL2SOL,adaptive nonlinear least-squares algorithm,"The NL2SOL method is based on an adaptive nonlinear least-squares algorithm, devised by Dennis and colleagues. For problems with large number of residuals, this algorithm is known to be more reliable than Gauss-Newton or Levenberg-Marquardt method and more efficient than the secant or variable metric algorithms that are intended for general function minimization.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000471,,,,,kisao:KISAO_0000513,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,adaptive nonlinear least-squares algorithm,"The NL2SOL method is based on an adaptive nonlinear least-squares algorithm, devised by Dennis and colleagues. For problems with large number of residuals, this algorithm is known to be more reliable than Gauss-Newton or Levenberg-Marquardt method and more efficient than the secant or variable metric algorithms that are intended for general function minimization.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000572,level of superimposed noise,noise level,Standard deviation of the Gaussian noise which is added to each prediction.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000572,,2020-10-29,JRK,,http://identifiers.org/biosimulators/boolnet,,noise level,Standard deviation of the Gaussian noise which is added to each prediction.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000849,cumulative sum,,The cumulative sum of a set of values. If the values contain NaN the cumulative sum is NaN.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000849,,2021-10-09,MK,,,,,The cumulative sum of a set of values. If the values contain NaN the cumulative sum is NaN.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000816,link matrix,,The link matrix of a model.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000816,,06-03-2021,LPS,,,,,The link matrix of a model.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000579,linear MOMA,linear minimization of metabolic adjustment|Linear Minimization of Metabolic Adjustment,"Linear minimization of metabolic adjustment (MOMA) is an extension of FBA for the prediction of flux distributions in gene knockouts. Linear MOMA employs linear programming to identify the closest point (in terms of its L1 norm) in the permissible flux space of the knockout to the wild-type flux vector by solving the optimization problem

Min sum(|fluxAi - fluxBi|)",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000593,,,,,kisao:KISAO_0000579,,2020-10-29,JRK,,http://identifiers.org/biosimulators/cobratoolbox|http://identifiers.org/biosimulators/optflux,,linear minimization of metabolic adjustment|Linear Minimization of Metabolic Adjustment,"Linear minimization of metabolic adjustment (MOMA) is an extension of FBA for the prediction of flux distributions in gene knockouts. Linear MOMA employs linear programming to identify the closest point (in terms of its L1 norm) in the permissible flux space of the knockout to the wild-type flux vector by solving the optimization problem

Min sum(|fluxAi - fluxBi|)",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000411,Newton-like method,,"A 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] which is characterized by the fact that, in finite dimension, the Jacodian matrices are either replaced by some fixed 'close by' Jacobian F'(z) with z not equal to the initial guess x[0], or by some approximation so that: M'(x[0])deltax[k]=-F(x[k]), x[k+1]=x[k]+deltax[k], k=0,1,...",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000408,,,,,kisao:KISAO_0000411,,2012-01-18,AZ,,,,,"A 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] which is characterized by the fact that, in finite dimension, the Jacodian matrices are either replaced by some fixed 'close by' Jacobian F'(z) with z not equal to the initial guess x[0], or by some approximation so that: M'(x[0])deltax[k]=-F(x[k]), x[k+1]=x[k]+deltax[k], k=0,1,...",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000248,tau-leaping delta,,Tau-leaping delta specifies how close two symmetric transition rates must be before we classify them as in partial-equilibrium. Only applies to the implicit tau routine [http://identifiers.org/biomodels.kisao/KISAO_0000045].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000252,,,,,kisao:KISAO_0000248,,,,,,,,Tau-leaping delta specifies how close two symmetric transition rates must be before we classify them as in partial-equilibrium. Only applies to the implicit tau routine [http://identifiers.org/biomodels.kisao/KISAO_0000045].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000842,standard deviation,,The standard deviation of a set of values. If the values contain NaN the standard deviation is NaN.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000842,,2021-10-09,MK,,,,,The standard deviation of a set of values. If the values contain NaN the standard deviation is NaN.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000341,mixed finite element method,,A 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] in which both stress and displacement fields are approximated as primary variables.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000337,,,,,kisao:KISAO_0000341,,2011-06-07,AZ,,,,,A 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] in which both stress and displacement fields are approximated as primary variables.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000644,maximum flux,,"Maximum possible flux such as computed by flux variability analysis (FVA, KISAO_0000526).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000639,,,,,kisao:KISAO_0000644,,2021-06-04,JRK,,,,,"Maximum possible flux such as computed by flux variability analysis (FVA, KISAO_0000526).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000611,incremental stochastic simulation algorithm,iSSA,Performs local averaging over small time-intervals to compute statistics on typical behavior.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000335,,,,,kisao:KISAO_0000611,,,JRK,,https://identifers.org/biosimulators/ibiosim,,iSSA,Performs local averaging over small time-intervals to compute statistics on typical behavior.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000500,SOA-DFBA,SOA|static optimization approach dynamic flux balance analysis,"Dynamic Flux Balance Analysis (DFBA) [http://identifiers.org/biomodels.kisao/KISAO_0000499] couples flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model approaches with dynamic model approaches. The static optimization approach (SOA) uses the Euler forward method [http://identifiers.org/biomodels.kisao/KISAO_0000030], solving the embedded LPs at each time step. The FBA fluxes are assumed to be constant during the time step.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000499,,,,,kisao:KISAO_0000500,,2017-09-12,AZ,,DFBAlab,,SOA|static optimization approach dynamic flux balance analysis,"Dynamic Flux Balance Analysis (DFBA) [http://identifiers.org/biomodels.kisao/KISAO_0000499] couples flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model approaches with dynamic model approaches. The static optimization approach (SOA) uses the Euler forward method [http://identifiers.org/biomodels.kisao/KISAO_0000030], solving the embedded LPs at each time step. The FBA fluxes are assumed to be constant during the time step.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000405,type of differential equation,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000370,,,,,kisao:KISAO_0000405,,2011-07-19,AZ,,,true,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000657,sequential logical simulation method,,"Qualitative (logical) models specify the evolution rules of their components. In the case of a sequential updating, nodes are updated sequentially in a pre-determined deterministic order.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000448,,,,,kisao:KISAO_0000657,,2021-07-08,JRK,,,,,"Qualitative (logical) models specify the evolution rules of their components. In the case of a sequential updating, nodes are updated sequentially in a pre-determined deterministic order.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000380,Richardson extrapolation based method,,"A method based on ideas of Richardson extrapolation, which is a process for obtaining increased accuracy in a discretized approximation by extrapolating results from coarse discretizations to an arbitrarily fine one.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000377,,,,,kisao:KISAO_0000380,,2011-07-01,AZ,,,true,,"A method based on ideas of Richardson extrapolation, which is a process for obtaining increased accuracy in a discretized approximation by extrapolating results from coarse discretizations to an arbitrarily fine one.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000285,finite volume method,FVM,"The finite volume method is a method for representing and evaluating partial differential equations in the form of algebraic equations, which attempts to emulate continuous conservation laws of physics.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000369,,,,,kisao:KISAO_0000285,,2011-05-09,AZ,,http://identifiers.org/biosimulators/vcell,,FVM,"The finite volume method is a method for representing and evaluating partial differential equations in the form of algebraic equations, which attempts to emulate continuous conservation laws of physics.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000507,genetic algorithm SR,genetic algorithm with stochastic ranking,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000506,,,,,kisao:KISAO_0000507,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,genetic algorithm with stochastic ranking,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000000,modelling and simulation algorithm,modeling and simulation algorithm,Algorithm used to instantiate a simulation from a mathematical model.,false,,,http://www.w3.org/2002/07/owl#Thing,,,,,kisao:KISAO_0000000,,2008-05-26,dk,,,true,modeling and simulation algorithm,Algorithm used to instantiate a simulation from a mathematical model.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000252,partitioning control parameter,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000252,,,Parameter describing partitioning of the system.,,,true,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000814,flux control coefficient matrix (unscaled),,The unscaled flux control coefficient matrix. The dimensions are reactions by reactions.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000814,,06-03-2021,LPS,,,,,The unscaled flux control coefficient matrix. The dimensions are reactions by reactions.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000694,ODE solver,ordinary differential equation solver,An ODE solver is the general category of packages such as CVODE-like methods [http://identifiers.org/biomodels.kisao/KISAO_0000433] or Livermore solvers [http://identifiers.org/biomodels.kisao/KISAO_0000094] that solve systems of ordinary differential equations.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000694,,2023-05-19,lps,,,false,ordinary differential equation solver,An ODE solver is the general category of packages such as CVODE-like methods [http://identifiers.org/biomodels.kisao/KISAO_0000433] or Livermore solvers [http://identifiers.org/biomodels.kisao/KISAO_0000094] that solve systems of ordinary differential equations.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000544,IDAS,implicit differential-algebraic solver with sensitivity analysis,"IDAS solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0, y(t0)=y0, y'(t0)=y'0 with sensitivity analysis.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000432,,,,,kisao:KISAO_0000544,,2020-10-29,JRK,,SUNDIALS,,implicit differential-algebraic solver with sensitivity analysis,"IDAS solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0, y(t0)=y0, y'(t0)=y'0 with sensitivity analysis.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000661,logical model trap space identification method,,"Method for determining the trap spaces, or stable motifs or symbolic stable states, of a regulatory graph,",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000658,,,,,kisao:KISAO_0000661,,2021-07-08,JRK,,,true,,"Method for determining the trap spaces, or stable motifs or symbolic stable states, of a regulatory graph,",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000418,N-way partial least squares regression method,N-way PLSR|N-PLS|N-way partial least squares method,"Multivariate regression method that can be used on N-way data. Based on Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416], which is a regression method based on estimated latent variables. PLSR is related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000423,,,,,kisao:KISAO_0000418,,2012-01-18,AZ,,,,N-way PLSR|N-PLS|N-way partial least squares method,"Multivariate regression method that can be used on N-way data. Based on Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416], which is a regression method based on estimated latent variables. PLSR is related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000511,steepest descent,,Steepest descent is an optimization method that follows the direction of steepest descent on the hyper-surface of the objective function to find a local minimum. The direction of steepest descent is defined by the negative of the gradient of the objective function.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000471,,,,,kisao:KISAO_0000511,,2019-01-18,AZ,,,,,Steepest descent is an optimization method that follows the direction of steepest descent on the hyper-surface of the objective function to find a local minimum. The direction of steepest descent is defined by the negative of the gradient of the objective function.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000348,extended finite element method,X-FEM|XFEM,A numerical method to model arbitrary discontinuities in continuous bodies that does not require the mesh to conform to the discontinuities nor significant mesh refinement near singularities. In X-FEM the standard finite element approximation [http://identifiers.org/biomodels.kisao/KISAO_0000337] is enriched and the approximation space is extended by an additional family of functions.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000369,,,,,kisao:KISAO_0000348,,2011-06-09,AZ,,,,X-FEM|XFEM,A numerical method to model arbitrary discontinuities in continuous bodies that does not require the mesh to conform to the discontinuities nor significant mesh refinement near singularities. In X-FEM the standard finite element approximation [http://identifiers.org/biomodels.kisao/KISAO_0000337] is enriched and the approximation space is extended by an additional family of functions.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000315,lattice gas automata,LGCA|lattice gas cellular automata|LGA,"Lattice gas automata methods are a series of cellular automata methods used to simulate fluid flows. From the LGCA, it is possible to derive the macroscopic Navier-Stokes equations.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000068,,,,,kisao:KISAO_0000315,,2011-05-23,AZ,,,,LGCA|lattice gas cellular automata|LGA,"Lattice gas automata methods are a series of cellular automata methods used to simulate fluid flows. From the LGCA, it is possible to derive the macroscopic Navier-Stokes equations.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000827,standard error ignoring NaN,,"The standard error of a set of values, ignoring NaN entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000827,,2021-06-03,"LPS, MK",,,,,"The standard error of a set of values, ignoring NaN entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000422,number of N-way partial least squares regression factors,number of factors,Parameter of 'N-way partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000369] describing the number of factors to compute.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000422,,2012-01-18,AZ,,,,number of factors,Parameter of 'N-way partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000369] describing the number of factors to compute.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000029,Gillespie direct algorithm,Doob-Gillespie method|stochastic simulation algorithm|SSA|Gillespie's algorithm|Gillespie's direct method|DM,"Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000241,,,,,kisao:KISAO_0000029,,2007-11-10,dk,,ByoDyn|Cain|http://identifiers.org/biosimulators/ibiosim|http://identifiers.org/biosimulators/bionetgen|BetaWB,,Doob-Gillespie method|stochastic simulation algorithm|SSA|Gillespie's algorithm|Gillespie's direct method|DM,"Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000629,null,none,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000628,,,,,kisao:KISAO_0000629,,2021-06-01,JRK,,,,none,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000557,absolute steady-state tolerance,,Absolute error tolerance of the steady-state.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000211,,,,,kisao:KISAO_0000557,,2020-10-29,JRK,,http://identifiers.org/biosimulators/amici|SUNDIALS,,,Absolute error tolerance of the steady-state.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000487,minimum damping,,The damping factor is a variable for at least some steady state algorithms: roadrunner allows you to set the minimum value for this.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000487,,,,,Roadrunner,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000454,constant updating policy,,An updating policy that chooses a transition in a constant way.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000453,,,,,kisao:KISAO_0000454,,2013-01-28,AZ,,,,,An updating policy that chooses a transition in a constant way.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000082,k-alpha leaping method,,"Alternative to the tau-leaping [http://identifiers.org/biomodels.kisao/KISAO_0000039], where one leaps a fixed number of reaction-events.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000621,,,,,kisao:KISAO_0000082,,,,,,,,"Alternative to the tau-leaping [http://identifiers.org/biomodels.kisao/KISAO_0000039], where one leaps a fixed number of reaction-events.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000583,minimum order,,Minimum order of method.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000594,,,,,kisao:KISAO_0000583,,2020-10-29,JRK,,http://identifiers.org/biosimulators/jsim,,,Minimum order of method.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000326,number of samples,,"Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which determines the number of samples taken from the distribution.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000326,,2011-06-02,AZ,,,,,"Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which determines the number of samples taken from the distribution.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000550,simplex method,Dantzig's simplex algorithm,"Approach to solving linear programming models by hand using slack variables, tableaus, and pivot variables as a means to finding the optimal solution of an optimization problem.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000547,,,,,kisao:KISAO_0000550,,2020-10-29,JRK,,CPLEX|GLPK|Gurobi,,Dantzig's simplex algorithm,"Approach to solving linear programming models by hand using slack variables, tableaus, and pivot variables as a means to finding the optimal solution of an optimization problem.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000505,particle swarm,,"The particle swarm optimization method suggested by Kennedy and Eberhart is inspired by a flock of birds or a school of fish searching for food. Each particle has a position Xi and a velocity Vi in the parameter space. Additionally, it remembers its best achieved objective value O and position Mi. Dependent on its own information and the position of its best neighbor (a random subset of particles of the swarm) a new velocity is calculated. With this information the position is updated.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000472,,,,,kisao:KISAO_0000505,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,,"The particle swarm optimization method suggested by Kennedy and Eberhart is inspired by a flock of birds or a school of fish searching for food. Each particle has a position Xi and a velocity Vi in the parameter space. Additionally, it remembers its best achieved objective value O and position Mi. Dependent on its own information and the position of its best neighbor (a random subset of particles of the swarm) a new velocity is calculated. With this information the position is updated.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000622,flux balance method,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000685,,,,,kisao:KISAO_0000622,,2021--04-27,JRK,,,true,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000655,rate,,"Speed at which a process is occuring such as the temporal rate of a chemical reaction,",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000820,,,,,kisao:KISAO_0000655,,06-04-2021,JRK,,,,,"Speed at which a process is occuring such as the temporal rate of a chemical reaction,",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000087,Dormand-Prince method,Prince-Dormand method|DOPRI,"Dormand-Prince is an explicit method for the numerical integration of ODES with a given initial value.
It is an 'embedded Runge-Kutta method' [http://identifiers.org/biomodels.kisao/KISAO_0000302] RK5 (4) which (a) has a 'small' principal truncation term in the Fifth order and (b) has an extended region of absolute stability.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000435,,,,,kisao:KISAO_0000087,,2007-11-12,dk,,ECell3|GSL|http://identifiers.org/biosimulators/ibiosim|Matlab|http://identifiers.org/biosimulators/jsim,,Prince-Dormand method|DOPRI,"Dormand-Prince is an explicit method for the numerical integration of ODES with a given initial value.
It is an 'embedded Runge-Kutta method' [http://identifiers.org/biomodels.kisao/KISAO_0000302] RK5 (4) which (a) has a 'small' principal truncation term in the Fifth order and (b) has an extended region of absolute stability.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000283,IDA,solver for differential-algebraic equation systems|implicit differential-algebraic solver,"IDA solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0,  y(t0)=y0,  y'(t0)=y'0. At each step, a Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408] leads to linear systems Jx=b, which are solved by one of five methods - two direct (dense or band; serial version only) and three Krylov [http://identifiers.org/biomodels.kisao/KISAO_0000354] (GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000353], BiCGStab [http://identifiers.org/biomodels.kisao/KISAO_0000392], or TFQMR [http://identifiers.org/biomodels.kisao/KISAO_0000396]).
IDA is written in C, but derived from the package DASPK [http://identifiers.org/biomodels.kisao/KISAO_0000355] which is written in Fortran.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000432,,,,,kisao:KISAO_0000283,,2011-05-09,AZ,,http://identifiers.org/biosimulators/opencor|http://identifiers.org/biosimulators/vcell|SUNDIALS,,solver for differential-algebraic equation systems|implicit differential-algebraic solver,"IDA solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0,  y(t0)=y0,  y'(t0)=y'0. At each step, a Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408] leads to linear systems Jx=b, which are solved by one of five methods - two direct (dense or band; serial version only) and three Krylov [http://identifiers.org/biomodels.kisao/KISAO_0000354] (GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000353], BiCGStab [http://identifiers.org/biomodels.kisao/KISAO_0000392], or TFQMR [http://identifiers.org/biomodels.kisao/KISAO_0000396]).
IDA is written in C, but derived from the package DASPK [http://identifiers.org/biomodels.kisao/KISAO_0000355] which is written in Fortran.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000480,lower half-bandwidth,,the lower half-bandwidth value used by the Banded linear solver or preconditioner (a value between 0 and n-1 with n the number of ODEs/DAEs in the model).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000482,,,,,kisao:KISAO_0000480,,2015-09-10,AZ,,http://identifiers.org/biosimulators/opencor,,,the lower half-bandwidth value used by the Banded linear solver or preconditioner (a value between 0 and n-1 with n the number of ODEs/DAEs in the model).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000352,hybrid method,,A simulation methods which combines the advantages of complementary simulation approaches: the whole system is subdivided into appropriate parts and different simulation methods operate on these parts at the same time.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000352,,2011-06-09,AZ,,,true,,A simulation methods which combines the advantages of complementary simulation approaches: the whole system is subdivided into appropriate parts and different simulation methods operate on these parts at the same time.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000688,type of system described,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000097,,,,,kisao:KISAO_0000688,,2022-03-29,EN|JRK|WL,,,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000296,Hammer-Hollingsworth method,,The numerical integration of ordinary differential equations by the use of Gaussian quadrature methods.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000296,,2011-05-10,AZ,,,,,The numerical integration of ordinary differential equations by the use of Gaussian quadrature methods.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000518,evolutionary algorithm parameter,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000518,,2019-01-18,AZ,,,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000098,type of variable,,Type of variables used for the simulation.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000097,,,,,kisao:KISAO_0000098,,,AZ,,,true,,Type of variables used for the simulation.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000449,synchronous logical model simulation method,,Qualitative (logical) models specify the evolution rules of their components. In the case of a synchronous updating all enabled transitions are processed simultaneously. ,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000448,,,,,kisao:KISAO_0000449,,2013-01-28,AZ,,,,,Qualitative (logical) models specify the evolution rules of their components. In the case of a synchronous updating all enabled transitions are processed simultaneously. ,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000692,cellular system,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000690,,,,,kisao:KISAO_0000692,,2022-03-29,EN|JRK|WL,,,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000416,partial least squares regression method,PLSR method|PLSR,Multivariate regression method based on estimated latent variables. Related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000423,,,,,kisao:KISAO_0000416,,2012-01-18,AZ,,,,PLSR method|PLSR,Multivariate regression method based on estimated latent variables. Related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000858,variance ignoring NaN,,"The variance of a set of values, ignoring Nan entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000858,,2021-10-09,MK,,,,,"The variance of a set of values, ignoring Nan entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000825,mean ignoring NaN,,"The mean (average) of a set of values, ignoring NaN entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000825,,2021-06-03,"LPS, MK",,,,,"The mean (average) of a set of values, ignoring NaN entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000588,flux sampling,,Method for sampling fluxes from the null space of a flux balance analysis model,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000407|http://www.biomodels.net/kisao/KISAO#KISAO_0000622,,,,,kisao:KISAO_0000588,,2020-10-29,JRK,,,true,,Method for sampling fluxes from the null space of a flux balance analysis model,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000420,number of partial least squares components,,Parameter used by 'partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000416] describing number of PLS components to include in the regression analysis.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000420,,2012-01-18,AZ,,,,,Parameter used by 'partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000416] describing number of PLS components to include in the regression analysis.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000555,absolute quadrature tolerance,,Absolute error tolerance of the adjoint solution.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000211,,,,,kisao:KISAO_0000555,,2020-10-29,JRK,,http://identifiers.org/biosimulators/amici|SUNDIALS,,,Absolute error tolerance of the adjoint solution.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000522,start temperature,,"Initial temperature of the system. The higher the temperature, the larger the probability that a global optimum is found. Note that the temperature should be very high in the beginning of the method (the system should be above the ""melting"" temperature). This value has the same units as the objective function, so what represents ""high"" is different from problem to problem.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000521,,,,,kisao:KISAO_0000522,,2019-01-18,AZ,,,,,"Initial temperature of the system. The higher the temperature, the larger the probability that a global optimum is found. Note that the temperature should be very high in the beginning of the method (the system should be above the ""melting"" temperature). This value has the same units as the objective function, so what represents ""high"" is different from problem to problem.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000093,LSODPK,Livermore solver for ordinary differential equations for stiff and nonstiff systems with krylov corrector iteration,"LSODPK is a set of FORTRAN subroutines for solving the initial value problem for stiff and nonstiff systems of ordinary differential equations. In solving stiff systems, LSODPK uses a corrector iteration composed of Newton iteration and one of four preconditioned Krylov subspace iteration methods [http://identifiers.org/biomodels.kisao/KISAO_0000354]. The user must select the desired Krylov method and supply a pair of routine to evaluate, preprocess, and solve the (left and/or right) preconditioner matrices. Aside from preconditioning, the implementation is matrix-free, meaning that explicit storage of the Jacobian (or related) matrix is not required. The method is experimental because the scope of problems for which it is effective is not well-known, and users are forewarned that LSODPK may or may not be competitive with traditional methods on a given problem. LSODPK also includes an option for a user-supplied linear system solver to be used without Krylov iteration.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000094,,,,,kisao:KISAO_0000093,,2008-07-08,NLN,,,,Livermore solver for ordinary differential equations for stiff and nonstiff systems with krylov corrector iteration,"LSODPK is a set of FORTRAN subroutines for solving the initial value problem for stiff and nonstiff systems of ordinary differential equations. In solving stiff systems, LSODPK uses a corrector iteration composed of Newton iteration and one of four preconditioned Krylov subspace iteration methods [http://identifiers.org/biomodels.kisao/KISAO_0000354]. The user must select the desired Krylov method and supply a pair of routine to evaluate, preprocess, and solve the (left and/or right) preconditioner matrices. Aside from preconditioning, the implementation is matrix-free, meaning that explicit storage of the Jacobian (or related) matrix is not required. The method is experimental because the scope of problems for which it is effective is not well-known, and users are forewarned that LSODPK may or may not be competitive with traditional methods on a given problem. LSODPK also includes an option for a user-supplied linear system solver to be used without Krylov iteration.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000235,type of solution,,"A characteristic describing the type of the solution produced by the method, specifically whether it is exact or approximate.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000097,,,,,kisao:KISAO_0000235,,,AZ,,,true,,"A characteristic describing the type of the solution produced by the method, specifically whether it is exact or approximate.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000337,finite element method,finite element analysis|FEA|FEM,"A numerical technique for finding approximate solutions of partial differential equations (PDE) as well as of integral equations. The solution approach is based either on eliminating the differential equation completely (steady state problems), or rendering the PDE into an approximating system of ordinary differential equations, which are then numerically integrated using standard techniques such as Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261], Runge-Kutta [http://identifiers.org/biomodels.kisao/KISAO_0000064], etc.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000369,,,,,kisao:KISAO_0000337,,2011-06-07,AZ,,,,finite element analysis|FEA|FEM,"A numerical technique for finding approximate solutions of partial differential equations (PDE) as well as of integral equations. The solution approach is based either on eliminating the differential equation completely (steady state problems), or rendering the PDE into an approximating system of ordinary differential equations, which are then numerically integrated using standard techniques such as Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261], Runge-Kutta [http://identifiers.org/biomodels.kisao/KISAO_0000064], etc.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000433,CVODE-like method,,"Solves ODE initial value problems, in real N-space, written as y'=f(t,y),  y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288].",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000694,,,,,kisao:KISAO_0000433,,2012-05-24,AZ,,,true,,"Solves ODE initial value problems, in real N-space, written as y'=f(t,y),  y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288].",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000363,rule-based simulation method,,Rule-based models provide a powerful alternative to approaches that require explicit enumeration of all possible molecular species of a system. Such models consist of formal rules governing interactive behaviour. Rule-based simulation methods simulate such models.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000363,,2011-06-13,AZ,,,true,,Rule-based models provide a powerful alternative to approaches that require explicit enumeration of all possible molecular species of a system. Such models consist of formal rules governing interactive behaviour. Rule-based simulation methods simulate such models.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000330,R-leaping algorithm,R-leap method,"A novel algorithm is proposed for the acceleration of the exact stochastic simulation algorithm by a predefined number of reaction firings (R-leaping) that may occur across several reaction channels. In the present approach, the numbers of reaction firings are correlated binomial distributions and the sampling procedure is independent of any permutation of the reaction channels. This enables the algorithm to efficiently handle large systems with disparate rates, providing substantial computational savings in certain cases.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000621,,,,,kisao:KISAO_0000330,,2011-06-03,AZ,,,,R-leap method,"A novel algorithm is proposed for the acceleration of the exact stochastic simulation algorithm by a predefined number of reaction firings (R-leaping) that may occur across several reaction channels. In the present approach, the numbers of reaction firings are correlated binomial distributions and the sampling procedure is independent of any permutation of the reaction channels. This enables the algorithm to efficiently handle large systems with disparate rates, providing substantial computational savings in certain cases.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000803,control coefficient (unscaled),,An unscaled control coefficient of any dependent element (such as a reaction or a floating species) with respect to an independent element (such as a global parameter or boundary species).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000803,,06-03-2021,LPS,,,,,An unscaled control coefficient of any dependent element (such as a reaction or a floating species) with respect to an independent element (such as a global parameter or boundary species).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000100,type of progression time step,,Type of time steps used by the algorithm.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000097,,,,,kisao:KISAO_0000100,,,AZ,,,true,,Type of time steps used by the algorithm.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000498,number of runs,,The number of runs that a simulation should perform. Typically used to specify the number of runs for a stochastic simulation.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000498,,2017-07-18,AZ,,,,,The number of runs that a simulation should perform. Typically used to specify the number of runs for a stochastic simulation.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000607,hierarchical Fehlberg method,hODE|hierarchical ODE integration method|hierarchical ordinary differential equation integration method,"Method for continuous simulation of hierarchically organized models, such as a model of a cellular population where each cell in the population is represented by the same species and reactions.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000086,,,,,kisao:KISAO_0000607,,2021-01-25,JRK,,http://identifiers.org/biosimulators/ibiosim,,hODE|hierarchical ODE integration method|hierarchical ordinary differential equation integration method,"Method for continuous simulation of hierarchically organized models, such as a model of a cellular population where each cell in the population is represented by the same species and reactions.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000549,non-linear programming,,Process of solving an optimization problem where some of the constraints or the objective function are nonlinear.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000472,,,,,kisao:KISAO_0000549,,2020-10-29,JRK,,,,,Process of solving an optimization problem where some of the constraints or the objective function are nonlinear.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000666,Jacobian epsilon,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000666,,2021-08-07,JRK,,http://identifiers.org/biosimulators/xpp,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000516,Hooke&Jeeves,Hooke and Jeeves method|method of Hooke and Jeeves|Hooke-Jeeves method,The method of Hooke and Jeeves is a direct search algorithm that searches for the minimum of a nonlinear function without requiring (or attempting to calculate) derivatives of the function. Instead it is based on a heuristic that suggests a descent direction using the values of the function calculated in a number of previous iterations.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000471,,,,,kisao:KISAO_0000516,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,Hooke and Jeeves method|method of Hooke and Jeeves|Hooke-Jeeves method,The method of Hooke and Jeeves is a direct search algorithm that searches for the minimum of a nonlinear function without requiring (or attempting to calculate) derivatives of the function. Instead it is based on a heuristic that suggests a descent direction using the values of the function calculated in a number of previous iterations.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000633,computational function,,"A mathematical function such as the calculation of a minimum, maximum, or mean of a set of values.",false,,,http://www.w3.org/2002/07/owl#Thing,,,,,kisao:KISAO_0000633,,2021-06-04,JRK,,,true,,"A mathematical function such as the calculation of a minimum, maximum, or mean of a set of values.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000491,discrete event simulation algorithm,DES,Discrete Event Simulation algorithm refers to the simulation of systems whose (countable) discrete states change over time and are event-driven.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000491,,,,,,,DES,Discrete Event Simulation algorithm refers to the simulation of systems whose (countable) discrete states change over time and are event-driven.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000261,Euler method,,"The Euler method, named after Leonhard Euler, is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000377,,,,,kisao:KISAO_0000261,,,AZ,,ByoDyn|http://identifiers.org/biosimulators/jsim,,,"The Euler method, named after Leonhard Euler, is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000396,transpose-free quasi-minimal residual algorithm,TFQMR,"A version of CGS [http://identifiers.org/biomodels.kisao/KISAO_0000393] which 'quasi-minimizes' the residual in the space spanned by the vectors generated by the CGS iteration.
",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000389,,,,,kisao:KISAO_0000396,,2011-07-19,AZ,,CVODE,,TFQMR,"A version of CGS [http://identifiers.org/biomodels.kisao/KISAO_0000393] which 'quasi-minimizes' the residual in the space spanned by the vectors generated by the CGS iteration.
",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000819,Nr matrix,,The Nr matrix of a model.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000819,,06-03-2021,LPS,,,,,The Nr matrix of a model.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000553,optimization solver,,"Optimization solver such as CPLEX, GLPK, or Gurobi.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000553,,2020-10-29,JRK,,http://identifiers.org/biosimulators/cbmpy|http://identifiers.org/biosimulators/raven|OptLang|ConvOpt|http://identifiers.org/biosimulators/cobrapy,,,"Optimization solver such as CPLEX, GLPK, or Gurobi.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000427,number of clusters,,Parameter specifying the number of clusters used by C-means algorithm.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000429,,,,,kisao:KISAO_0000427,,2012-01-18,AZ,,,,,Parameter specifying the number of clusters used by C-means algorithm.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000670,use multiple steps,,Whether to perform a multiple time step simulation.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000670,,2021-08-07,JRK,,http://identifiers.org/biosimulators/tellurium,,,Whether to perform a multiple time step simulation.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000022,Elf and Ehrenberg method,Elf algorithm|NSM|next-subvolume method,"Sub-volume stochastic reaction-diffusion method that is a combination of the Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] for sampling the time for a next reaction or diffusion event in each subvolume, with Gibson and Bruck's Next Reaction Method [http://identifiers.org/biomodels.kisao/KISAO_0000027], which is used to keep track of in which subvolume an event occurs next. The subvolumes are kept sorted in a queue, implemented as a binary tree, according to increasing time of the next event. When an event has occurred in the subvolume at the top of the queue, new event times need to be sampled only for one (the event is a chemical reaction) or two (the event is a diffusion jump) subvolume(s).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000095,,,,,kisao:KISAO_0000022,,,,,MesoRD|SmartCell,,Elf algorithm|NSM|next-subvolume method,"Sub-volume stochastic reaction-diffusion method that is a combination of the Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] for sampling the time for a next reaction or diffusion event in each subvolume, with Gibson and Bruck's Next Reaction Method [http://identifiers.org/biomodels.kisao/KISAO_0000027], which is used to keep track of in which subvolume an event occurs next. The subvolumes are kept sorted in a queue, implemented as a binary tree, according to increasing time of the next event. When an event has occurred in the subvolume at the top of the queue, new event times need to be sampled only for one (the event is a chemical reaction) or two (the event is a diffusion jump) subvolume(s).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000520,evolutionary algorithm,,An optimisation algorithm that mimics evolution and is based on reproduction and selection.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000472,,,,,kisao:KISAO_0000520,,2019-01-18,AZ,,,true,,An optimisation algorithm that mimics evolution and is based on reproduction and selection.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000324,nested stochastic simulation algorithm,nested SSA,"This multiscale method is a small modification of the Gillespie's direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029], in the form of a nested SSA, with inner loops for the fast reactions, and outer loop for the slow reactions. The number of groups can be more than two, and the grouping into fast and slow  variables can be done dynamically in an adaptive version of the scheme.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000333,,,,,kisao:KISAO_0000324,,2011-06-02,AZ,,,,nested SSA,"This multiscale method is a small modification of the Gillespie's direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029], in the form of a nested SSA, with inner loops for the fast reactions, and outer loop for the slow reactions. The number of groups can be more than two, and the grouping into fast and slow  variables can be done dynamically in an adaptive version of the scheme.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000076,Stundzia and Lumsden method,RD SSA|reaction-diffusion stochastic simulation algorithm,Sub-volume stochastic reaction-diffusion method that using Green's function to link the bulk diffusion coefficient D in Fick's differential law to the corresponding transition rate probability for diffusion of a particle between finite volume elements. This generalized stochastic algorithm enables to numerically calculate the time evolution of a spatially inhomogeneous mixture of reaction-diffusion species in a finite volume. The time step is stochastic and is generated by a probability distribution determined by the intrinsic reaction kinetics and diffusion dynamics.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000095,,,,,kisao:KISAO_0000076,,,,,,,RD SSA|reaction-diffusion stochastic simulation algorithm,Sub-volume stochastic reaction-diffusion method that using Green's function to link the bulk diffusion coefficient D in Fick's differential law to the corresponding transition rate probability for diffusion of a particle between finite volume elements. This generalized stochastic algorithm enables to numerically calculate the time evolution of a spatially inhomogeneous mixture of reaction-diffusion species in a finite volume. The time step is stochastic and is generated by a probability distribution determined by the intrinsic reaction kinetics and diffusion dynamics.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000533,pFBA factor,,Maximum permissible sum of absolute fluxes.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000533,,,,,,,,Maximum permissible sum of absolute fluxes.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000566,stochastic second order Runge-Kutta method,RI5,Technique for the second order approximate numerical solution of a systems of stochastic differential equations (SDEs). The method is a generalisation of the Runge-Kutta method for ordinary differential equations to stochastic differential equations.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000564,,,,,kisao:KISAO_0000566,,2020-10-29,JRK,,http://identifiers.org/biosimulators/copasi,,RI5,Technique for the second order approximate numerical solution of a systems of stochastic differential equations (SDEs). The method is a generalisation of the Runge-Kutta method for ordinary differential equations to stochastic differential equations.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000605,SDE tolerance,Maximum allowed value of the drift and diffusion errors.|maximum allowed value of the drift and diffusion errors.,Stochastic differential equation tolerance,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000209,,,,,kisao:KISAO_0000605,,2021-01-13,MLB|JRK,,,,Maximum allowed value of the drift and diffusion errors.|maximum allowed value of the drift and diffusion errors.,Stochastic differential equation tolerance,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000303,Zonneveld method,,"An embedded Runge-Kutta method [http://identifiers.org/biomodels.kisao/KISAO_0000302] of order 4(3), proposed by J.A. Zonneveld in 1964.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000302,,,,,kisao:KISAO_0000303,,2011-05-10,AZ,,,,,"An embedded Runge-Kutta method [http://identifiers.org/biomodels.kisao/KISAO_0000302] of order 4(3), proposed by J.A. Zonneveld in 1964.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000107,progression with adaptive time step,,"Algorithm, possessing this characteristic, does not use fixed time steps to update the state of a system during the whole simulation, but on the contrary adapts the length of the time steps to the local situation.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000100,,,,,kisao:KISAO_0000107,,2008-07-08,NLN,,,,,"Algorithm, possessing this characteristic, does not use fixed time steps to update the state of a system during the whole simulation, but on the contrary adapts the length of the time steps to the local situation.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000598,hybrid Gibson - Milstein method,,"A hybrid stochastic method partitions the system into subsets of fast and slow reactions and approximates the fast reactions as a continuous Markov process, using a chemical Langevin equation, and accurately describes the slow dynamics using the Gibson algorithm. Fixed time step Milstein is used for approximate numerical solution of CLE.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000598,,2021-01-13,MLB|JRK,,http://identifiers.org/biosimulators/vcell,,,"A hybrid stochastic method partitions the system into subsets of fast and slow reactions and approximates the fast reactions as a continuous Markov process, using a chemical Langevin equation, and accurately describes the slow dynamics using the Gibson algorithm. Fixed time step Milstein is used for approximate numerical solution of CLE.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000836,amount,,The extensive quantity amount.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000836,,06-03-2021,LPS,,,,,The extensive quantity amount.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000335,generalized stochastic simulation algorithm,,"Gillespie direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029] follows unit-by-unit changes in the total numbers of each reactant species, it is especially well suited to the study of systems in which reactant densities are low and the application of methods based on continuum approximations, such as the traditional ordinary differential equations of chemical kinetics, is questionable. The 'generalized stochastic simulation algorithm' branch presents methods, which extend Gillespie direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029] to suit to systems with other characteristics.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000241,,,,,kisao:KISAO_0000335,,2011-06-03,AZ,,,true,,"Gillespie direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029] follows unit-by-unit changes in the total numbers of each reactant species, it is especially well suited to the study of systems in which reactant densities are low and the application of methods based on continuum approximations, such as the traditional ordinary differential equations of chemical kinetics, is questionable. The 'generalized stochastic simulation algorithm' branch presents methods, which extend Gillespie direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029] to suit to systems with other characteristics.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000209,relative tolerance,RTOL,This parameter is a numeric value specifying the desired relative tolerance the user wants to achieve. A smaller value means that the trajectory is calculated more accurately.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000597,,,,,kisao:KISAO_0000209,,,,,,,RTOL,This parameter is a numeric value specifying the desired relative tolerance the user wants to achieve. A smaller value means that the trajectory is calculated more accurately.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000847,product,,The product of a set of values. If the values contain NaN the product is NaN.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000847,,2021-10-09,MK,,,,,The product of a set of values. If the values contain NaN the product is NaN.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000374,ordinary differential equation problem,ODE problem,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000405,,,,,kisao:KISAO_0000374,,,AZ,,,,ODE problem,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000476,iteration type,,the type of iteration used by the solver,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000476,,2015-09-10,AZ,,http://identifiers.org/biosimulators/opencor,,,the type of iteration used by the solver,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000618,bunker,,"A variant of the stochastic simulation algorithm (SSA) in which the time to the next reaction is equated to the mean inter-event time (inverse of the sum of the propensitites of the reactions) rather than sampled from a distribution parameterized by this mean inter-event time. In this method, the next reaction time is deterministic rather than stochastic as in SSA.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000335,,,,,kisao:KISAO_0000618,,2021-01-30,JRK,,http://identifiers.org/biosimulators/ibiosim,,,"A variant of the stochastic simulation algorithm (SSA) in which the time to the next reaction is equated to the mean inter-event time (inverse of the sum of the propensitites of the reactions) rather than sampled from a distribution parameterized by this mean inter-event time. In this method, the next reaction time is deterministic rather than stochastic as in SSA.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000279,Adams-Bashforth method,explicit Adams method,"Given an initial value problem: y' = f(x,y),  y(x0) = y0 together with additional starting values y1 = y(x0 + h), . . . , yk-1 = y(x0 + (k-1) h) the k-step Adams-Bashforth method is an explicit linear multistep method that approximates the solution, y(x) at x = x0+kh, of the initial value problem by yk = yk - 1 + h * ( a0 f(xk - 1,yk - 1) + a1 f(xk - 2,yk - 2) + . . . + ak - 1 f(x0,y0) ), where a0, a1, . . . , ak - 1 are constants.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000289,,,,,kisao:KISAO_0000279,,2011-05-09,AZ,,,,explicit Adams method,"Given an initial value problem: y' = f(x,y),  y(x0) = y0 together with additional starting values y1 = y(x0 + h), . . . , yk-1 = y(x0 + (k-1) h) the k-step Adams-Bashforth method is an explicit linear multistep method that approximates the solution, y(x) at x = x0+kh, of the initial value problem by yk = yk - 1 + h * ( a0 f(xk - 1,yk - 1) + a1 f(xk - 2,yk - 2) + . . . + ak - 1 f(x0,y0) ), where a0, a1, . . . , ak - 1 are constants.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000840,minimum,,The minimum of a set of values. If the values contain NaN the minimum is NaN.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000840,,2021-10-09,MK,,,,,The minimum of a set of values. If the values contain NaN the minimum is NaN.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000071,LSODE,Livermore solver for ordinary differential equations,"LSODE solves stiff and nonstiff systems of the form dy/dt = f. In the stiff case, it treats the Jacobian matrix sf/dy as either a dense (full) or a banded matrix, and as either user-supplied or internally approximated by difference quotients. It uses Adams methods (predictor-corrector) [http://identifiers.org/biomodels.kisao/KISAO_0000364] in the nonstiff case, and Backward Differentiation Formula (BDF) methods (the Gear methods) [http://identifiers.org/biomodels.kisao/KISAO_0000288] in the stiff case.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000094,,,,,kisao:KISAO_0000071,,2007-11-16,dk,,,,Livermore solver for ordinary differential equations,"LSODE solves stiff and nonstiff systems of the form dy/dt = f. In the stiff case, it treats the Jacobian matrix sf/dy as either a dense (full) or a banded matrix, and as either user-supplied or internally approximated by difference quotients. It uses Adams methods (predictor-corrector) [http://identifiers.org/biomodels.kisao/KISAO_0000364] in the nonstiff case, and Backward Differentiation Formula (BDF) methods (the Gear methods) [http://identifiers.org/biomodels.kisao/KISAO_0000288] in the stiff case.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000570,auto reduce tolerances,,Whether to automatically reduce tolerances.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243|http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000570,,2020-10-29,JRK,,http://identifiers.org/biosimulators/pysces,,,Whether to automatically reduce tolerances.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000048,adaptive explicit-implicit tau-leaping method,,"Modification of the original tau-selection strategy [http://identifiers.org/biomodels.kisao/KISAO_0000040], designed for explicit tau-leaping, is modified to apply to implicit tau-leaping, allowing for longer steps when the system is stiff. Further, an adaptive strategy is proposed that identifies stiffness and automatically chooses between the explicit and the (new) implicit tau-selection methods to achieve better efficiency.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000039,,,,,kisao:KISAO_0000048,,,,,,,,"Modification of the original tau-selection strategy [http://identifiers.org/biomodels.kisao/KISAO_0000040], designed for explicit tau-leaping, is modified to apply to implicit tau-leaping, allowing for longer steps when the system is stiff. Further, an adaptive strategy is proposed that identifies stiffness and automatically chooses between the explicit and the (new) implicit tau-selection methods to achieve better efficiency.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000329,constant-time kinetic Monte Carlo algorithm,SSA-CR,"The computational cost of the original SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] scaled linearly with the number of reactions in the network. Gibson and Bruck developed a logarithmic scaling version of the SSA which uses a priority queue or binary tree for more efficient reaction selection [http://identifiers.org/biomodels.kisao/KISAO_0000027]. More generally, this problem is one of dynamic discrete random variate generation which finds many uses in kinetic Monte Carlo and discrete event simulation. We present here a constant-time algorithm, whose cost is independent of the number of reactions, enabled by a slightly more complex underlying data structure.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000333,,,,,kisao:KISAO_0000329,,2011-06-03,AZ,,,,SSA-CR,"The computational cost of the original SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] scaled linearly with the number of reactions in the network. Gibson and Bruck developed a logarithmic scaling version of the SSA which uses a priority queue or binary tree for more efficient reaction selection [http://identifiers.org/biomodels.kisao/KISAO_0000027]. More generally, this problem is one of dynamic discrete random variate generation which finds many uses in kinetic Monte Carlo and discrete event simulation. We present here a constant-time algorithm, whose cost is independent of the number of reactions, enabled by a slightly more complex underlying data structure.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000074,binomial tau-leaping method,BtauL|binomial tau-leap spatial stochastic simulation algorithm,Coarse grained modified version of the next subvolume method [http://identifiers.org/biomodels.kisao/KISAO_0000022] that allows the user to consider both diffusion and reaction events in relatively long simulation time spans as compared with the original method and other commonly used fully stochastic computational methods.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000039,,,,,kisao:KISAO_0000074,,2007-10-16,dk,,,,BtauL|binomial tau-leap spatial stochastic simulation algorithm,Coarse grained modified version of the next subvolume method [http://identifiers.org/biomodels.kisao/KISAO_0000022] that allows the user to consider both diffusion and reaction events in relatively long simulation time spans as compared with the original method and other commonly used fully stochastic computational methods.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000425,standardising of variables,,A boolean parameter of the 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417] specifying whether the variables were standardised (divided by their standard deviations) prior to the regression analysis.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000430,,,,,kisao:KISAO_0000425,,2012-01-18,AZ,,,,,A boolean parameter of the 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417] specifying whether the variables were standardised (divided by their standard deviations) prior to the regression analysis.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000677,maximum number of steps for presimulation,,Maximum number of steps to take in presimulating a model prior to analysis.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000415,,,,,kisao:KISAO_0000677,,2021-08-23,JRK,,http://identifiers.org/biosimulators/tellurium,,,Maximum number of steps to take in presimulating a model prior to analysis.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000020,PVODE,parallel code value ordinary differential equation solver,"PVODE is a general-purpose solver for ordinary differential equation (ODE) systems that implements methods for both stiff and nonstiff systems. [...] In the stiff case, PVODE uses a backward differentiation formula method [http://identifiers.org/biomodels.kisao/KISAO_0000288] combined with preconditioned GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000253] iteration. Parallelism is achieved by distributing the ODE solution vector into user-specified segments and parallelizing a set of vector kernels accordingly. For PDE-based ODE systems, we provide a module that generates a band block-diagonal preconditioner for use with the GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000253] iteration. PVODE is based on CVODE [http://identifiers.org/biomodels.kisao/KISAO_0000019].",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000433,,,,,kisao:KISAO_0000020,,,,,SUNDIALS,,parallel code value ordinary differential equation solver,"PVODE is a general-purpose solver for ordinary differential equation (ODE) systems that implements methods for both stiff and nonstiff systems. [...] In the stiff case, PVODE uses a backward differentiation formula method [http://identifiers.org/biomodels.kisao/KISAO_0000288] combined with preconditioned GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000253] iteration. Parallelism is achieved by distributing the ODE solution vector into user-specified segments and parallelizing a set of vector kernels accordingly. For PDE-based ODE systems, we provide a module that generates a band block-diagonal preconditioner for use with the GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000253] iteration. PVODE is based on CVODE [http://identifiers.org/biomodels.kisao/KISAO_0000019].",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000527,geometric flux balance analysis,gFBA|geometric FBA,Method for determining the central flux distribution among all flux distributions that satisfy the constraints of the  flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000437,,,,,kisao:KISAO_0000527,,2020-08-11,AZ,,http://identifiers.org/biosimulators/cobrapy,,gFBA|geometric FBA,Method for determining the central flux distribution among all flux distributions that satisfy the constraints of the  flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000032,explicit fourth-order Runge-Kutta method,ERK4|Runge-Kutta method|RK4,"The Runge-Kutta method is a method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t, plus the product of the size of the interval and an estimated slope. The slope is a weighted average of 4 single slope points (beginning of interval-midpoint-midpoint-end of interval).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000032,,2007-11-12,dk,,GSL|http://identifiers.org/biosimulators/jsim|http://identifiers.org/biosimulators/vcell,,ERK4|Runge-Kutta method|RK4,"The Runge-Kutta method is a method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t, plus the product of the size of the interval and an estimated slope. The slope is a weighted average of 4 single slope points (beginning of interval-midpoint-midpoint-end of interval).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000801,concentration control coefficient matrix (unscaled),,The unscaled concentration control coefficient matrix. The dimensions are species by reactions.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000801,,06-03-2021,LPS,,,,,The unscaled concentration control coefficient matrix. The dimensions are species by reactions.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000834,rate of change,rate,The rate of change of one variable with respect to a second variable.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000834,,06-03-2021,LPS,,,,rate,The rate of change of one variable with respect to a second variable.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000681,maximum time,,Maximum amount of wall time for an operation.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000244,,,,,kisao:KISAO_0000681,,2021-08-23,JRK,,,,,Maximum amount of wall time for an operation.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000564,stochastic Runge-Kutta method,,Technique for the approximate numerical solution of a systems of stochastic differential equations (SDEs). The method is a generalisation of the Runge-Kutta method for ordinary differential equations to stochastic differential equations.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000564,,2020-10-29,JRK,,,,,Technique for the approximate numerical solution of a systems of stochastic differential equations (SDEs). The method is a generalisation of the Runge-Kutta method for ordinary differential equations to stochastic differential equations.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000033,Rosenbrock method,generalized fourth order Runge-Kutta method|Kaps-Rentrop method,"Some general implicit processes are given for the solution of simultaneous first-order differential equations. These processes, which use successive substitution, are implicit analogues of the (explicit) Runge-Kutta processes. They require the solution in each time step of one or more set of simultaneous linear equations, usually of a special and simple form. Processes of any required order can be devised, and they can be made to have a wide margin of stability when applied to a linear problem.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000033,,2007-11-12,dk,,http://identifiers.org/biosimulators/ecell4,,generalized fourth order Runge-Kutta method|Kaps-Rentrop method,"Some general implicit processes are given for the solution of simultaneous first-order differential equations. These processes, which use successive substitution, are implicit analogues of the (explicit) Runge-Kutta processes. They require the solution in each time step of one or more set of simultaneous linear equations, usually of a special and simple form. Processes of any required order can be devised, and they can be made to have a wide margin of stability when applied to a linear problem.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000808,reduced stoichiometry matrix,,The reduced stoichiometry matrix. The dimensions are species by reactions.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000808,,06-03-2021,LPS,,,,,The reduced stoichiometry matrix. The dimensions are species by reactions.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000531,fraction of optimum,,Fraction of the optimum solution which must be maintained.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000531,,,,,,,,Fraction of the optimum solution which must be maintained.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000105,discrete variable,,"Algorithm, possessing this characteristic, allows values of system's variables to change by discrete (integral) amounts.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000098,,,,,kisao:KISAO_0000105,,2008-07-08,NLN,,,,,"Algorithm, possessing this characteristic, allows values of system's variables to change by discrete (integral) amounts.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000346,mesh-based geometry handling,,"In most large-scale numerical simulations of physical phenomena, a large percentage of the overall computational effort is expended on technical details connected with meshing. These details include, in particular, grid generation, mesh adaptation to domain geometry, element or cell connectivity, grid motion and separation to model fracture, fragmentation, free surfaces, etc.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000311,,,,,kisao:KISAO_0000346,,,AZ,,,,,"In most large-scale numerical simulations of physical phenomena, a large percentage of the overall computational effort is expended on technical details connected with meshing. These details include, in particular, grid generation, mesh adaptation to domain geometry, element or cell connectivity, grid motion and separation to model fracture, fragmentation, free surfaces, etc.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000372,partial differential equation problem,PDE problem,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000405,,,,,kisao:KISAO_0000372,,,AZ,,,,PDE problem,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000577,flux minimization weight,,"The degree to which minimization of the sum of fluxes should be taken into account in Minimization of Metabolic Adjustment (MOMA) which solvers the optimization problem
 
Min sum((fluxAi - fluxBi)^2) + sum(fluxAi)^(fluxMinimizationWeight) + sum(fluxBi)^(fluxMinimizationWeight)",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000577,,2020-10-29,JRK,,,,,"The degree to which minimization of the sum of fluxes should be taken into account in Minimization of Metabolic Adjustment (MOMA) which solvers the optimization problem
 
Min sum((fluxAi - fluxBi)^2) + sum(fluxAi)^(fluxMinimizationWeight) + sum(fluxBi)^(fluxMinimizationWeight)",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000812,Jacobian matrix,full Jacobian matrix,The (full) Jacobian matrix. The dimensions are species by species.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000812,,06-03-2021,LPS,,,,full Jacobian matrix,The (full) Jacobian matrix. The dimensions are species by species.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000649,shadow price,,"Change, per infinitesimal unit of the constraint, in the optimal value of the objective function of an optimization problem obtained by relaxing the constraint.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000650,,,,,kisao:KISAO_0000649,,2021-06-04,JRK,,,,,"Change, per infinitesimal unit of the constraint, in the optimal value of the objective function of an optimization problem obtained by relaxing the constraint.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000616,semi-implicit regular grid finite volume method with a fixed time step,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000285,,,,,kisao:KISAO_0000616,,2021-01-30,JRK,,http://identifiers.org/biosimulators/vcell,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000244,granularity control parameter,,Parameter controlling granularity.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000244,,,AZ,,,true,,Parameter controlling granularity.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000379,Bulirsch-Stoer algorithm,GBS|Gragg-Bulirsch-Stoer algorithm,"The Bulirsch-Stoer method is an adaptive method which uses Gragg's modified midpoint method [http://identifiers.org/biomodels.kisao/KISAO_0000382] to estimate the solution of an initial value problem for various step sizes. The estimates are fit to a ""diagonal"" rational function or a polynomial as a function of the step size and the limit as the step size tends to zero is taken as the final estimate.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000380,,,,,kisao:KISAO_0000379,,2011-07-01,AZ,,,,GBS|Gragg-Bulirsch-Stoer algorithm,"The Bulirsch-Stoer method is an adaptive method which uses Gragg's modified midpoint method [http://identifiers.org/biomodels.kisao/KISAO_0000382] to estimate the solution of an initial value problem for various step sizes. The estimates are fit to a ""diagonal"" rational function or a polynomial as a function of the step size and the limit as the step size tends to zero is taken as the final estimate.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000211,absolute tolerance,ATOL,This parameter is a positive numeric value specifying the desired absolute tolerance the user wants to achieve.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000597,,,,,kisao:KISAO_0000211,,,,,,,ATOL,This parameter is a positive numeric value specifying the desired absolute tolerance the user wants to achieve.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000452,random updating policy,,An updating policy that chooses a transition randomly.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000451,,,,,kisao:KISAO_0000452,,2013-01-28,AZ,,,,,An updating policy that chooses a transition randomly.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000581,BKMC,Boolean kinetic Monte-Carlo|Boolean Kinetic Monte-Carlo,"The Boolean kinetic Monte Carlo method (BKMC) is a natural generalization of the asynchronous Boolean simulation method, with a direct probabilistic interpretation. In the BKMC framework, the dynamics is parameterized by a biological time and the order of update is noisy, which is less strict than priority classes introduced in GINsin. A BKMC model is specified by logical rules as in regular Boolean models but with a more precise information: a numerical rate is added for each transition of each node.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000319|http://www.biomodels.net/kisao/KISAO#KISAO_0000573,,,,,kisao:KISAO_0000581,,2020-10-29,JRK,,http://identifiers.org/biosimulators/maboss,,Boolean kinetic Monte-Carlo|Boolean Kinetic Monte-Carlo,"The Boolean kinetic Monte Carlo method (BKMC) is a natural generalization of the asynchronous Boolean simulation method, with a direct probabilistic interpretation. In the BKMC framework, the dynamics is parameterized by a biological time and the order of update is noisy, which is less strict than priority classes introduced in GINsin. A BKMC model is specified by logical rules as in regular Boolean models but with a more precise information: a numerical rate is added for each transition of each node.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000653,particle number rate,,Rate of a process in extensive/absolute units such as mole reactions per second.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000834,,,,,kisao:KISAO_0000653,,2021-06-04,JRK,,,,,Rate of a process in extensive/absolute units such as mole reactions per second.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000620,parsimonius flux balance analysis,pFBA,"A technique for selecting a flux distribution which is parsimonious by some metric, such as a solution which has the minimal number of active fluxes or a solution which has the smallest sum of active fluxes.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000437,,,,,kisao:KISAO_0000620,,2021-04-27,JRK,,,true,pFBA,"A technique for selecting a flux distribution which is parsimonious by some metric, such as a solution which has the minimal number of active fluxes or a solution which has the smallest sum of active fluxes.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000257,surface-bound epsilon,,"A parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. Molecules that are bound to a surface are given locations that are extremely close to that surface. However, this position does not need to be exactly at the surface, and in fact it usually cannot be exactly at the surface due to round-off error. The tolerance for how  far a surface-bound molecule is allowed to be away from the surface can be set with the epsilon statement.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000252,,,,,kisao:KISAO_0000257,,,,,,,,"A parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. Molecules that are bound to a surface are given locations that are extremely close to that surface. However, this position does not need to be exactly at the surface, and in fact it usually cannot be exactly at the surface due to round-off error. The tolerance for how  far a surface-bound molecule is allowed to be away from the surface can be set with the epsilon statement.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000580,ROOM,regulatory on/off minimization of metabolic flux changes|Regulatory on/off minimization of metabolic flux changes,Constraint-based algorithm for predicting the metabolic steady state after gene knockouts which aims to minimize the number of significant flux changes (hence on/off) with respect to the wild type.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000407|http://www.biomodels.net/kisao/KISAO#KISAO_0000622,,,,,kisao:KISAO_0000580,,2020-10-29,JRK,,http://identifiers.org/biosimulators/cobratoolbox|http://identifiers.org/biosimulators/optflux,,regulatory on/off minimization of metabolic flux changes|Regulatory on/off minimization of metabolic flux changes,Constraint-based algorithm for predicting the metabolic steady state after gene knockouts which aims to minimize the number of significant flux changes (hence on/off) with respect to the wild type.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000027,Gibson-Bruck next reaction algorithm,next reaction method|Gibson and Bruck algorithm|Gibson-Bruck's next reaction algorithm|Gillespie-Gibson stochastic simulation algorithm|SSA-GB,"As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000333,,,,,kisao:KISAO_0000027,,2007-11-10,dk,,Cain|http://identifiers.org/biosimulators/ecell4|http://identifiers.org/biosimulators/vcell|SmartCell,,next reaction method|Gibson and Bruck algorithm|Gibson-Bruck's next reaction algorithm|Gillespie-Gibson stochastic simulation algorithm|SSA-GB,"As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000350,probability-weighted dynamic Monte Carlo method,probability-weighted DMC|PW-DMC,We have developed a probability-weighted DMC method by incorporating the weighted sampling algorithm of equilibrium molecular simulations. This new algorithm samples the slow reactions very efficiently and makes it possible to simulate in a computationally efficient manner the reaction kinetics of physical systems in which the rates of reactions vary by several orders of magnitude.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000333,,,,,kisao:KISAO_0000350,,2011-06-09,AZ,,,,probability-weighted DMC|PW-DMC,We have developed a probability-weighted DMC method by incorporating the weighted sampling algorithm of equilibrium molecular simulations. This new algorithm samples the slow reactions very efficiently and makes it possible to simulate in a computationally efficient manner the reaction kinetics of physical systems in which the rates of reactions vary by several orders of magnitude.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000851,cumulative product,,The cumulative product of a set of values. If the values contain NaN the cumulative product is NaN.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000851,,2021-10-09,MK,,,,,The cumulative product of a set of values. If the values contain NaN the cumulative product is NaN.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000308,MacCormack method,,"In computational fluid dynamics, the MacCormack method is a widely used discretization scheme for the numerical solution of hyperbolic partial differential equations. This second-order finite difference method [http://identifiers.org/biomodels.kisao/KISAO_0000307] is introduced by R. W. MacCormack in 1969.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000307,,,,,kisao:KISAO_0000308,,2011-05-11,AZ,,http://identifiers.org/biosimulators/jsim,,,"In computational fluid dynamics, the MacCormack method is a widely used discretization scheme for the numerical solution of hyperbolic partial differential equations. This second-order finite difference method [http://identifiers.org/biomodels.kisao/KISAO_0000307] is introduced by R. W. MacCormack in 1969.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000806,elasticity matrix (scaled),,The scaled elasticity matrix. The dimensions are reactions by species.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000806,,06-03-2021,LPS,,,,,The scaled elasticity matrix. The dimensions are reactions by species.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000538,safety factor on new step selection,safe|safety,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000538,,2020-10-29,JRK,,Odespy|JModelica|http://identifiers.org/biosimulators/gillespy2|SciPy,,safe|safety,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000468,maximal timestep method,,Hybrid simulation algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000352] combining Gibson and Bruck algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000027] with the Gillespie tau-leap method [http://www.biomodels.net/kisao/KISAO#KISAO_0000039].,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000468,,2014-04-25,AZ,,,,,Hybrid simulation algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000352] combining Gibson and Bruck algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000027] with the Gillespie tau-leap method [http://www.biomodels.net/kisao/KISAO#KISAO_0000039].,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000205,partitioning interval,,This positive integer value specifies after how many steps the internal partitioning of the system should be recalculated.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000252,,,,,kisao:KISAO_0000205,,,,,,,,This positive integer value specifies after how many steps the internal partitioning of the system should be recalculated.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000686,Enzyme Cost Minimization,ECM,"For a given metabolic network model, the Enzyme Cost Minimization method determines plausible metabolite and enzyme concentrations (which determine thermodynamic forces and enzyme catalytic rates). Fluxes, enzyme kinetic constants, admissible metabolite concentration ranges, and enzyme cost weights (e.g. enzyme molecular masses) are given as input data. The method applies the principle that high enzyme (or enzyme plus metabolite) concentrations must be avoided, and maximizes a weighted sum of enzyme and  metabolite concentrations.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000685,,,,,kisao:KISAO_0000686,,2022-03-27,EN|JRK|WL,,https://gitlab.com/equilibrator/metabolic-pathway-analysis,,ECM,"For a given metabolic network model, the Enzyme Cost Minimization method determines plausible metabolite and enzyme concentrations (which determine thermodynamic forces and enzyme catalytic rates). Fluxes, enzyme kinetic constants, admissible metabolite concentration ranges, and enzyme cost weights (e.g. enzyme molecular masses) are given as input data. The method applies the principle that high enzyme (or enzyme plus metabolite) concentrations must be avoided, and maximizes a weighted sum of enzyme and  metabolite concentrations.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000030,Euler forward method,explicit Euler method|explicit Gaussian first order Runge-Kutta,The Euler method is an explicit one-step method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000261,,,,,kisao:KISAO_0000030,,2007-11-10,dk,,http://identifiers.org/biosimulators/ibiosim|http://identifiers.org/biosimulators/vcell,,explicit Euler method|explicit Gaussian first order Runge-Kutta,The Euler method is an explicit one-step method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000436,"Dormand-Prince 8(5,3) method",,This method is based on an 8(6) method by Dormand and Prince (i.e. order 8 for the integration and order 6 for error estimation) modified by Hairer and Wanner to use a 5th order error estimator with 3rd order correction.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000302,,,,,kisao:KISAO_0000436,,2012-09-26,AZ,,,,,This method is based on an 8(6) method by Dormand and Prince (i.e. order 8 for the integration and order 6 for error estimation) modified by Hairer and Wanner to use a 5th order error estimator with 3rd order correction.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000403,homogeneousness of equation,,"Homogeneous equations are of the form Ly = 0, where the differential operator L is a linear operator and y is the unknown function.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000376,,,,,kisao:KISAO_0000403,,2011-07-19,AZ,,,,,"Homogeneous equations are of the form Ly = 0, where the differential operator L is a linear operator and y is the unknown function.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000614,implementation,,"An implementation of an algorithm. For example, simulation tools can this parameter to differentiate among C, Python, and Java implementations of the same algorithms and allow investigators to select one of these specific implementations through SED-ML.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000614,,2021-01-25,JRK,,,,,"An implementation of an algorithm. For example, simulation tools can this parameter to differentiate among C, Python, and Java implementations of the same algorithms and allow investigators to select one of these specific implementations through SED-ML.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000472,global optimization algorithm,global optimization method,"A global optimization algorithm is an optimization algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000470] that tries to find the global optimum of a function. If a function has several minima/maxima with in the allowed range of variable values, the global minimum/maximum is the one with the smallest/largest function value.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000470,,,,,kisao:KISAO_0000472,,2015-04-23,AZ,,,,global optimization method,"A global optimization algorithm is an optimization algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000470] that tries to find the global optimum of a function. If a function has several minima/maxima with in the allowed range of variable values, the global minimum/maximum is the one with the smallest/largest function value.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000845,sum,,The sum of a set of values. If the values contain NaN the sum is NaN.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000845,,2021-10-09,MK,,,,,The sum of a set of values. If the values contain NaN the sum is NaN.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000311,type of domain geometry handling,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000097,,,,,kisao:KISAO_0000311,,,AZ,,,true,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000575,hybrid tau-leaping method,,"A continuously coupled hybrid deterministic/stochastic simulation algorithm for biochemical networks. Biochemical species are classified as continuous, discrete, or switch. Tau-leaping is used to simulate stochastic species, and LSODA or another ODE integration method is used to simulate continuous species. Switch species are dynamically classified as either continuous or discrete at each timestep depending on a user defined error tolerance.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000039|http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000575,,2020-11-06,BD|JRK,,http://identifiers.org/biosimulators/gillespy2,,,"A continuously coupled hybrid deterministic/stochastic simulation algorithm for biochemical networks. Biochemical species are classified as continuous, discrete, or switch. Tau-leaping is used to simulate stochastic species, and LSODA or another ODE integration method is used to simulate continuous species. Switch species are dynamically classified as either continuous or discrete at each timestep depending on a user defined error tolerance.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000542,correction step should use internally generated full Jacobian,with Jacobian|MF=22,Specifies whether the iteration method of the ODE solver’s correction step is chord iteration with an internally generated full Jacobian or functional iteration with no Jacobian. Option is only considered when the user has not supplied a Jacobian function and has not indicated (by setting either upper or lower band) that the Jacobian is banded.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000542,,2020-10-29,JRK,,http://identifiers.org/biosimulators/gillespy2|SciPy,,with Jacobian|MF=22,Specifies whether the iteration method of the ODE solver’s correction step is chord iteration with an internally generated full Jacobian or functional iteration with no Jacobian. Option is only considered when the user has not supplied a Jacobian function and has not indicated (by setting either upper or lower band) that the Jacobian is banded.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000288,backward differentiation formula,BDF|Gear method|Gear's method,The backward differentiation formulas (BDF) are implicit multistep methods based on the numerical differentiation of a given function and are wildly used for integration of stiff differential equations.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000281,,,,,kisao:KISAO_0000288,,2011-05-10,AZ,,ByoDyn|GSL|http://identifiers.org/biosimulators/ibiosim,,BDF|Gear method|Gear's method,The backward differentiation formulas (BDF) are implicit multistep methods based on the numerical differentiation of a given function and are wildly used for integration of stiff differential equations.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000627,diagonal approximate Jacobian solver,diagonal,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000624,,,,,kisao:KISAO_0000627,,2021-06-01,JRK,,CVODE,,diagonal,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000485,minimum step size,,"A lower limit, in the units of the bound variable over which a numerical integration is being performed, that a numerical integration algorithm with variable step size should take.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000485,,,AZ,,,,,"A lower limit, in the units of the bound variable over which a numerical integration is being performed, that a numerical integration algorithm with variable step size should take.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000255,molecules per virtual box,,"Target molecules per virtual box is a parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057], which sets the box sizes so that the average number of molecules per box, at simulation initiation, is close to the requested number.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000260,,,,,kisao:KISAO_0000255,,,,,Smoldyn,,,"Target molecules per virtual box is a parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057], which sets the box sizes so that the average number of molecules per box, at simulation initiation, is close to the requested number.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000357,conjugate gradient method,CG,"Conjugate gradient method is an algorithm for the numerical solution of particular systems of linear equations, namely those whose matrix is symmetric and positive-definite. The conjugate gradient method is an iterative method, so it can be applied to sparse systems that are too large to be handled by direct methods. Such systems often arise when numerically solving partial differential equations.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000354,,,,,kisao:KISAO_0000357,,2011-06-10,AZ,,,,CG,"Conjugate gradient method is an algorithm for the numerical solution of particular systems of linear equations, namely those whose matrix is symmetric and positive-definite. The conjugate gradient method is an iterative method, so it can be applied to sparse systems that are too large to be handled by direct methods. Such systems often arise when numerically solving partial differential equations.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000856,median ignoring NaN,,"The median of a set of values, ignoring Nan entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000856,,2021-10-09,MK,,,,,"The median of a set of values, ignoring Nan entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000383,Bader-Deuflhard method,,The Bader-Deuflhard method is an extrapolation method based on a semi-implicit discretization [http://identifiers.org/biomodels.kisao/KISAO_0000387]. It is a generalization of the Bulirsch-Stoer algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000379] for solving ordinary differential equations.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000380,,,,,kisao:KISAO_0000383,,2011-07-01,AZ,,GSL,,,The Bader-Deuflhard method is an extrapolation method based on a semi-implicit discretization [http://identifiers.org/biomodels.kisao/KISAO_0000387]. It is a generalization of the Bulirsch-Stoer algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000379] for solving ordinary differential equations.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000038,sorting stochastic simulation algorithm,sorting direct method|sorting SSA,"In order to overcome the problem of high complexity of the stochastic simulation algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000029] when simulating large systems, the sorting direct method maintains a loosely sorted order of the reactions as the simulation executes.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000333,,,,,kisao:KISAO_0000038,,,,,,,sorting direct method|sorting SSA,"In order to overcome the problem of high complexity of the stochastic simulation algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000029] when simulating large systems, the sorting direct method maintains a loosely sorted order of the reactions as the simulation executes.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000394,quasi-minimal residual variant of biconjugate gradient stabilized method,QMRCGSTAB,"QMRCGSTAB is a quasi-minimal residual (QMR) variant of the Bi-CGSTAB algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000394] of van der Vorst for solving nonsymmetric linear systems. The motivation for the QMR variant is to obtain smoother convergence behavior of the underlying method.
",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000392,,,,,kisao:KISAO_0000394,,2011-07-19,AZ,,,,QMRCGSTAB,"QMRCGSTAB is a quasi-minimal residual (QMR) variant of the Bi-CGSTAB algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000394] of van der Vorst for solving nonsymmetric linear systems. The motivation for the QMR variant is to obtain smoother convergence behavior of the underlying method.
",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000591,mdFBA,metabolic dilution flux balance analysis,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000437,,,,,kisao:KISAO_0000591,,2020-10-29,JRK,,http://identifiers.org/biosimulators/cobratoolbox,,metabolic dilution flux balance analysis,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000638,level,,A level such as of a qualitative variable.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000638,,2021-06-04,JRK,,,,,A level such as of a qualitative variable.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000496,CVODES,,"CVODES is a solver for stiff and nonstiff ODE systems (initial value problem) given in explicit form y’ = f(t,y,p) with sensitivity analysis capabilities (both forward and adjoint modes).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000433,,,,,kisao:KISAO_0000496,,,,,http://identifiers.org/biosimulators/amici|SUNDIALS,,,"CVODES is a solver for stiff and nonstiff ODE systems (initial value problem) given in explicit form y’ = f(t,y,p) with sensitivity analysis capabilities (both forward and adjoint modes).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000664,Second order backward implicit product Euler scheme,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000664,Method for solving Volterra equations. Uses the trapezoidal rule.,2021-08-07,JRK,,http://identifiers.org/biosimulators/xpp,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000631,iterative root-finding method,,Iterative method for finding the root of a function (f(x) = 0).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000630,,,,,kisao:KISAO_0000631,,,2021-06-01|JRK,,,true,,Iterative method for finding the root of a function (f(x) = 0).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000514,Nelder-Mead,simplex method,"This method also known as the simplex method is due to Nelder and Mead. A simplex is a polytope of N+1 vertices in N dimensions. The objective function is evaluated at each vertex. Dependent on these calculated values a new simplex is constructed. The simplest step is to replace the worst point with a point reflected through the centroid of the remaining N points. If this point is better than the best current point, then we can try stretching exponentially out along this line. On the other hand, if this new point isn't much better than the previous value then we are stepping across a valley, so we shrink the simplex towards the best point.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000471,,,,,kisao:KISAO_0000514,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,simplex method,"This method also known as the simplex method is due to Nelder and Mead. A simplex is a polytope of N+1 vertices in N dimensions. The objective function is evaluated at each vertex. Dependent on these calculated values a new simplex is constructed. The simplest step is to replace the worst point with a point reflected through the centroid of the remaining N points. If this point is better than the best current point, then we can try stretching exponentially out along this line. On the other hand, if this new point isn't much better than the previous value then we are stepping across a valley, so we shrink the simplex towards the best point.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000318,Gauss-Legendre Runge-Kutta method,Open Formula,"So called 'Open Formula', two points formula, three points formula, four points formula, five points formula and six points formula of the Runge-Kutta method to solve the initial value problem of the ordinary differential equation. These formulas use the points and weights from the Gauss-Legendre Quadrature formulas for finding the value of the definite integral.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000318,,2011-05-26,AZ,,http://identifiers.org/biosimulators/ibiosim,,Open Formula,"So called 'Open Formula', two points formula, three points formula, four points formula, five points formula and six points formula of the Runge-Kutta method to solve the initial value problem of the ordinary differential equation. These formulas use the points and weights from the Gauss-Legendre Quadrature formulas for finding the value of the definite integral.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000447,COAST,controllable approximative stochastic reaction algorithm,"An approximative algorithm for stochastic simulations of chemical reaction systems based on three different modeling levels: for small numbers of particles an exact [http://identifiers.org/biomodels.kisao/KISAO_0000236] stochastic [http://identifiers.org/biomodels.kisao/KISAO_0000104] model; for intermediate numbers an approximative [http://identifiers.org/biomodels.kisao/KISAO_0000237], but computationally more efficient stochastic [http://identifiers.org/biomodels.kisao/KISAO_0000104] model based on discrete Gaussian distributions; and for large numbers the deterministic [http://identifiers.org/biomodels.kisao/KISAO_0000103] reaction kinetics. In every simulation time step, the subdivision of the reaction channels into the three different modeling levels is done automatically, where all approximations applied can be controlled by a single error parameter for which an appropriate value can easily be found.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000447,,2013-01-28,AZ,,,,controllable approximative stochastic reaction algorithm,"An approximative algorithm for stochastic simulations of chemical reaction systems based on three different modeling levels: for small numbers of particles an exact [http://identifiers.org/biomodels.kisao/KISAO_0000236] stochastic [http://identifiers.org/biomodels.kisao/KISAO_0000104] model; for intermediate numbers an approximative [http://identifiers.org/biomodels.kisao/KISAO_0000237], but computationally more efficient stochastic [http://identifiers.org/biomodels.kisao/KISAO_0000104] model based on discrete Gaussian distributions; and for large numbers the deterministic [http://identifiers.org/biomodels.kisao/KISAO_0000103] reaction kinetics. In every simulation time step, the subdivision of the reaction channels into the three different modeling levels is done automatically, where all approximations applied can be controlled by a single error parameter for which an appropriate value can easily be found.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000540,maximum factor to change step size by,ifactor|fac2,Maximum factor to increase/decrease step size by in one step. The new step-size is chosen subject to the restriction fac1 <= current step-size / old step-size <= fac2.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000540,,2020-10-29,JRK,,Odespy|JModelica|http://identifiers.org/biosimulators/gillespy2|SciPy,,ifactor|fac2,Maximum factor to increase/decrease step size by in one step. The new step-size is chosen subject to the restriction fac1 <= current step-size / old step-size <= fac2.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000573,probabilistic logical model simulation method,,"Qualitative (logical) models specify the evolution rules of their components. Probabilistic networks allow for specifying more than one transition function per variable/gene. Each of these functions has a probability to be chosen, where the probabilities of all functions for one variable sum up to 1. Transitions are performed synchronously by choosing one transition function for each gene according to their probabilities and applying them to the current state.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000319|http://www.biomodels.net/kisao/KISAO#KISAO_0000448,,,,,kisao:KISAO_0000573,,2020-10-29,JRK,,http://identifiers.org/biosimulators/boolnet,,,"Qualitative (logical) models specify the evolution rules of their components. Probabilistic networks allow for specifying more than one transition function per variable/gene. Each of these functions has a probability to be chosen, where the probabilities of all functions for one variable sum up to 1. Transitions are performed synchronously by choosing one transition function for each gene according to their probabilities and applying them to the current state.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000690,biological system,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000688,,,,,kisao:KISAO_0000690,,2022-03-29,EN|JRK|WL,,,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000817,kernel matrix,,The Kernel matrix of a model.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000817,,06-03-2021,LPS,,,,,The Kernel matrix of a model.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000479,upper half-bandwidth,,the upper half-bandwidth value used by the Banded linear solver or preconditioner (a value between 0 and n-1 with n the number of ODEs/DAEs in the model).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000482,,,,,kisao:KISAO_0000479,,2015-09-10,AZ,,http://identifiers.org/biosimulators/opencor,,,the upper half-bandwidth value used by the Banded linear solver or preconditioner (a value between 0 and n-1 with n the number of ODEs/DAEs in the model).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000249,critical firing threshold,nonnegative tau-leaping second control parameter,"The 'nonnegative Poisson tau-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000084] is based on the fact that negative populations typically arise from multiple firings of reactions that are only a few firings away from consuming all the molecules of one of their reactants. To focus on those reaction channels, the modified tau-leaping algorithm introduces a second control parameter nc, a positive integer that is usually set somewhere between 5 and 20. Any reaction channel with a positive propensity function that is currently within nc firings of exhausting one of its reactants is then classified as a critical reaction. The modified algorithm chooses tau in such a way that no more than one firing of all the critical reactions can occur during the leap.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000252,,,,,kisao:KISAO_0000249,,,,,,,nonnegative tau-leaping second control parameter,"The 'nonnegative Poisson tau-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000084] is based on the fact that negative populations typically arise from multiple firings of reactions that are only a few firings away from consuming all the molecules of one of their reactants. To focus on those reaction channels, the modified tau-leaping algorithm introduces a second control parameter nc, a positive integer that is usually set somewhere between 5 and 20. Any reaction channel with a positive propensity function that is currently within nc firings of exhausting one of its reactants is then classified as a critical reaction. The modified algorithm chooses tau in such a way that no more than one firing of all the critical reactions can occur during the leap.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000019,CVODE,VODEPK|code value ordinary differential equation solver|VODE,"The CVODE is a package written in C that solves ODE initial value problems, in real N-space, written as y'=f(t,y),  y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288].",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000433,,,,,kisao:KISAO_0000019,,2007-11-30,dk,,SBML-SAT|http://identifiers.org/biosimulators/opencor|http://identifiers.org/biosimulators/tellurium|libRoadRunner|http://identifiers.org/biosimulators/jsim|http://identifiers.org/biosimulators/vcell|SUNDIALS|http://identifiers.org/biosimulators/bionetgen|http://identifiers.org/biosimulators/pysces,,VODEPK|code value ordinary differential equation solver|VODE,"The CVODE is a package written in C that solves ODE initial value problems, in real N-space, written as y'=f(t,y),  y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288].",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000216,use reduced model,integrate reduced model,"Boolean value which indicates whether the simulation/analysis should be performed using the complete model or an equivalent reduced model.

Reduced models can be determined in many ways such as using mass conservation laws.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000216,,,,,,,integrate reduced model,"Boolean value which indicates whether the simulation/analysis should be performed using the complete model or an equivalent reduced model.

Reduced models can be determined in many ways such as using mass conservation laws.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000810,reduced eigenvalue matrix,,"The reduced eigenvalue matrix of a model. The dimensions are species by two, where the first column is the real part of the eigenvalues, and the second column is the imaginary part of the eigenvalues.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000810,,06-03-2021,LPS,,,,,"The reduced eigenvalue matrix of a model. The dimensions are species by two, where the first column is the real part of the eigenvalues, and the second column is the imaginary part of the eigenvalues.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000843,standard error,,The standard error of a set of values. If the values contain NaN the standard deviation is NaN.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000843,,2021-10-09,MK,,,,,The standard error of a set of values. If the values contain NaN the standard deviation is NaN.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000586,Gibson-Bruck next reaction algorithm with indexed priority queue,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000027,,,,,kisao:KISAO_0000586,,2020-10-29,JRK,,http://identifiers.org/biosimulators/sbscl,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000821,intensive property,,An intensive variable such as a concentration or temperature.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000820,,,,,kisao:KISAO_0000821,,06-03-2021,LPS,,,true,,An intensive variable such as a concentration or temperature.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000658,logical model analysis method,,"A method for analyzing a logical model, such as finding its fixed points.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000658,,2021-07-08,JRK,,,true,,"A method for analyzing a logical model, such as finding its fixed points.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000483,step size,,the size of every step of the algorithm,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000483,,2015-09-10,AZ,,,,,the size of every step of the algorithm,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000625,dense direct solver,denese,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000624,,,,,kisao:KISAO_0000625,,2021-06-01,JRK,,CVODE,,denese,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000253,coarse-graining factor,,"The time in each Monte-Carlo iteration of 'binomial tau-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000074] is updated with the time increments tau=f/(a1+a2+...+aM). Here 1/(a1+a2+...+aM) is the averaged microscopic increment of the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] and f is a coarse-graining factor, controlling the speed-up.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000244,,,,,kisao:KISAO_0000253,,,,,,,,"The time in each Monte-Carlo iteration of 'binomial tau-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000074] is updated with the time increments tau=f/(a1+a2+...+aM). Here 1/(a1+a2+...+aM) is the averaged microscopic increment of the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] and f is a coarse-graining factor, controlling the speed-up.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000450,asynchronous logical model simulation method,,Qualitative (logical) models specify the evolution rules of their components. It the case of an asynchronous updating all enabled transitions are performed independently: a state has as many successors as the number of transitions enabled in this state. An 'asynchronous logical model simulation method' specifies a rule to guide the choice of a unique transition at each step (for example random).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000448,,,,,kisao:KISAO_0000450,,2013-01-28,AZ,,,,,Qualitative (logical) models specify the evolution rules of their components. It the case of an asynchronous updating all enabled transitions are performed independently: a state has as many successors as the number of transitions enabled in this state. An 'asynchronous logical model simulation method' specifies a rule to guide the choice of a unique transition at each step (for example random).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000388,minimal residual method,MINRES,The 'minimal residual method' is an algorithm for the numerical solution of indefinite symmertic systems of linear equations.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000354,,,,,kisao:KISAO_0000388,,2011-07-18,AZ,,,,MINRES,The 'minimal residual method' is an algorithm for the numerical solution of indefinite symmertic systems of linear equations.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000220,maximum BDF order,maximum stiff order|BDF max order,This parameter is a positive integer value specifying the maximal order the stiff BDF integration method [http://identifiers.org/biomodels.kisao/KISAO_0000288] shall attempt before switching to smaller internal step sizes.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000484,,,,,kisao:KISAO_0000220,,,,,,,maximum stiff order|BDF max order,This parameter is a positive integer value specifying the maximal order the stiff BDF integration method [http://identifiers.org/biomodels.kisao/KISAO_0000288] shall attempt before switching to smaller internal step sizes.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000355,DASPK,SDASPK|differential algebraic system solver with Krylov preconditioning|DDASPK,"In DASPK, we have combined the time-stepping methods of DASSL [http://identifiers.org/biomodels.kisao/KISAO_0000255] with preconditioned iterative method GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000386], for solving large-scale systems of DAEs of the form F(t, y, y') = 0, where F, y, y' are N-dimensional vectors, and a consistent set of initial conditions y(t0) = y0, y'(t0) = y'0 is given.
DASPK is written in Fortran.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000432,,,,,kisao:KISAO_0000355,,2011-06-10,AZ,,,,SDASPK|differential algebraic system solver with Krylov preconditioning|DDASPK,"In DASPK, we have combined the time-stepping methods of DASSL [http://identifiers.org/biomodels.kisao/KISAO_0000255] with preconditioned iterative method GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000386], for solving large-scale systems of DAEs of the form F(t, y, y') = 0, where F, y, y' are N-dimensional vectors, and a consistent set of initial conditions y(t0) = y0, y'(t0) = y'0 is given.
DASPK is written in Fortran.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000322,hybridity,,The basic idea of hybrid simulation methods is to combine the advantages of complementary simulation approaches: the whole system is subdivided into appropriate parts and different simulation methods operate on these parts at the same time.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000097,,,,,kisao:KISAO_0000322,,2011-05-27,AZ,,,,,The basic idea of hybrid simulation methods is to combine the advantages of complementary simulation approaches: the whole system is subdivided into appropriate parts and different simulation methods operate on these parts at the same time.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000419,metamodelling method,,"Deterministic dynamic models of complex biological systems contain a large number of parameters and state variables, related through nonlinear differential equations with various types of feedback. A metamodel of such a dynamic model is a statistical approximation model that maps variation in parameters and initial conditions (inputs) to variation in features of the trajectories of the state variables (outputs) throughout the entire biologically relevant input space.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000419,,2012-01-18,AZ,,,true,,"Deterministic dynamic models of complex biological systems contain a large number of parameters and state variables, related through nonlinear differential equations with various types of feedback. A metamodel of such a dynamic model is a statistical approximation model that maps variation in parameters and initial conditions (inputs) to variation in features of the trajectories of the state variables (outputs) throughout the entire biologically relevant input space.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000299,Butcher-Kuntzmann method,Gauss method,"From a theoretical point of view, the Butcher-Kuntzmann Runge-Kutta methods belong to the best step-by-step methods for nonstiff problems. These methods integrate first-order initial-value problems by means of formulas based on Gauss-Legendre quadrature, and combine excellent stability features with the property of superconvergence at the step points.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000299,,2011-05-10,AZ,,,,Gauss method,"From a theoretical point of view, the Butcher-Kuntzmann Runge-Kutta methods belong to the best step-by-step methods for nonstiff problems. These methods integrate first-order initial-value problems by means of formulas based on Gauss-Legendre quadrature, and combine excellent stability features with the property of superconvergence at the step points.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000233,LSODES,Livermore solver for ordinary differential equations with general sparse Jacobian matrix,"LSODES solves systems dy/dt = f and in the stiff case treats the Jacobian matrix in general sparse form. It determines the sparsity structure on its own, or optionally accepts this information from the user. It then uses parts of the Yale Sparse Matrix Package (YSMP) to solve the linear systems that arise, by a sparse (direct) LU factorization/backsolve method.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000094,,,,,kisao:KISAO_0000233,,,,,,,Livermore solver for ordinary differential equations with general sparse Jacobian matrix,"LSODES solves systems dy/dt = f and in the stiff case treats the Jacobian matrix in general sparse form. It determines the sparsity structure on its own, or optionally accepts this information from the user. It then uses parts of the Yale Sparse Matrix Package (YSMP) to solve the linear systems that arise, by a sparse (direct) LU factorization/backsolve method.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000091,LSODIS,"Livermore solver for ordinary differential equations, implicit sparse version","LSODIS is a set of general-purpose FORTRAN routines solver for the initial value problem for ordinary differential equation systems. It is suitable for both stiff and nonstiff systems. LSODIS treat systems in the linearly implicit form A(t,y) dy/dt = g(t,y), A = a square matrix, i.e. with the derivative dy/dt implicit, but linearly so.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000094,,,,,kisao:KISAO_0000091,,2007-11-30,dk,,,,"Livermore solver for ordinary differential equations, implicit sparse version","LSODIS is a set of general-purpose FORTRAN routines solver for the initial value problem for ordinary differential equation systems. It is suitable for both stiff and nonstiff systems. LSODIS treat systems in the linearly implicit form A(t,y) dy/dt = g(t,y), A = a square matrix, i.e. with the derivative dy/dt implicit, but linearly so.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000392,biconjugate gradient stabilized method,Bi-CGSTAB|BiCGSTAB,An iterative method for the numerical solution of nonsymmetric linear systems. It is a variant of the biconjugate gradient method (BiCG) [http://identifiers.org/biomodels.kisao/KISAO_0000358] and has faster and smoother convergence than the original BiCG.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000395,,,,,kisao:KISAO_0000392,,,,,CVODE,,Bi-CGSTAB|BiCGSTAB,An iterative method for the numerical solution of nonsymmetric linear systems. It is a variant of the biconjugate gradient method (BiCG) [http://identifiers.org/biomodels.kisao/KISAO_0000358] and has faster and smoother convergence than the original BiCG.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000636,primary property,,A primary output of a simulation.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000820,,,,,kisao:KISAO_0000636,,2021-06-04,JRK,,,,,A primary output of a simulation.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000603,minimum reaction rate for continuous approximation,lambda|Lambda,Minimum reaction rate required for approximation as a continuous Markov process.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000244,,,,,kisao:KISAO_0000603,,2021-01-13,MLB|JRK,,,,lambda|Lambda,Minimum reaction rate required for approximation as a continuous Markov process.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000068,deterministic cellular automata update algorithm,,"A cellular automaton is a discrete model of a regular grid of cells with a finite number of dimensions. Each cell has a finite number of defined states. The automaton changes its state in a discrete manner, meaning that the state of a cell at time t is determined by a function of the states of its neighbours at time t - 1. These neighbours are a selection of cells relative to the specified cell. Famous examples for deterministic cellular automata are Conway's game of life or Wolfram's elementary cellular automata.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000264,,,,,kisao:KISAO_0000068,,2007-11-30,dk,,,,,"A cellular automaton is a discrete model of a regular grid of cells with a finite number of dimensions. Each cell has a finite number of defined states. The automaton changes its state in a discrete manner, meaning that the state of a cell at time t is determined by a function of the states of its neighbours at time t - 1. These neighbours are a selection of cells relative to the specified cell. Famous examples for deterministic cellular automata are Conway's game of life or Wolfram's elementary cellular automata.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000675,Broyden method,,Family of Quasi-Newton methods for finding roots in k variables originally described by C. G. Broyden in 1965.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000675,,2021-08-23,JRK,,http://identifiers.org/biosimulators/tellurium,,,Family of Quasi-Newton methods for finding roots in k variables originally described by C. G. Broyden in 1965.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000558,relative steady-state tolerance,,Relative error tolerance of the steady-state.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000209,,,,,kisao:KISAO_0000558,,2020-10-29,JRK,,http://identifiers.org/biosimulators/amici|SUNDIALS,,,Relative error tolerance of the steady-state.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000525,stop condition,,A condition upon which a simulation should terminate.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000525,,2020-05-29,AZ,,http://identifiers.org/biosimulators/bionetgen,,,A condition upon which a simulation should terminate.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000642,minimum flux,,"Minimum possible flux such as computed by flux variability analysis (FVA, KISAO_0000526).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000639,,,,,kisao:KISAO_0000642,,2021-06-04,JRK,,,,,"Minimum possible flux such as computed by flux variability analysis (FVA, KISAO_0000526).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000423,partial least squares regression-like method,,Method for building regression models between independent and dependent variables.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000419,,,,,kisao:KISAO_0000423,,2012-01-18,AZ,,,true,,Method for building regression models between independent and dependent variables.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000854,length ignoring NaN,,"The number of elements of a set of values, ignoring Nan entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000854,,2021-10-09,MK,,,,,"The number of elements of a set of values, ignoring Nan entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000353,generalized minimal residual algorithm,GMRES,"An iterative method for solving linear systems, which has the property of minimizing at every step the norm of the residual vector over a Krylov subspace. The generalized minimal residual method extends the minimal residual method (MINRES) [http://identifiers.org/biomodels.kisao/KISAO_0000388], which is only applicable to symmetric systems, to non-symmetric systems.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000354,,,,,kisao:KISAO_0000353,,2011-06-10,AZ,,CVODE,,GMRES,"An iterative method for solving linear systems, which has the property of minimizing at every step the norm of the residual vector over a Krylov subspace. The generalized minimal residual method extends the minimal residual method (MINRES) [http://identifiers.org/biomodels.kisao/KISAO_0000388], which is only applicable to symmetric systems, to non-symmetric systems.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000320,BioRica hybrid method,,The simulation schema for a given BioRica node is given by a hybrid algorithm that deals with continuous time and allows for discrete events that roll back the time according to these discrete interruptions.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000320,,2011-05-26,AZ,,BioRica,,,The simulation schema for a given BioRica node is given by a hybrid algorithm that deals with continuous time and allows for discrete events that roll back the time according to these discrete interruptions.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000455,prioritized updating policy,,An updating policy that chooses a transition in a prioritized way.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000453,,,,,kisao:KISAO_0000455,,2013-01-28,AZ,,,,,An updating policy that chooses a transition in a prioritized way.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000584,initial order,,Initial order of method.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000594,,,,,kisao:KISAO_0000584,,2020-10-29,JRK,,http://identifiers.org/biosimulators/jsim,,,Initial order of method.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000551,primal-dual interior point method,,The Interior Point method approximates the constraints of a linear programming model as a set of boundaries surrounding a region.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000547,,,,,kisao:KISAO_0000551,,2020-10-29,JRK,,CPLEX|GLPK|Gurobi,,,The Interior Point method approximates the constraints of a linear programming model as a set of boundaries surrounding a region.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000828,maximum ignoring NaN,,"The maximum value of a set of values, ignoring NaN entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000828,,2021-06-03,"LPS, MK",,,,,"The maximum value of a set of values, ignoring NaN entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000596,srFBA,SR-FBA|steady-state regulatory flux balance analysis,Method for predicting steady-state metabolic fluxes under patterns of the regulation of gene expression,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000437|http://www.biomodels.net/kisao/KISAO#KISAO_0000595,,,,,kisao:KISAO_0000596,,2020-10-29,JRK,,,,SR-FBA|steady-state regulatory flux balance analysis,Method for predicting steady-state metabolic fluxes under patterns of the regulation of gene expression,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000601,number of trials,trials,"Number of multiple trials (e.g., of a scatter search method).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000244,,,,,kisao:KISAO_0000601,,2021-01-13,MLB|JRK,,,,trials,"Number of multiple trials (e.g., of a scatter search method).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000333,accelerated stochastic simulation algorithm,accelerated SSA,"An algorithm, which accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] either at the expense of its accuracy or exact.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000241,,,,,kisao:KISAO_0000333,,2011-06-03,AZ,,,true,accelerated SSA,"An algorithm, which accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] either at the expense of its accuracy or exact.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000366,symplecticness,,"Roughly speaking, ‘symplecticness’ is a characteristic property possessed by the solutions of Hamiltonian problems. A numerical method is called symplectic if, when applied to Hamiltonian problems, it generates numerical solutions which inherit the property of symplecticness (phase volume preservation).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000097,,,,,kisao:KISAO_0000366,,2011-06-16,AZ,,,,,"Roughly speaking, ‘symplecticness’ is a characteristic property possessed by the solutions of Hamiltonian problems. A numerical method is called symplectic if, when applied to Hamiltonian problems, it generates numerical solutions which inherit the property of symplecticness (phase volume preservation).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000103,deterministic system behaviour,,"Algorithm, possessing this characteristic, simulates the temporal evolution of a system deterministically, so that from a precise initial state the algorithm will always end up in the same final state.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000099,,,,,kisao:KISAO_0000103,,2008-07-08,NLN,,,,,"Algorithm, possessing this characteristic, simulates the temporal evolution of a system deterministically, so that from a precise initial state the algorithm will always end up in the same final state.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000832,time,,The implied time variable of the model state.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000832,,06-03-2021,LPS,,,,,The implied time variable of the model state.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000669,Resource Balance Analysis,RBA,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000685|http://www.biomodels.net/kisao/KISAO#KISAO_0000407,,,,,kisao:KISAO_0000669,,2021-08-12,JRK,,http://identifiers.org/biosimulators/rbapy,,RBA,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000264,cellular automata update method,cellular automata|CA|iterative arrays|tessellation structures|tessellation automata|cellular structures|cellular spaces|homogeneous structures,"Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000363,,,,,kisao:KISAO_0000264,,2011-04-07,AZ,,,,cellular automata|CA|iterative arrays|tessellation structures|tessellation automata|cellular structures|cellular spaces|homogeneous structures,"Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000297,Lobatto method,implicit Runge-Kutta method based on Lobatto quadrature,"There are three families of Lobatto methods, called IIIA, IIIB and IIIC. These are named after Rehuel Lobatto. All are implicit Runge-Kutta methods, have order 2s − 2 and they all have c1 = 0 and cs = 1.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000297,,2011-05-10,AZ,,,,implicit Runge-Kutta method based on Lobatto quadrature,"There are three families of Lobatto methods, called IIIA, IIIB and IIIC. These are named after Rehuel Lobatto. All are implicit Runge-Kutta methods, have order 2s − 2 and they all have c1 = 0 and cs = 1.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000519,population size,,"The parameter is a positive integer value to determine the size of the population, i.e., the number of individuals that survive after each generation.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000518,,,,,kisao:KISAO_0000519,,2019-01-18,AZ,,,,,"The parameter is a positive integer value to determine the size of the population, i.e., the number of individuals that survive after each generation.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000494,fully asynchronous updating policy,,An updating policy where all enabled transitions occur either independently or (partially) simultaneously. (i.e. considering all possible combinations of enabled transitions). Thus a state has as many successors as the number of combinations of transitions enabled in this state.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000492,,,,,kisao:KISAO_0000494,,,,,,,,An updating policy where all enabled transitions occur either independently or (partially) simultaneously. (i.e. considering all possible combinations of enabled transitions). Thus a state has as many successors as the number of combinations of transitions enabled in this state.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000231,Pahle hybrid method,,"The hybrid method combines the stochastic 'Gibson-Bruck's next reaction method' [http://identifiers.org/biomodels.kisao/KISAO_0000027] with different algorithms for the numerical integration of ODEs [http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000374]. The biochemical network is dynamically partitioned into a deterministic and a stochastic subnet depending on the current particle numbers in the system. The user can define limits for when a particle number should be considered low or high. The stochastic subnet contains reactions involving low numbered species as substrate or product. All the other reactions form the deterministic subnet. The two subnets are then simulated in parallel using the stochastic and deterministic solver, respectively. The reaction probabilities in the stochastic subnet are approximated as constant between two stochastic reaction events.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000231,,,AZ,,http://identifiers.org/biosimulators/copasi,true,,"The hybrid method combines the stochastic 'Gibson-Bruck's next reaction method' [http://identifiers.org/biomodels.kisao/KISAO_0000027] with different algorithms for the numerical integration of ODEs [http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000374]. The biochemical network is dynamically partitioned into a deterministic and a stochastic subnet depending on the current particle numbers in the system. The user can define limits for when a particle number should be considered low or high. The stochastic subnet contains reactions involving low numbered species as substrate or product. All the other reactions form the deterministic subnet. The two subnets are then simulated in parallel using the stochastic and deterministic solver, respectively. The reaction probabilities in the stochastic subnet are approximated as constant between two stochastic reaction events.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000647,derivative,,Rate of change of a variable with respect to another variable.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000820,,,,,kisao:KISAO_0000647,,2021-06-04,JRK,,,,,Rate of change of a variable with respect to another variable.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000673,skip reactions that produce negative species amounts,,Parameter which instructs a simulation tool to skip reactions that would result in negative amounts of species.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000673,,2021-08-23,JRK,,http://identifiers.org/biosimulators/tellurium,,,Parameter which instructs a simulation tool to skip reactions that would result in negative amounts of species.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000046,trapezoidal tau-leaping method,trapezoidal implicit tau-leaping method,"Formula for accelerated discrete efficient stochastic simulation of chemically reacting system [which] has better accuracy and stiff stability properties than the explicit and implicit [http://identifiers.org/biomodels.kisao/KISAO_0000045] tau-leaping formulas for discrete stochastic systems, and it limits to the trapezoidal rule in the deterministic regime.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000039,,,,,kisao:KISAO_0000046,,2007-10-16,dk,,,,trapezoidal implicit tau-leaping method,"Formula for accelerated discrete efficient stochastic simulation of chemically reacting system [which] has better accuracy and stiff stability properties than the explicit and implicit [http://identifiers.org/biomodels.kisao/KISAO_0000045] tau-leaping formulas for discrete stochastic systems, and it limits to the trapezoidal rule in the deterministic regime.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000640,lower bound,,A lower bound on an estimate of a quantity.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000641,,,,,kisao:KISAO_0000640,,2021-06-04,JRK,,,,,A lower bound on an estimate of a quantity.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000370,type of problem,,A characteristic describing the type of the problems which can be solved by the algorithm.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000097,,,,,kisao:KISAO_0000370,,2011-06-29,AZ,,,true,,A characteristic describing the type of the problems which can be solved by the algorithm.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000839,temperature,,The intensive quantity temperature.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000839,,06-03-2021,LPS,,,,,The intensive quantity temperature.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000434,Higham-Hall method,RK5(4)7FEql,"The equilibrium theory of Hall and Higham (1988) can be used to determine whether a Runge-Kutta algorithm will perform smoothly when stability restricts the stepsize. Higham-Hall method is a fifth order embedded Runge-Kutta method [http://identifiers.org/biomodels.kisao/KISAO_0000302], which behaves smoothly with respect to the standard type of stepsize controllers.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000435,,,,,kisao:KISAO_0000434,,2012-09-25,AZ,,,,RK5(4)7FEql,"The equilibrium theory of Hall and Higham (1988) can be used to determine whether a Runge-Kutta algorithm will perform smoothly when stability restricts the stepsize. Higham-Hall method is a fifth order embedded Runge-Kutta method [http://identifiers.org/biomodels.kisao/KISAO_0000302], which behaves smoothly with respect to the standard type of stepsize controllers.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000569,NLEQ2,Newton-type method for solveing non-linear (NL) equations (EQ)|numerical solution of nonlinear (NL) equations (EQ) especially designed for numerically sensitive problems,"Damped Newton-algorithm with rank strategy for systems of highly nonlinear equations.

Global Newton method with error oriented convergence criterion; QR-decomposition with subcondition number estimate.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000408,,,,,kisao:KISAO_0000569,,2020-10-29,JRK,,http://identifiers.org/biosimulators/tellurium,,Newton-type method for solveing non-linear (NL) equations (EQ)|numerical solution of nonlinear (NL) equations (EQ) especially designed for numerically sensitive problems,"Damped Newton-algorithm with rank strategy for systems of highly nonlinear equations.

Global Newton method with error oriented convergence criterion; QR-decomposition with subcondition number estimate.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000306,Lagrangian sliding fluid element algorithm,LSFEA|BTEX|blood-tissue exchange method,"Because the analytic solutions to the partial differential equations require convolution integration, solutions are obtained relatively efficiently by a fast numerical method. Our approach centers on the use of a sliding fluid element algorithm for capillary convection, with the time step set equal to the length step divided by the fluid velocity. Radial fluxes by permeation between plasma, interstitial fluid, and cells and axial diffusion exchanges within each time step are calculated analytically. The method enforces mass conservation unless there is regional consumption.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000306,,2011-05-11,AZ,,http://identifiers.org/biosimulators/jsim,,LSFEA|BTEX|blood-tissue exchange method,"Because the analytic solutions to the partial differential equations require convolution integration, solutions are obtained relatively efficiently by a fast numerical method. Our approach centers on the use of a sliding fluid element algorithm for capillary convection, with the time step set equal to the length step divided by the fluid velocity. Radial fluxes by permeation between plasma, interstitial fluid, and cells and axial diffusion exchanges within each time step are calculated analytically. The method enforces mass conservation unless there is regional consumption.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000536,ZVODE,"Complex-valued Variable-coefficient Ordinary Differential Equation solver, with fixed-leading-coefficient implementation|complex-valued variable-coefficient ordinary differential equation solver, with fixed-leading-coefficient implementation",ZVODE provides implicit Adams method (for non-stiff problems) and a method based on backward differentiation formulas (BDF) (for stiff problems).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000433,,,,,kisao:KISAO_0000536,,2020-10-29,JRK,,Odespy|http://identifiers.org/biosimulators/gillespy2|deSolve|SciPy,,"Complex-valued Variable-coefficient Ordinary Differential Equation solver, with fixed-leading-coefficient implementation|complex-valued variable-coefficient ordinary differential equation solver, with fixed-leading-coefficient implementation",ZVODE provides implicit Adams method (for non-stiff problems) and a method based on backward differentiation formulas (BDF) (for stiff problems).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000281,multistep method,multi-value method,A numerical method for differential equations which is based on several values of the solution.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000281,,2011-05-09,AZ,,,true,multi-value method,A numerical method for differential equations which is based on several values of the solution.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000503,simulated annealing,,"Simulated annealing is an optimization algorithm first proposed by Kirkpatrick et al. and was inspired by statistical mechanics and the way in which perfect crystals are formed. Perfect crystals are formed by first melting the substance of interest, and then cooling it very slowly. At large temperatures the particles vibrate with wide amplitude and this allows a search for global optimum. As the temperature decreases so do the vibrations until the system settles to the global optimum (the perfect crystal).

The simulated annealing optimization algorithm uses a similar concept: the objective function is considered a measure of the energy of the system and this is maintained constant for a certain number of iterations (a temperature cycle). In each iteration, the parameters are changed to a nearby location in parameter space and the new objective function value calculated; if it decreased, then the new state is accepted, if it increased then the new state is accepted with a probability that follows a Boltzmann distribution (higher temperature means higher probability of accepting the new state). After a fixed number of iterations, the stopping criterion is checked; if it is not time to stop, then the system's temperature is reduced and the algorithm continues.

Simulated annealing is a stochastic algorithm that is guaranteed to converge if ran for an infinite number of iterations. It is one of the most robust global optimization algorithms, although it is also one of the slowest. (Be warned that simulated annealing can run for hours or even days!).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000472,,,,,kisao:KISAO_0000503,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,,"Simulated annealing is an optimization algorithm first proposed by Kirkpatrick et al. and was inspired by statistical mechanics and the way in which perfect crystals are formed. Perfect crystals are formed by first melting the substance of interest, and then cooling it very slowly. At large temperatures the particles vibrate with wide amplitude and this allows a search for global optimum. As the temperature decreases so do the vibrations until the system settles to the global optimum (the perfect crystal).

The simulated annealing optimization algorithm uses a similar concept: the objective function is considered a measure of the energy of the system and this is maintained constant for a certain number of iterations (a temperature cycle). In each iteration, the parameters are changed to a nearby location in parameter space and the new objective function value calculated; if it decreased, then the new state is accepted, if it increased then the new state is accepted with a probability that follows a Boltzmann distribution (higher temperature means higher probability of accepting the new state). After a fixed number of iterations, the stopping criterion is checked; if it is not time to stop, then the system's temperature is reduced and the algorithm continues.

Simulated annealing is a stochastic algorithm that is guaranteed to converge if ran for an infinite number of iterations. It is one of the most robust global optimization algorithms, although it is also one of the slowest. (Be warned that simulated annealing can run for hours or even days!).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000408,Newton-type method,,"A method which attacks the solution of a nonlinear problem F(x) = 0 by solving a sequence of liner problems of the same kind.
The solution of the system F(x)=0 can be interpreted as a steady state of a dynamic system x'(t)=F(x(t)). The Newton approach will only work if the fixed point [http://identifiers.org/biomodels.teddy/TEDDY_0000086] of the dinamic system is attractive [http://identifiers.org/biomodels.teddy/TEDDY_0000094].",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000631,,,,,kisao:KISAO_0000408,,2012-01-18,AZ,,,,,"A method which attacks the solution of a nonlinear problem F(x) = 0 by solving a sequence of liner problems of the same kind.
The solution of the system F(x)=0 can be interpreted as a steady state of a dynamic system x'(t)=F(x(t)). The Newton approach will only work if the fixed point [http://identifiers.org/biomodels.teddy/TEDDY_0000086] of the dinamic system is attractive [http://identifiers.org/biomodels.teddy/TEDDY_0000094].",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000651,reduced costs,,The amount by which an objective function coefficient would have to improve before it would be possible for a corresponding variable to assume a positive value in the optimal solution.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000650,,,,,kisao:KISAO_0000651,,2021-06-04,JRK,,,,,The amount by which an objective function coefficient would have to improve before it would be possible for a corresponding variable to assume a positive value in the optimal solution.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000830,maximum,,The maximum of a set of values. If the values contain NaN the maximum is NaN.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000830,,2021-10-09,MK,,,,,The maximum of a set of values. If the values contain NaN the maximum is NaN.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000562,Pahle hybrid Gibson-Bruck Next Reaction method/LSODA method,,Combines a deterministic numerical integration of ODEs with a stochastic simulation algorithm. The whole biochemical network is partitioned into a deterministic and a stochastic subnet internally. The deterministic subnet contains all reactions in which only species with high particle numbers take part. All reactions with at least one low-numbered species are in the stochastic subnet. The partitioning of the biochemical network can change dynamically during the simulation. The reaction probabilities of the stochastic subnet are approximated as constant during one stochastic step. The deterministic subnet is integrated with LSODA. The stochastic subnet is simulated by the Gibson-Bruck Next Reaction Method.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000231,,,,,kisao:KISAO_0000562,,2020-10-29,JRK,,http://identifiers.org/biosimulators/copasi,,,Combines a deterministic numerical integration of ODEs with a stochastic simulation algorithm. The whole biochemical network is partitioned into a deterministic and a stochastic subnet internally. The deterministic subnet contains all reactions in which only species with high particle numbers take part. All reactions with at least one low-numbered species are in the stochastic subnet. The partitioning of the biochemical network can change dynamically during the simulation. The reaction probabilities of the stochastic subnet are approximated as constant during one stochastic step. The deterministic subnet is integrated with LSODA. The stochastic subnet is simulated by the Gibson-Bruck Next Reaction Method.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000492,asynchronous updating policy,,An updating policy where all enabled transitions (events) occur independently. Thus a state has as many successors as the number of transitions enabled in this state.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000451,,,,,kisao:KISAO_0000492,,,,,,,,An updating policy where all enabled transitions (events) occur independently. Thus a state has as many successors as the number of transitions enabled in this state.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000634,scaled property,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000820,,,,,kisao:KISAO_0000634,,2021-06-04|JRK,,,,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000238,type of method,,"A characteristic describing the way the method finds a solution, specifically whether it solves an equation involving only the current state of the system (explicit) or both the current and the later one (implicit). ",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000097,,,,,kisao:KISAO_0000238,,,AZ,,,true,,"A characteristic describing the way the method finds a solution, specifically whether it solves an equation involving only the current state of the system (explicit) or both the current and the later one (implicit). ",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000594,order,,Order of method,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000594,,2020-10-29,JRK,,,,,Order of method,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000397,preconditioning technique,,"Preconditioning is simply a means of transforming the original linear system into one which has the same solution, but which is likely to be easier to solve with an iterative solver.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000397,,2011-07-19,AZ,,,,,"Preconditioning is simply a means of transforming the original linear system into one which has the same solution, but which is likely to be easier to solve with an iterative solver.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000331,exact R-leaping algorithm,ER-leap method|exact accelerated stochastic simulation algorithm|exact R-leap method,"We present a SSA which, similar to R-leap [http://identifiers.org/biomodels.kisao/KISAO_0000330], accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by executing multiple reactions per algorithmic step, but which samples the reactant trajectories from the same probability distribution as the SSA. This 'exact R-leap' or 'ER-leap' algorithm is a modification of the R-leap algorithm which is both exact and capable of substantial speed-up over SSA.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000621,,,,,kisao:KISAO_0000331,,2011-06-03,AZ,,,,ER-leap method|exact accelerated stochastic simulation algorithm|exact R-leap method,"We present a SSA which, similar to R-leap [http://identifiers.org/biomodels.kisao/KISAO_0000330], accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by executing multiple reactions per algorithmic step, but which samples the reactant trajectories from the same probability distribution as the SSA. This 'exact R-leap' or 'ER-leap' algorithm is a modification of the R-leap algorithm which is both exact and capable of substantial speed-up over SSA.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000364,Adams predictor-corrector method,,The combination of evaluating a single explicit integration method ('Adams-Bashforth method' [http://identifiers.org/biomodels.kisao/KISAO_0000279]) (the predictor step) in order to provide a good initial guess for the successive evaluation of an implicit method ('Adams-Moulton method' [http://identifiers.org/biomodels.kisao/KISAO_0000280]) (the corrector step) using iteration.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000289,,,,,kisao:KISAO_0000364,,2011-06-16,AZ,,GSL,,,The combination of evaluating a single explicit integration method ('Adams-Bashforth method' [http://identifiers.org/biomodels.kisao/KISAO_0000279]) (the predictor step) in order to provide a good initial guess for the successive evaluation of an implicit method ('Adams-Moulton method' [http://identifiers.org/biomodels.kisao/KISAO_0000280]) (the corrector step) using iteration.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000499,dynamic flux balance analysis,DFBA,Dynamic flux balance analysis (DFBA) enables the simulation of dynamic biological systems by assuming organisms reach steady state rapidly in response to changes in the extracellular environment. DFBA couples flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model approaches with dynamic model approaches.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000622|http://www.biomodels.net/kisao/KISAO#KISAO_0000352,,,,,kisao:KISAO_0000499,,2017-09-12,AZ,,,true,DFBA,Dynamic flux balance analysis (DFBA) enables the simulation of dynamic biological systems by assuming organisms reach steady state rapidly in response to changes in the extracellular environment. DFBA couples flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model approaches with dynamic model approaches.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000608,hierarchical flux balance analysis,Hierarchical FBA|hFBA|hierarchical FBA,"Method for constraint-based simulation of hierarchically organized models, such as a model of a cellular population where each cell in the population is represented by the same species and reactions.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000437,,,,,kisao:KISAO_0000608,,2021-01-25,JRK,,http://identifiers.org/biosimulators/ibiosim,,Hierarchical FBA|hFBA|hierarchical FBA,"Method for constraint-based simulation of hierarchically organized models, such as a model of a cellular population where each cell in the population is represented by the same species and reactions.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000242,error control parameter,,Parameter controlling method accuracy.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000242,,,AZ,,,true,,Parameter controlling method accuracy.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000377,one-step method,,A numerical method for differential equations which uses one starting value at each step.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000694,,,,,kisao:KISAO_0000377,,2011-06-30,AZ,,,true,,A numerical method for differential equations which uses one starting value at each step.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000645,objective value,,Value of an objective function such as of a constraint-based model.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000831,,,,,kisao:KISAO_0000645,,2021-06-04,JRK,,,,,Value of an objective function such as of a constraint-based model.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000612,implicit 4th order Runge-Kutta method at Gaussian points,RK4IMP,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000612,,2021-01-25,JRK,,http://identifiers.org/biosimulators/ibiosim,,RK4IMP,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000470,optimization algorithm,optimization method,An optimization algorithm tries to find the minumum or maximum of an arbitrary function. It takes a function of one or several variables and determines the values for the variables so that the function value is optimal.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000470,,2015-04-23,AZ,,,true,optimization method,An optimization algorithm tries to find the minumum or maximum of an arbitrary function. It takes a function of one or several variables and determines the values for the variables so that the function value is optimal.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000003,weighted stochastic simulation algorithm,weighted SSA,"The weighted stochastic simulation algorithm manipulates the probabilities measure of biochemical systems by sampling, in order to increase the fraction of simulation runs exhibiting rare events.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000333,,,,,kisao:KISAO_0000003,,24JAN2009,NLN,,,,weighted SSA,"The weighted stochastic simulation algorithm manipulates the probabilities measure of biochemical systems by sampling, in order to increase the fraction of simulation runs exhibiting rare events.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000501,DOA-DFBA,dynamic optimization approach dynamic flux balance analysis|DOA,Dynamic Flux Balance Analysis (DFBA) [http://identifiers.org/biomodels.kisao/KISAO_0000499] couples flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model approaches with dynamic model approaches. The dynamic optimization approach (DOA) discretizes the time horizon and optimizes simultaneously over the entire time period of interest by solving a nonlinear programming problem (NLP).,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000499,,,,,kisao:KISAO_0000501,,2017-09-12,AZ,,DFBAlab,,dynamic optimization approach dynamic flux balance analysis|DOA,Dynamic Flux Balance Analysis (DFBA) [http://identifiers.org/biomodels.kisao/KISAO_0000499] couples flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model approaches with dynamic model approaches. The dynamic optimization approach (DOA) discretizes the time horizon and optimizes simultaneously over the entire time period of interest by solving a nonlinear programming problem (NLP).,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000381,midpoint method,,"The midpoint method is an explicit method for approximating the solution of the initial value problem y' = f(x,y);  y(x0) = y0 at x for a given step size h. For the midpoint method the derivative of y(x) is approximated by the symmetric difference y'(x) = ( y(x+h) - y(x-h) ) / 2h + O(h2).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000381,,2011-07-01,AZ,,,,,"The midpoint method is an explicit method for approximating the solution of the initial value problem y' = f(x,y);  y(x0) = y0 at x for a given step size h. For the midpoint method the derivative of y(x) is approximated by the symmetric difference y'(x) = ( y(x+h) - y(x-h) ) / 2h + O(h2).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000804,elasticity matrix (unscaled),,The unscaled elasticity matrix. The dimensions are reactions by species.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000804,,06-03-2021,LPS,,,,,The unscaled elasticity matrix. The dimensions are reactions by species.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000057,Brownian diffusion Smoluchowski method,,"In the Brownian diffusion Smoluchowski method, ''each molecule is treated as a point-like particle that diffuses freely in three-dimensional space. When a pair of reactive molecules collide, such as an enzyme and its substrate, a reaction occurs and the simulated reactants are replaced by products. [..] Analytic solutions are presented for some simulation parameters while others are calculated using look-up tables''. Supported chemical processes include molecular diffusion, treatment of surfaces, zeroth-order-, unimolecular-, and bimolecular reactions.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000056,,,,,kisao:KISAO_0000057,,,,,Smoldyn,,,"In the Brownian diffusion Smoluchowski method, ''each molecule is treated as a point-like particle that diffuses freely in three-dimensional space. When a pair of reactive molecules collide, such as an enzyme and its substrate, a reaction occurs and the simulated reactants are replaced by products. [..] Analytic solutions are presented for some simulation parameters while others are calculated using look-up tables''. Supported chemical processes include molecular diffusion, treatment of surfaces, zeroth-order-, unimolecular-, and bimolecular reactions.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000684,number of steps per output,,Number of simulation steps between each simulation output.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000244,,,,,kisao:KISAO_0000684,,2021-09-22,JRK,,http://identifiers.org/biosimulators/bionetgen,,,Number of simulation steps between each simulation output.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000304,Radau method,implicit Runge-Kutta method based on Radau quadrature,Implicit Runge-Kutta methods based on Radau quadrature.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000064,,,,,kisao:KISAO_0000304,,2011-05-11,AZ,,http://identifiers.org/biosimulators/jsim,,implicit Runge-Kutta method based on Radau quadrature,Implicit Runge-Kutta methods based on Radau quadrature.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000534,reactions,,FVA algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000526] parameter: reactions to compute the variablity of.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000534,,,,,,,,FVA algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000526] parameter: reactions to compute the variablity of.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000695,parameters for,,"The children parameters of this term are applied when the parent general term is implented as the more-specific value of this term.  For example:  a 'parameters for' term might be used as a child of an 'ODE Solver' ([http://identifiers.org/biomodels.kisao/KISAO_0000694]), have a value of 'KISAO_0000019' (CVODE)', and have a child term 'use stiff method' of 'true' ([http://identifiers.org/biomodels.kisao/KISAO_0000671])",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000695,,2023/05/19,lps,,,,,"The children parameters of this term are applied when the parent general term is implented as the more-specific value of this term.  For example:  a 'parameters for' term might be used as a child of an 'ODE Solver' ([http://identifiers.org/biomodels.kisao/KISAO_0000694]), have a value of 'KISAO_0000019' (CVODE)', and have a child term 'use stiff method' of 'true' ([http://identifiers.org/biomodels.kisao/KISAO_0000671])",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000349,method of finite spheres,MFS,Method of finite spheres is truly meshless in the sense that the nodes are placed and the numerical integration is performed without a mesh. Some of the novel features of the method of finite spheres are the numerical integration scheme and the way in which the Dirichlet boundary conditions are incorporated.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000369,,,,,kisao:KISAO_0000349,,2011-06-09,AZ,,,,MFS,Method of finite spheres is truly meshless in the sense that the nodes are placed and the numerical integration is performed without a mesh. Some of the novel features of the method of finite spheres are the numerical integration scheme and the way in which the Dirichlet boundary conditions are incorporated.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000662,Klarner ASP logical model trap space identification method,Klarner Answer Set Programming logical model trap space identification method,Optimization-based method rooted in answer set programming (ASP) for computing the trap spaces of a regulatory graph.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000661,,,,,kisao:KISAO_0000662,,2021-07-08,JRK,,,,Klarner Answer Set Programming logical model trap space identification method,Optimization-based method rooted in answer set programming (ASP) for computing the trap spaces of a regulatory graph.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000094,Livermore solver,,Method to solve ordinary differential equations developed at the Lawrence Livermore National Laboratory.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000694,,,,,kisao:KISAO_0000094,,2008-07-08,NLN,,,true,,Method to solve ordinary differential equations developed at the Lawrence Livermore National Laboratory.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000316,enhanced Greens function reaction dynamics,enhanced Greens function reaction dynamics|eGFRD,GFRD [http://identifiers.org/biomodels.kisao/KISAO_0000058] decomposes the multi­body reaction diffusion problem to a set of single and two body problems. Analytical solutions for two body reaction diffusion are available via Smoluchowski equation. eGFRD allows to solve each sub­problem asynchronously by introducing the concept of first passage processes.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000056,,,,,kisao:KISAO_0000316,,2011-05-23,AZ,,,,enhanced Greens function reaction dynamics|eGFRD,GFRD [http://identifiers.org/biomodels.kisao/KISAO_0000058] decomposes the multi­body reaction diffusion problem to a set of single and two body problems. Analytical solutions for two body reaction diffusion are available via Smoluchowski equation. eGFRD allows to solve each sub­problem asynchronously by introducing the concept of first passage processes.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000412,inexact Newton method,truncated Newton method|iterative Newton method,"For extremely large scale nonlinear problems the arising linear systems for the Newton corrections can no longer be solved directly ('exactly'), but must be solved iterativly ('inexactly) - which gives the name inexact Newton methods. The whole scheme then consists of an inner iteration (at Newton step k): 
F'(x[k])deltaxi[k]=-F(x[k])+ri[k], k=0,1,...
xi[k+1]=x[k]+deltaxi[k], i=0,1,..,imax[k]
in terms of residuals ri[k] and an outer iteration where, given x[0], the iterates are defined as x[k+1]=xi[k+1] for i=imax[k], k=0,1,...",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000408,,,,,kisao:KISAO_0000412,,2012-01-18,AZ,,,,truncated Newton method|iterative Newton method,"For extremely large scale nonlinear problems the arising linear systems for the Newton corrections can no longer be solved directly ('exactly'), but must be solved iterativly ('inexactly) - which gives the name inexact Newton methods. The whole scheme then consists of an inner iteration (at Newton step k): 
F'(x[k])deltaxi[k]=-F(x[k])+ri[k], k=0,1,...
xi[k+1]=x[k]+deltaxi[k], i=0,1,..,imax[k]
in terms of residuals ri[k] and an outer iteration where, given x[0], the iterates are defined as x[k+1]=xi[k+1] for i=imax[k], k=0,1,...",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000547,linear programming,LP,Method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000546,,,,,kisao:KISAO_0000547,,2020-10-29,JRK,,CPLEX|CVXOPT|SoPlex|GLPK|Mosek|MATLAB|OptLang|XPRESS|Gurobi|SciPy|ConvOpt,,LP,Method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000848,cumulative sum ignoring NaN,,"The cumulative sum of a set of values, ignoring Nan entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000848,,2021-10-09,MK,,,,,"The cumulative sum of a set of values, ignoring Nan entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000619,emc-sim,,"A variant of the stochastic simulation algorithm (SSA) in which the time to the next reaction is a constant equal to 1 time unit. In this method, the next reaction time is deterministic rather than stochastic as in SSA.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000335,,,,,kisao:KISAO_0000619,,2021-01-30,JRK,,http://identifiers.org/biosimulators/ibiosim,,,"A variant of the stochastic simulation algorithm (SSA) in which the time to the next reaction is a constant equal to 1 time unit. In this method, the next reaction time is deterministic rather than stochastic as in SSA.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000815,flux control coefficient matrix (scaled),,The scaled flux control coefficient matrix. The dimensions are reactions by reactions.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000800,,,,,kisao:KISAO_0000815,,06-03-2021,LPS,,,,,The scaled flux control coefficient matrix. The dimensions are reactions by reactions.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000477,linear solver,,the linear solver used by the solver during a Newton iteration,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000477,,2015-09-10,AZ,,http://identifiers.org/biosimulators/opencor,,,the linear solver used by the solver during a Newton iteration,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000841,mean,,The mean of a set of values. If the values contain NaN the mean is NaN.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000841,,2021-10-09,MK,,,,,The mean of a set of values. If the values contain NaN the mean is NaN.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000678,maximum number of steps for approximation,,Maximum number of steps to take in approximating an analysis.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000415,,,,,kisao:KISAO_0000678,,2021-08-23,JRK,,http://identifiers.org/biosimulators/tellurium,,,Maximum number of steps to take in approximating an analysis.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000273,hard-particle molecular dynamics,,A collision-driven molecular dynamics algorithm for a system of non-spherical particles.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000273,,2011-05-05,AZ,,,,,A collision-driven molecular dynamics algorithm for a system of non-spherical particles.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000240,implicit method type,,"Implicit methods find a solution by solving an equation involving both the current state of the system and the later one. Mathematically, if Y(t) is the current system state and Y((t+delta t) is the state at the later time (delta t is a small time step), then, for an implicit method one solves an equation G(Y(t), Y(t+delta t))=0, to find Y(t+delta t).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000238,,,,,kisao:KISAO_0000240,,,AZ,,,,,"Implicit methods find a solution by solving an equation involving both the current state of the system and the later one. Mathematically, if Y(t) is the current system state and Y((t+delta t) is the state at the later time (delta t is a small time step), then, for an implicit method one solves an equation G(Y(t), Y(t+delta t))=0, to find Y(t+delta t).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000375,delay differential equation problem,DDE problem,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000405,,,,,kisao:KISAO_0000375,,,AZ,,,,DDE problem,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000342,level set method,LSM|level-set method,"An algorithm for moving surfaces under their curvature. This algorithm rely on numerically solving Hamilton-Jacobi equations with viscous terms, using approximation techniques from hyperbolic conservation laws.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000369,,,,,kisao:KISAO_0000342,,2011-06-07,AZ,,,,LSM|level-set method,"An algorithm for moving surfaces under their curvature. This algorithm rely on numerically solving Hamilton-Jacobi equations with viscous terms, using approximation techniques from hyperbolic conservation laws.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000610,composite-rejection stochastic simulation algorithm,SSA-CR,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000333,,,,,kisao:KISAO_0000610,,2021-01-25,JRK,,http://identifiers.org/biosimulators/ibiosim,,SSA-CR,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000088,LSODA,Livermore solver for ordinary differential equations with automatic method switching,"LSODA solves systems dy/dt = f with a dense or banded Jacobian when the problem is stiff, but it automatically selects between non-stiff (Adams [http://identifiers.org/biomodels.kisao/KISAO_0000289]) and stiff (BDF [http://identifiers.org/biomodels.kisao/KISAO_0000288]) methods. It uses the non-stiff method initially, and dynamically monitors data in order to decide which method to use.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000094,,,,,kisao:KISAO_0000088,,2007-11-30,dk,,,,Livermore solver for ordinary differential equations with automatic method switching,"LSODA solves systems dy/dt = f with a dense or banded Jacobian when the problem is stiff, but it automatically selects between non-stiff (Adams [http://identifiers.org/biomodels.kisao/KISAO_0000289]) and stiff (BDF [http://identifiers.org/biomodels.kisao/KISAO_0000288]) methods. It uses the non-stiff method initially, and dynamically monitors data in order to decide which method to use.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000682,allow approximation,,Whether to find an approximate solution if an exact solution could not be found.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000682,,2021-08-23,JRK,,http://identifiers.org/biosimulators/tellurium,,,Whether to find an approximate solution if an exact solution could not be found.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000508,evolutionary programming,EP,"Evolutionary programming (EP) is a computational technique that mimics evolution and is based on reproduction and selection. An EP algorithm is composed of individuals that reproduce and compete, each one is a potential solution to the (optimization) problem and is represented by a ""genome"" where each gene corresponds to one adjustable parameter. At each generation of the EP, each individual reproduces asexually, i.e. divides into two individuals. One of these contains exactly the same ""genome"" as the parent while the other suffers some mutations (the parameter values of each gene change slightly). At the end of the generation, the algorithm has double the number of individuals. Then each of the individuals is confronted with a number of others to count how many does it outperform (the number of wins is the number of these competitors that represent worse solutions than itself). All the individuals are ranked by their number of wins, and the population is again reduced to the original number of individuals by eliminating those which have worse fitness (solutions).",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000520,,,,,kisao:KISAO_0000508,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,EP,"Evolutionary programming (EP) is a computational technique that mimics evolution and is based on reproduction and selection. An EP algorithm is composed of individuals that reproduce and compete, each one is a potential solution to the (optimization) problem and is represented by a ""genome"" where each gene corresponds to one adjustable parameter. At each generation of the EP, each individual reproduces asexually, i.e. divides into two individuals. One of these contains exactly the same ""genome"" as the parent while the other suffers some mutations (the parameter values of each gene change slightly). At the end of the generation, the algorithm has double the number of individuals. Then each of the individuals is confronted with a number of others to count how many does it outperform (the number of wins is the number of these competitors that represent worse solutions than itself). All the individuals are ranked by their number of wins, and the population is again reduced to the original number of individuals by eliminating those which have worse fitness (solutions).",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000286,Euler-Maruyama method,stochastic Euler scheme,"The Euler-Maruyama method is a method for the approximate numerical solution of a stochastic differential equation, which truncates the Ito and Stratonovich Taylor series of the exact solution after the first order stochastic terms. This converges to the Ito solution with strong global order accuracy 1/2 or weak global order accuracy 1. It is a simple generalization of the Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261] for ordinary differential equations to stochastic differential equations.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000377,,,,,kisao:KISAO_0000286,,2011-05-09,AZ,,,,stochastic Euler scheme,"The Euler-Maruyama method is a method for the approximate numerical solution of a stochastic differential equation, which truncates the Ito and Stratonovich Taylor series of the exact solution after the first order stochastic terms. This converges to the Ito solution with strong global order accuracy 1/2 or weak global order accuracy 1. It is a simple generalization of the Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261] for ordinary differential equations to stochastic differential equations.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000689,mathematical system,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000688,,,,,kisao:KISAO_0000689,,2022-03-29,EN|JRK|WL,,,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000656,use adaptive time steps,,Whether an algorithm should use adaptive or fixed time steps.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000656,,2021-06-05,JRK,,http://identifiers.org/biosimulators/tellurium,,,Whether an algorithm should use adaptive or fixed time steps.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000481,interpolate solution,,whether the solver returns an interpolated solution.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000481,,2015-09-10,AZ,,http://identifiers.org/biosimulators/opencor,,,whether the solver returns an interpolated solution.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000623,flux balance problem,,,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000370,,,,,kisao:KISAO_0000623,,2021-04-28,JRK,,,,,,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000410,simlified Newton method,,"A 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] which is characterized by keeping the initial derivative throughout the whole iteration: F'(x[0])deltax[k]=-F(x[k]), x[k+1]=x[k]+deltax[k], k=0,1,...",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000408,,,,,kisao:KISAO_0000410,,2012-01-18,AZ,,,,,"A 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] which is characterized by keeping the initial derivative throughout the whole iteration: F'(x[0])deltax[k]=-F(x[k]), x[k+1]=x[k]+deltax[k], k=0,1,...",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000578,nested algorithm,subalgorithm|nested method,A nested algorithm of an algorithm,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243,,,,,kisao:KISAO_0000578,,2020-10-29,JRK,,,,subalgorithm|nested method,A nested algorithm of an algorithm,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000290,Merson method,KM|Merson's method|Kutta-Merson method|Runge-Kutta-Merson method,A five-stage Runge-Kutta method with fourth-order accuracy.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000302,,,,,kisao:KISAO_0000290,,2011-05-10,AZ,,http://identifiers.org/biosimulators/jsim,,KM|Merson's method|Kutta-Merson method|Runge-Kutta-Merson method,A five-stage Runge-Kutta method with fourth-order accuracy.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000512,praxis,,"Praxis is a direct search method that searches for the minimum of a nonlinear function without requiring (or attempting to calculate) derivatives of that function. Praxis was developed by Brent after the method proposed by Powell. The inspiration for Praxis was the well-known method of minimising each adjustable parameter (direction) at a time - the principal axes method. In Praxis directions are chosen that do not coincide with the principal axes, in fact if the objective function is quadratic then these will be conjugate directions, assuring a fast convergence rate.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000471,,,,,kisao:KISAO_0000512,,2019-01-18,AZ,,http://identifiers.org/biosimulators/copasi,,,"Praxis is a direct search method that searches for the minimum of a nonlinear function without requiring (or attempting to calculate) derivatives of that function. Praxis was developed by Brent after the method proposed by Powell. The inspiration for Praxis was the well-known method of minimising each adjustable parameter (direction) at a time - the principal axes method. In Praxis directions are chosen that do not coincide with the principal axes, in fact if the objective function is quadratic then these will be conjugate directions, assuring a fast convergence rate.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000545,include sensitivity variables in error control mechanism,errconS,Specifies whether sensitivity variables are included or not in the error control mechanism.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000243|http://www.biomodels.net/kisao/KISAO#KISAO_0000242,,,,,kisao:KISAO_0000545,,2020-10-29,JRK,,SUNDIALS,,errconS,Specifies whether sensitivity variables are included or not in the error control mechanism.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000417,hierarchical cluster-based partial least squares regression method,"Multivariate regression method based on separating the observations into clusters and generating Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416] models within each cluster. This local regression analysis is suitable for very non-linear systems. PLSR is a regression method based on estimated latent variables, related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
Hierarchical cluster-based partial least squares regression method uses fuzzy C-means clustering, PLSR and Linear Discriminant Analysis (LDA), Quadratic Discriminant Analysis (QDA) or Naive Bayes for classification of new observations to be predicted.|HC-PLSR","Requested by Kristin Tøndel on Thursday, October 13, 2011 11:13:17 AM.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000423,,,,,kisao:KISAO_0000417,,2012-01-18,AZ,,,,"Multivariate regression method based on separating the observations into clusters and generating Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416] models within each cluster. This local regression analysis is suitable for very non-linear systems. PLSR is a regression method based on estimated latent variables, related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
Hierarchical cluster-based partial least squares regression method uses fuzzy C-means clustering, PLSR and Linear Discriminant Analysis (LDA), Quadratic Discriminant Analysis (QDA) or Naive Bayes for classification of new observations to be predicted.|HC-PLSR",,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000660,logical model stable state search method,,Method for determining the stable states of a regulatory graph.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000658,,,,,kisao:KISAO_0000660,,2021-07-08,JRK,,,true,,Method for determining the stable states of a regulatory graph.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000314,S-System power-law canonical differential equations solver,ESSYNS GMA,"Ordinary differential equations can be recast into a nonlinear canonical form called an S-system. Evidence for the generality of this class comes from extensive empirical examples that have been recast and from the discovery that sets of differential equations and functions, recognized as among the most general, are special cases of S-systems. Identification of this nonlinear canonical form suggests a radically different approach to numerical solution of ordinary differential equations. By capitalizing on the regular structure of S-systems, efficient formulas for a variable-order, variable-step Taylor-series method are developed. ",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000000,,,,,kisao:KISAO_0000314,,2011-05-20,AZ,,http://identifiers.org/biosimulators/ecell4,,ESSYNS GMA,"Ordinary differential equations can be recast into a nonlinear canonical form called an S-system. Evidence for the generality of this class comes from extensive empirical examples that have been recast and from the discovery that sets of differential equations and functions, recognized as among the most general, are special cases of S-systems. Identification of this nonlinear canonical form suggests a radically different approach to numerical solution of ordinary differential equations. By capitalizing on the regular structure of S-systems, efficient formulas for a variable-order, variable-step Taylor-series method are developed. ",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000859,variance,,The variance of a set of values. If the values contain NaN the variance is NaN.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000859,,2021-10-09,MK,,,,,The variance of a set of values. If the values contain NaN the variance is NaN.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000582,Spatiocyte method,,Lattice-based stochastic particle simulation method for biochemical reaction and diffusion processes.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000056,,,,,kisao:KISAO_0000582,,2020-10-29,JRK,,http://identifiers.org/biosimulators/ecell4,,,Lattice-based stochastic particle simulation method for biochemical reaction and diffusion processes.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000826,standard deviation ignoring NaN,,"The standard deviation of a set of values, ignoring NaN entries.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000824,,,,,kisao:KISAO_0000826,,2021-06-03,"LPS, MK",,,,,"The standard deviation of a set of values, ignoring NaN entries.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000488,seed,random seed,Random seed of a stochastic algorithm. Setting it allows one to reproduce their results while running the same algorithm on the same computer.,false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000201,,,,,kisao:KISAO_0000488,,,,,,,random seed,Random seed of a stochastic algorithm. Setting it allows one to reproduce their results while running the same algorithm on the same computer.,,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000258,neighbour distance,,"A parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. When a surface-bound molecule diffuses off of one surface panel, it can sometimes diffuse onto the neighbouring surface tile. It does so only if the neighbouring panel is declared to be a neighbour and also the neighbour is within a distance that is set with the neighbour distance statement.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000252,,,,,kisao:KISAO_0000258,,,,,,,,"A parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. When a surface-bound molecule diffuses off of one surface panel, it can sometimes diffuse onto the neighbouring surface tile. It does so only if the neighbouring panel is declared to be a neighbour and also the neighbour is within a distance that is set with the neighbour distance statement.",,,,,,,
http://www.biomodels.net/kisao/KISAO#KISAO_0000327,maximum discrete number,,"Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which controls the maximum number of molecules of some reactant species in order for the reaction to be considered discrete.",false,,,http://www.biomodels.net/kisao/KISAO#KISAO_0000252,,,,,kisao:KISAO_0000327,,2011-06-02,AZ,,,,,"Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which controls the maximum number of molecules of some reactant species in order for the reaction to be considered discrete.",,,,,,,
